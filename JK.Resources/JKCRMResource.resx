<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="addnewlead" xml:space="preserve">
    <value>Add New Lead</value>
  </data>
  <data name="customer" xml:space="preserve">
    <value>Customer</value>
  </data>
  <data name="excel" xml:space="preserve">
    <value>Excel</value>
  </data>
  <data name="export" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="firstname" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="import" xml:space="preserve">
    <value>Import</value>
  </data>
  <data name="inactivecustomer" xml:space="preserve">
    <value>Inactive Customer</value>
  </data>
  <data name="inhouse" xml:space="preserve">
    <value>In House</value>
  </data>
  <data name="junklead" xml:space="preserve">
    <value>Junk Lead</value>
  </data>
  <data name="lastname" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="lead" xml:space="preserve">
    <value>Lead</value>
  </data>
  <data name="leadneedstocallorsetupmeeting" xml:space="preserve">
    <value>Call or Setup Meeting</value>
  </data>
  <data name="middleinitial" xml:space="preserve">
    <value>M.I.</value>
  </data>
  <data name="needsfollowup" xml:space="preserve">
    <value>Needs Follow Up</value>
  </data>
  <data name="needsrequote" xml:space="preserve">
    <value>Needs Requote</value>
  </data>
  <data name="negotiation" xml:space="preserve">
    <value>Negotiation</value>
  </data>
  <data name="newcustomer" xml:space="preserve">
    <value>New Customer</value>
  </data>
  <data name="newlead" xml:space="preserve">
    <value>New Lead</value>
  </data>
  <data name="newpotential" xml:space="preserve">
    <value>New Potential</value>
  </data>
  <data name="outsource" xml:space="preserve">
    <value>Out Source</value>
  </data>
  <data name="pdf" xml:space="preserve">
    <value>PDF</value>
  </data>
  <data name="potential" xml:space="preserve">
    <value>Potential</value>
  </data>
  <data name="print" xml:space="preserve">
    <value>Print</value>
  </data>
  <data name="quotationaccepted" xml:space="preserve">
    <value>Quotation Accepted</value>
  </data>
  <data name="quotationnotaccepted" xml:space="preserve">
    <value>Quotation Not Accepted</value>
  </data>
  <data name="quotationsent" xml:space="preserve">
    <value>Quotation Sent</value>
  </data>
  <data name="readyforquotation" xml:space="preserve">
    <value>Ready For Quotation</value>
  </data>
  <data name="search" xml:space="preserve">
    <value>Search...</value>
  </data>
  <data name="unqualifiedlead" xml:space="preserve">
    <value>Unqualified Lead</value>
  </data>
  <data name="leadsource" xml:space="preserve">
    <value>Lead Source</value>
  </data>
  <data name="leadstatus" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="address1" xml:space="preserve">
    <value>Address 1</value>
  </data>
  <data name="address2" xml:space="preserve">
    <value>Address 2</value>
  </data>
  <data name="assignee" xml:space="preserve">
    <value>Assignee</value>
  </data>
  <data name="besttime" xml:space="preserve">
    <value>Best Time</value>
  </data>
  <data name="budget" xml:space="preserve">
    <value>Budget</value>
  </data>
  <data name="callback" xml:space="preserve">
    <value>Call Back</value>
  </data>
  <data name="city" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="county" xml:space="preserve">
    <value>County</value>
  </data>
  <data name="currentprovider" xml:space="preserve">
    <value>Current Provider</value>
  </data>
  <data name="email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="fax" xml:space="preserve">
    <value>Fax</value>
  </data>
  <data name="industry" xml:space="preserve">
    <value>Industry</value>
  </data>
  <data name="locations" xml:space="preserve">
    <value># of Locations</value>
  </data>
  <data name="name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="phone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="reporter" xml:space="preserve">
    <value>Reporter</value>
  </data>
  <data name="state" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="website" xml:space="preserve">
    <value>WebSite</value>
  </data>
  <data name="zipCode" xml:space="preserve">
    <value>ZipCode</value>
  </data>
  <data name="address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="companyinfo" xml:space="preserve">
    <value>Company Info</value>
  </data>
  <data name="contact" xml:space="preserve">
    <value>Contact</value>
  </data>
  <data name="assignto" xml:space="preserve">
    <value>Assign To</value>
  </data>
  <data name="note" xml:space="preserve">
    <value>Note</value>
  </data>
  <data name="phoneNumber" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="provider" xml:space="preserve">
    <value>Provider</value>
  </data>
  <data name="accudata" xml:space="preserve">
    <value>Accu Data</value>
  </data>
  <data name="act" xml:space="preserve">
    <value>Act!</value>
  </data>
  <data name="ahladirectory" xml:space="preserve">
    <value>Ahla Directory</value>
  </data>
  <data name="avaiatechppc" xml:space="preserve">
    <value>Avaiatech PPC</value>
  </data>
  <data name="bizlist" xml:space="preserve">
    <value>Biz List</value>
  </data>
  <data name="businessjournalbkoflists" xml:space="preserve">
    <value>Business Joural Bk of Lists</value>
  </data>
  <data name="callin" xml:space="preserve">
    <value>Call In</value>
  </data>
  <data name="coldcall" xml:space="preserve">
    <value>Cold Call</value>
  </data>
  <data name="corporate" xml:space="preserve">
    <value>Corporate</value>
  </data>
  <data name="crisscross" xml:space="preserve">
    <value>Criss Cross</value>
  </data>
  <data name="dunnandbradstreet" xml:space="preserve">
    <value>Dunn and Brad Street</value>
  </data>
  <data name="franchise" xml:space="preserve">
    <value>Franchise</value>
  </data>
  <data name="franchiseaccounting" xml:space="preserve">
    <value>Franchise Accounting</value>
  </data>
  <data name="goldmine" xml:space="preserve">
    <value>GoldMine</value>
  </data>
  <data name="goleadscom" xml:space="preserve">
    <value>Go Leads</value>
  </data>
  <data name="haines" xml:space="preserve">
    <value>Haines</value>
  </data>
  <data name="hoovers" xml:space="preserve">
    <value>Hoovers</value>
  </data>
  <data name="imported" xml:space="preserve">
    <value>Imported</value>
  </data>
  <data name="infousa" xml:space="preserve">
    <value>Info USA</value>
  </data>
  <data name="insideprospects" xml:space="preserve">
    <value>Inside Prospects</value>
  </data>
  <data name="janikingvehicle" xml:space="preserve">
    <value>JaniKing Vehicle</value>
  </data>
  <data name="leadlistservice" xml:space="preserve">
    <value>Lead List Service</value>
  </data>
  <data name="localchamber" xml:space="preserve">
    <value>Local Chamber</value>
  </data>
  <data name="referral" xml:space="preserve">
    <value>Referral</value>
  </data>
  <data name="regionaloffice" xml:space="preserve">
    <value>Regional Office</value>
  </data>
  <data name="salegenie" xml:space="preserve">
    <value>Sale Genie</value>
  </data>
  <data name="sorkins" xml:space="preserve">
    <value>Sorkins</value>
  </data>
  <data name="telemarketing" xml:space="preserve">
    <value>Telemarketing</value>
  </data>
  <data name="yellowpages" xml:space="preserve">
    <value>Yellow Pages</value>
  </data>
  <data name="restaurant" xml:space="preserve">
    <value>Restaurant</value>
  </data>
  <data name="retail" xml:space="preserve">
    <value>Retail</value>
  </data>
  <data name="retirementcenter" xml:space="preserve">
    <value>Retirement Center</value>
  </data>
  <data name="schoolk12" xml:space="preserve">
    <value>School K Thru 12</value>
  </data>
  <data name="shoppingcenter" xml:space="preserve">
    <value>Shopping Center</value>
  </data>
  <data name="showroom" xml:space="preserve">
    <value>Show Room</value>
  </data>
  <data name="skatingrink" xml:space="preserve">
    <value>Skating Rink</value>
  </data>
  <data name="spa" xml:space="preserve">
    <value>Spa</value>
  </data>
  <data name="sportsstadium" xml:space="preserve">
    <value>Sports Stadium</value>
  </data>
  <data name="stadiumeventsother" xml:space="preserve">
    <value>Stadium Events Other</value>
  </data>
  <data name="storageunit" xml:space="preserve">
    <value>Storage Unit</value>
  </data>
  <data name="surgery" xml:space="preserve">
    <value>Surgery </value>
  </data>
  <data name="technology" xml:space="preserve">
    <value>Technology</value>
  </data>
  <data name="telephonecompany" xml:space="preserve">
    <value>Telephone Company</value>
  </data>
  <data name="theaterarts" xml:space="preserve">
    <value>Theater Arts</value>
  </data>
  <data name="timeshare" xml:space="preserve">
    <value>Time Share</value>
  </data>
  <data name="trainingcenters" xml:space="preserve">
    <value>Training Centers</value>
  </data>
  <data name="transportationco" xml:space="preserve">
    <value>Transportation Co.</value>
  </data>
  <data name="university" xml:space="preserve">
    <value>University</value>
  </data>
  <data name="busy" xml:space="preserve">
    <value>Busy</value>
  </data>
  <data name="call" xml:space="preserve">
    <value>Call</value>
  </data>
  <data name="meeting" xml:space="preserve">
    <value>Meeting</value>
  </data>
  <data name="noanswer" xml:space="preserve">
    <value>No Answer</value>
  </data>
  <data name="wrongnumber" xml:space="preserve">
    <value>Wrong Number</value>
  </data>
  <data name="connected" xml:space="preserve">
    <value>Connected</value>
  </data>
  <data name="leftvoicemail" xml:space="preserve">
    <value>Left Voice Mail</value>
  </data>
  <data name="activities" xml:space="preserve">
    <value>Activities</value>
  </data>
  <data name="addlead" xml:space="preserve">
    <value>Add Lead</value>
  </data>
  <data name="cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="schedules" xml:space="preserve">
    <value>Schedules</value>
  </data>
  <data name="summary" xml:space="preserve">
    <value>Summary</value>
  </data>
  <data name="inactivecustomers" xml:space="preserve">
    <value>Inactive Customers</value>
  </data>
  <data name="qualifiedlead" xml:space="preserve">
    <value>Qualified Lead</value>
  </data>
  <data name="addnewactivity" xml:space="preserve">
    <value>Log New Activity</value>
  </data>
  <data name="dateandtime" xml:space="preserve">
    <value>Date &amp; Time</value>
  </data>
  <data name="outcome" xml:space="preserve">
    <value>Outcome</value>
  </data>
  <data name="save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="am" xml:space="preserve">
    <value>AM</value>
  </data>
  <data name="pm" xml:space="preserve">
    <value>PM</value>
  </data>
  <data name="commettobuy" xml:space="preserve">
    <value>Commet to Buy</value>
  </data>
  <data name="intialcommunication" xml:space="preserve">
    <value>Intial Communication</value>
  </data>
  <data name="needassessment" xml:space="preserve">
    <value>Need Assessment</value>
  </data>
  <data name="prestentation" xml:space="preserve">
    <value>Prestentation</value>
  </data>
  <data name="bidding" xml:space="preserve">
    <value>Bidding</value>
  </data>
  <data name="close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="followup" xml:space="preserve">
    <value>Follow-Up</value>
  </data>
  <data name="fvpresentation" xml:space="preserve">
    <value>FV Presentation</value>
  </data>
  <data name="pdappointment" xml:space="preserve">
    <value>PD Appointment</value>
  </data>
  <data name="contactinfo" xml:space="preserve">
    <value>Contact Info</value>
  </data>
  <data name="history" xml:space="preserve">
    <value>History</value>
  </data>
  <data name="notes" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="potentialdetail" xml:space="preserve">
    <value>Potentail Detail</value>
  </data>
  <data name="callbackorscheduleappointment" xml:space="preserve">
    <value>CallBack OR Schedule Appoinment</value>
  </data>
  <data name="franchisecontract" xml:space="preserve">
    <value>Franchise Contract</value>
  </data>
  <data name="leadgeneration" xml:space="preserve">
    <value>Lead Generation</value>
  </data>
  <data name="signagreement" xml:space="preserve">
    <value>Sign Agreement</value>
  </data>
  <data name="sold" xml:space="preserve">
    <value>Sold</value>
  </data>
  <data name="appointment" xml:space="preserve">
    <value>Appointment</value>
  </data>
  <data name="contacted" xml:space="preserve">
    <value>Contacted</value>
  </data>
  <data name="leftmessage" xml:space="preserve">
    <value>Left Message</value>
  </data>
  <data name="lettersent" xml:space="preserve">
    <value>Letter Sent</value>
  </data>
  <data name="notqualified" xml:space="preserve">
    <value>Not Qualified</value>
  </data>
  <data name="other" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="previouscustomer" xml:space="preserve">
    <value>Previous Customer</value>
  </data>
  <data name="referredtoops" xml:space="preserve">
    <value>Referred To Ops</value>
  </data>
  <data name="turndownletter" xml:space="preserve">
    <value>Turn Down Letter</value>
  </data>
  <data name="wrong" xml:space="preserve">
    <value>Wrong #</value>
  </data>
  <data name="hangup" xml:space="preserve">
    <value>Hang Up</value>
  </data>
  <data name="potentialinquary" xml:space="preserve">
    <value>Potential Inquary</value>
  </data>
  <data name="soldtolegal" xml:space="preserve">
    <value>Sold To Legal</value>
  </data>
</root>