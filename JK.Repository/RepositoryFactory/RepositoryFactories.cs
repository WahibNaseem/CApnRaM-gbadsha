using JK.Repository.Contracts;
using JK.Repository.Repositories;
using System;
using System.Collections.Generic;
using System.Data.Entity;

namespace JK.Repository.RepositoryFactory
{
    public class RepositoryFactories
    {
        private readonly IDictionary<Type, Func<DbContext, object>> _repositoryFactories;

        public RepositoryFactories()
        {
            _repositoryFactories = GetFactories();
        }

        private IDictionary<Type, Func<DbContext, object>> GetFactories()
        {
            return new Dictionary<Type, Func<DbContext, object>>
            {
                {typeof(ICustomerRepository), dbContext => new CustomerRepository(dbContext)},
                {typeof(IServiceCallLogRepository), dbContext => new ServiceCallLogRepository(dbContext)},
                //{typeof(ICallLogAssociateRepository), dbContext => new CallLogAssociateRepository(dbContext)},
                //{typeof(ICollectionsCallLogRepository), dbContext => new CollectionsCallLogRepository(dbContext)},
                {typeof(IPhoneRepository), dbContext => new PhoneRepository(dbContext)},
                {typeof(IAddressRepository), dbContext => new AddressRepository(dbContext)},
                {typeof(ICountryCodeListRepository), dbContext => new CountryCodeListRepository(dbContext)},
                {typeof(ITypeListRepository), dbContext => new TypeListRepository(dbContext)},
                {typeof(IContactTypeListRepository), dbContext => new ContactTypeListRepository(dbContext)},
                {typeof(IStateListRepository), dbContext => new StateListRepository(dbContext)},
                {typeof(IEmailRepository), dbContext => new EmailRepository(dbContext)},
                {typeof(IContactRepository), dbContext => new ContactRepository(dbContext)},
                {typeof(IStatusListRepository), dbContext => new StatusListRepository(dbContext)},
                {typeof(IStatusReasonListRepository), dbContext => new StatusReasonListRepository(dbContext)},
                {typeof(IStatusRepository), dbContext => new StatusRepository(dbContext)},
                {typeof(IBillSettingRepository), dbContext => new BillSettingRepository(dbContext)},
                {typeof(ICountyTaxAuthorityListRepository), dbContext => new CountyTaxAuthorityListRepository(dbContext)},
                {typeof(IPayTypeListRepository), dbContext => new PayTypeListRepository(dbContext)},
                {typeof(IARStatuRepository), dbContext => new ARStatuRepository(dbContext)},
                {typeof(IARStatusReasonListRepository), dbContext => new ARStatusReasonListRepository(dbContext)},
                {typeof(IContractRepository), dbContext => new ContractRepository(dbContext)},
                {typeof(IContractStatusListRepository), dbContext => new ContractStatusListRepository(dbContext)},
                {typeof(ICustomerLogRepository), dbContext => new CustomerLogRepository(dbContext)},
                {typeof(IContractDetailRepository), dbContext => new ContractDetailRepository(dbContext)},
                //{typeof(IContractDetailDescriptionRepository), dbContext => new ContractDetailDescriptionRepository(dbContext)},
                {typeof(IFrequencyListRepository), dbContext => new FrequencyListRepository(dbContext)},
                {typeof(IServiceTypeListRepository), dbContext => new ServiceTypeListRepository(dbContext)},
                {typeof(IContractTypeListRepository), dbContext => new ContractTypeListRepository(dbContext)},
                {typeof(IFranchiseeRepository), dbContext => new FranchiseeRepository(dbContext)},
                {typeof(IFranchiseeBillSettingsRepository), dbContext => new FranchiseeBillSettingsRepository(dbContext)},
                {typeof(IIdentifierTypeListRepository), dbContext => new IdentifierTypeListRepository(dbContext)},
                {typeof(IACHBankRepository), dbContext => new ACHBankRepository(dbContext)},
                {typeof(IFranchiseeFullfillmentRepository), dbContext => new FranchiseeFullfillmentRepository(dbContext)},
                {typeof(IFranchiseeContractRepository), dbContext => new FranchiseeContractRepository(dbContext)},
                {typeof(IFranchiseeContractTypeListRepository), dbContext => new FranchiseeContractTypeListRepository(dbContext)},
                {typeof(IFranchiseeFeeRepository), dbContext => new FranchiseeFeeRepository(dbContext)},
                {typeof(IFeesRepository), dbContext => new FeesRepository(dbContext)},
                {typeof(IFeeRateRepository), dbContext => new FeeRateRepository(dbContext)},
                {typeof(ILedgerAcctRepository), dbContext => new LedgerAcctRepository(dbContext)},
                {typeof(ILedgerSubAcctRepository), dbContext => new LedgerSubAcctRepository(dbContext)},
                {typeof(IGeneralLedgerRepository), dbContext => new GeneralLedgerRepository(dbContext)},
                {typeof(IGLAccountTypeListRepository), dbContext => new GLAccountTypeListRepository(dbContext)},
                {typeof(IMasterTrxRepository), dbContext => new MasterTrxRepository(dbContext)},
                {typeof(IMasterTrxTypeListRepository), dbContext => new MasterTrxTypeListRepository(dbContext)},
                {typeof(IMasterTrxStatusListRepository), dbContext => new MasterTrxStatusListRepository(dbContext)},
                {typeof(IMasterTrxDetailRepository), dbContext => new MasterTrxDetailRepository(dbContext)},
                //{typeof(IMasterTrxDetailDescriptionRepository), dbContext => new MasterTrxDetailDescriptionRepository(dbContext)},
                {typeof(IMasterTrxTaxRepository), dbContext => new MasterTrxTaxRepository(dbContext)},
                {typeof(IInvoiceRepository), dbContext => new InvoiceRepository(dbContext)},
                {typeof(IInvoiceTypeListRepository), dbContext => new InvoiceTypeListRepository(dbContext)},
                {typeof(IPaymentRepository), dbContext => new PaymentRepository(dbContext)},
                {typeof(IPaymentMethodListRepository), dbContext => new PaymentMethodListRepository(dbContext)},
                {typeof(ICreditRepository), dbContext => new CreditRepository(dbContext)},
                {typeof(ICreditReasonListRepository), dbContext => new CreditReasonListRepository(dbContext)},
                {typeof(IFranchiseeFeeListRepository), dbContext => new FranchiseeFeeListRepository(dbContext)},
                {typeof(IFeeRateTypeListRepository), dbContext => new FeeRateTypeListRepository(dbContext)},
                {typeof(IIdentificationRepository), dbContext => new IdentificationRepository(dbContext)},
                //{typeof(ImstrRegionRepository), dbContext => new mstrRegionRepository(dbContext)},
                {typeof(IAccountTypeListRepository), dbContext => new AccountTypeListRepository(dbContext)},
                //{typeof(IContractTermListRepository), dbContext => new ContractTermListRepository(dbContext)},
                {typeof(IContractStatusReasonListRepository), dbContext => new ContractStatusReasonListRepository(dbContext)},
                {typeof(ICompanyRepository),dbContext => new CompanyRepository(dbContext) },
                {typeof(IRegionConfigurationRepository), dbContext => new RegionConfigurationRepository(dbContext)},
                {typeof(ICRM_ActivityRepository), dbContext => new CRM_ActivityRepository(dbContext)},
                {typeof(ICRM_AccountRepository), dbContext => new CRM_AccountRepository(dbContext)},
                {typeof(ICRM_TimeLineRepository), dbContext => new CRM_TimeLineRepository(dbContext)},
                {typeof(ICRM_NoteRepository), dbContext => new CRM_NoteRepository(dbContext)},
                {typeof(ICRM_ScheduleRepository), dbContext => new CRM_ScheduleRepository(dbContext)},
                {typeof(ICRM_QuotationRepository), dbContext => new CRM_QuotationRepository(dbContext)},
                {typeof(ICRM_TaskRepository), dbContext => new CRM_TaskRepository(dbContext)},
                {typeof(ICRM_TaskTypeRepository), dbContext => new CRM_TaskTypeRepository(dbContext)},
                {typeof(ICRM_StageRepository), dbContext => new CRM_StageRepository(dbContext)},
                {typeof(ICRM_StageStatusRepository), dbContext => new CRM_StageStatusRepository(dbContext)},
                {typeof(ICRM_IndustryTypeRepository), dbContext => new CRM_IndustryTypeRepository(dbContext)},
                {typeof(ICRM_ProviderSourceRepository), dbContext => new CRM_ProviderSourceRepository(dbContext)},
                {typeof(ICRM_ProviderTypeRepository), dbContext => new CRM_ProviderTypeRepository(dbContext)},
                {typeof(ICRM_AccountCustomerDetailRepository), dbContext => new CRM_AccountCustomerDetailRepository(dbContext)},
                {typeof(ICRM_AccountFranchiseDetailRepository), dbContext => new CRM_AccountFranchiseDetailRepository(dbContext) },
                {typeof(ICRM_AccountTypeRepository), dbContext => new CRM_AccountTypeRepository(dbContext)},
                {typeof(ICRM_ActivityOutcomeTypeRepository), dbContext => new CRM_ActivityOutcomeTypeRepository(dbContext)},
                {typeof(ICRM_ActivityTypeRepository), dbContext => new CRM_ActivityTypeRepository(dbContext)},
                {typeof(ICRM_TimeLineTypeRepository), dbContext => new CRM_TimeLineTypeRepository(dbContext)},
                {typeof(ICRM_DocumentRepository), dbContext => new CRM_DocumentRepository(dbContext)},
                {typeof(ICRM_InitialCommunicationRepository), dbContext => new CRM_InitialCommunicationRepository(dbContext)},
                {typeof(ICRM_FvPresentationRepository), dbContext => new CRM_FvPresentationRepository(dbContext)},
                {typeof(ICRM_BiddingRepository), dbContext => new CRM_BiddingRepository(dbContext)},
                {typeof(ICRM_PdAppointmentRepository),dbContext =>  new CRM_PdAppointmentRepository(dbContext)},
                {typeof(ICRM_FollowUpRepository),dbContext => new CRM_FollowUpRepository(dbContext) },
                {typeof(ICRM_CloseRepository),dbContext => new CRM_CloseRepository(dbContext) },
                {typeof(ICRM_ContactRepository), dbContext => new CRM_ContactRepository (dbContext) },
                {typeof(ICRM_ContactTypeRepository),dbContext => new CRM_ContactTypeRepository(dbContext) },
                {typeof(ICRM_StageStatusScheduleRepository),dbContext => new CRM_StageStatusScheduleRepository(dbContext)},
                {typeof(ICRM_LeadGenerationRepository),dbContext => new CRM_LeadGenerationRepository(dbContext) },
                {typeof(ICRMCloseTempDocumentRepository) , dbContext => new CRMCloseTempDocumentRepository(dbContext) },
                {typeof(ICRMTerritoryRepository) , dbContext => new CRMTerritoryRepository(dbContext) },
                {typeof(ICRMTerritoryNewRepository) , dbContext => new CRMTerritoryNewRepository(dbContext) },
                {typeof(ICRMTerritoryAssignmentNewRepository) , dbContext => new CRMTerritoryAssignmentNewRepository(dbContext) },
                {typeof(ICRMTerritoryAssignmentRepository), dbContext => new CRMTerritoryAssignmentRepository(dbContext) },
                {typeof(ICRMSalesTerritoryAssignmentRepository), dbContext => new CRMSalesTerritoryAssignmentRepository(dbContext) },
                {typeof(ICRM_ScheduleTypeRepository), dbContext => new CRM_ScheduleTypeRepository(dbContext) },
                {typeof(ICRM_FranchiseContractRepository),dbContext => new CRM_FranchiseContractRepository(dbContext) },
                {typeof(ICRM_CallResultRepository), dbContext =>new CRM_CallResultRepository(dbContext) },
                {typeof(ICRM_NoteTypeRepository),dbContext =>new CRM_NoteTypeRespository(dbContext) },
                {typeof(ICRM_FranchiseFollowUpRepository), dbContext => new CRM_FranchiseFollowUpRepository(dbContext) },
                {typeof(ICRM_SalePossibilityTypeRepository), dbContext => new CRM_SalePossibilityTypeRespository(dbContext) },
                {typeof(ICRM_SignAgreementRepository), DbContext => new CRM_SignAgreementRepository(DbContext) },
                {typeof(ICRM_PurposeTypeRepository), DbContext => new CRM_PurposeTypeRepository(DbContext) },
                {typeof(ICRM_ReasonTypeRepository), DbContext => new CRM_ReasonTypeRepository(DbContext) },
                {typeof(ICRM_CloseTypeRepository), DbContext => new CRM_CloseTypeRepository(DbContext) },
                {typeof(ICRM_CallLogRepository), DbContext => new CRM_CallLogRepository(DbContext) },
                {typeof(IDistributionRepository), dbContext => new DistributionRepository(dbContext)},
                {typeof(IFormItemTemplateRepository), dbContext => new FormItemTemplateRepository(dbContext)},
                {typeof(IFormItemTypeRepository), dbContext => new FormItemTypeRepository(dbContext)},
                {typeof(IFormTemplateRepository), dbContext => new FormTemplateRepository(dbContext)},
                {typeof(IFormTemplateTypeRepository), dbContext => new FormTemplateTypeRepository(dbContext)},
                {typeof(IInspectionFormItemRepository), dbContext => new InspectionFormItemRepository(dbContext)},
                {typeof(IInspectionFormRepository), dbContext => new InspectionFormRepository(dbContext)},
                //{typeof(IInspectionRepository), dbContext => new InspectionRepository(dbContext)},
                {typeof(IAuthUserLoginRepository), dbContext => new AuthUserLoginRepository(dbContext) },
                {typeof(IInspectionStatusRepository), dbContext => new InspectionStatusRepository(dbContext)},
                {typeof(IBankRepository), dbContext => new BankRepository(dbContext)},
                {typeof(ILeaseRepository), dbContext => new LeaseRepository(dbContext)},
                {typeof(IAgreementTypeListRepository), dbContext => new AgreementTypeListRepository(dbContext)},
                {typeof(IValidationItemRepository), dbContext => new ValidationItemRepository(dbContext)},
                {typeof(IValidationRepository), dbContext => new ValidationRepository(dbContext)},
                {typeof(IAuthDepartmentRepository), dbContext => new AuthDepartmentRepository(dbContext)},
                {typeof(IFinderFeeRepository), dbContext => new FinderFeeRepository(dbContext)},
                {typeof(ICSActivityRepository), dbContext => new CSActivityRepository(dbContext)},
                {typeof(ICSstageRepository), dbContext => new CSstageRepository(dbContext)},
                {typeof(IFeeConfigurationRepository), dbContext => new FeeConfigurationRepository(dbContext)},
                {typeof(IAccountingFeeRebateRepository), dbContext => new AccountingFeeRebateRepository(dbContext)},

                {typeof(IFranchisee_TempRepository), dbContext => new Franchisee_TempRepository(dbContext)},
                {typeof(IAddress_TempRepository), dbContext => new Address_TempRepository(dbContext)},
                {typeof(IPhone_TempRepository), dbContext => new Phone_TempRepository(dbContext)},
                {typeof(IEmail_TempRepository), dbContext => new Email_TempRepository(dbContext)},
                {typeof(IContact_TempRepository), dbContext => new Contact_TempRepository(dbContext)},
                {typeof(IFranchiseeBillSettings_TempRepository), dbContext => new FranchiseeBillSettings_TempRepository(dbContext)},
                {typeof(IIdentification_TempRepository), dbContext => new Identification_TempRepository(dbContext)},
                {typeof(IACHBank_TempRepository), dbContext => new ACHBank_TempRepository(dbContext)},
                {typeof(IFranchiseeContract_TempRepository), dbContext => new FranchiseeContract_TempRepository(dbContext)},
                {typeof(IFranchiseeFee_TempRepository), dbContext => new FranchiseeFee_TempRepository(dbContext)},
                {typeof(IFeeConfiguration_TempRepository), dbContext => new FeeConfiguration_TempRepository(dbContext)},
                {typeof(IFranchiseeFullfillment_TempRepository), dbContext => new FranchiseeFullfillment_TempRepository(dbContext)},
                {typeof(IFranchiseeOwnerListRepository), dbContext => new FranchiseeOwnerListRepository(dbContext)},
                {typeof(IFranchiseeOwnerList_TempRepository), dbContext => new FranchiseeOwnerList_TempRepository(dbContext)},
                {typeof(ICSAccountWalkThursFormFieldRepository), dbContext => new CSAccountWalkThursFormFieldRepository(dbContext)},
                {typeof(ICSAccountWalkThursFormFieldDetailRepository), dbContext => new CSAccountWalkThursFormFieldDetailRepository(dbContext)},
            };
        }

        public Func<DbContext, object> GetRepositoryFactory<T>()
        {
            Func<DbContext, object> factory;
            _repositoryFactories.TryGetValue(typeof(T), out factory);
            return factory;
        }

    }
}
