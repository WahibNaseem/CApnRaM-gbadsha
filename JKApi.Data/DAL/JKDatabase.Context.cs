//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JKApi.Data.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class jkDatabaseEntities : DbContext
    {
        public jkDatabaseEntities()
            : base("name=jkDatabaseEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
    		modelBuilder.Entity<TransactionNumberConfig>().ToTable("TransactionNumberConfig");
        }
    
        public virtual DbSet<AccountTypeList> AccountTypeLists { get; set; }
        public virtual DbSet<ACHBank> ACHBanks { get; set; }
        public virtual DbSet<AcountTypeList> AcountTypeLists { get; set; }
        public virtual DbSet<ARStatu> ARStatus { get; set; }
        public virtual DbSet<ARStatusReasonList> ARStatusReasonLists { get; set; }
        public virtual DbSet<ContactTypeList> ContactTypeLists { get; set; }
        public virtual DbSet<ContractStatusList> ContractStatusLists { get; set; }
        public virtual DbSet<ContractStatusReasonList> ContractStatusReasonLists { get; set; }
        public virtual DbSet<ContractTypeList> ContractTypeLists { get; set; }
        public virtual DbSet<CountyTaxAuthorityList> CountyTaxAuthorityLists { get; set; }
        public virtual DbSet<CreditReasonList> CreditReasonLists { get; set; }
        public virtual DbSet<CRM_AccountType> CRM_AccountType { get; set; }
        public virtual DbSet<CRM_IndustryType> CRM_IndustryType { get; set; }
        public virtual DbSet<CRM_ProviderType> CRM_ProviderType { get; set; }
        public virtual DbSet<CRM_Quotation> CRM_Quotation { get; set; }
        public virtual DbSet<CRM_Stage> CRM_Stage { get; set; }
        public virtual DbSet<CRM_StageStatus> CRM_StageStatus { get; set; }
        public virtual DbSet<CRM_Task> CRM_Task { get; set; }
        public virtual DbSet<CRM_TaskType> CRM_TaskType { get; set; }
        public virtual DbSet<CRM_TimeLine> CRM_TimeLine { get; set; }
        public virtual DbSet<CRM_TimeLineType> CRM_TimeLineType { get; set; }
        public virtual DbSet<Email> Emails { get; set; }
        public virtual DbSet<FeeRate> FeeRates { get; set; }
        public virtual DbSet<FeeRateTypeList> FeeRateTypeLists { get; set; }
        public virtual DbSet<FranchiseeContractTypeList> FranchiseeContractTypeLists { get; set; }
        public virtual DbSet<FranchiseeFullfillment> FranchiseeFullfillments { get; set; }
        public virtual DbSet<FrequencyList> FrequencyLists { get; set; }
        public virtual DbSet<GLAccountTypeList> GLAccountTypeLists { get; set; }
        public virtual DbSet<Identification> Identifications { get; set; }
        public virtual DbSet<IdentifierTypeList> IdentifierTypeLists { get; set; }
        public virtual DbSet<InvoiceDateList> InvoiceDateLists { get; set; }
        public virtual DbSet<InvoiceMessage> InvoiceMessages { get; set; }
        public virtual DbSet<InvoiceMessageTypeList> InvoiceMessageTypeLists { get; set; }
        public virtual DbSet<InvoiceTermList> InvoiceTermLists { get; set; }
        public virtual DbSet<InvoiceTypeList> InvoiceTypeLists { get; set; }
        public virtual DbSet<LedgerSubAcct> LedgerSubAccts { get; set; }
        public virtual DbSet<MasterTrxStatusList> MasterTrxStatusLists { get; set; }
        public virtual DbSet<PayTypeList> PayTypeLists { get; set; }
        public virtual DbSet<StateList> StateLists { get; set; }
        public virtual DbSet<Status> Status { get; set; }
        public virtual DbSet<TypeList> TypeLists { get; set; }
        public virtual DbSet<DS_DueFranchiseeTotal> DS_DueFranchiseeTotal { get; set; }
        public virtual DbSet<DS_DueNegativeFranchisee> DS_DueNegativeFranchisee { get; set; }
        public virtual DbSet<DS_FranchiseChargebacks> DS_FranchiseChargebacks { get; set; }
        public virtual DbSet<DS_FranchiseTransactionFees> DS_FranchiseTransactionFees { get; set; }
        public virtual DbSet<DS_TaxLiability> DS_TaxLiability { get; set; }
        public virtual DbSet<vw_AR_PeriodOpen> vw_AR_PeriodOpen { get; set; }
        public virtual DbSet<vw_C_BillRunConfig> vw_C_BillRunConfig { get; set; }
        public virtual DbSet<vw_C_BillSettings> vw_C_BillSettings { get; set; }
        public virtual DbSet<vw_C_Contact> vw_C_Contact { get; set; }
        public virtual DbSet<vw_C_FindersFee> vw_C_FindersFee { get; set; }
        public virtual DbSet<vw_C_information> vw_C_information { get; set; }
        public virtual DbSet<vw_c_properties> vw_c_properties { get; set; }
        public virtual DbSet<vw_C_Trx> vw_C_Trx { get; set; }
        public virtual DbSet<vw_C_TrxDistribution> vw_C_TrxDistribution { get; set; }
        public virtual DbSet<vw_CustomerAddress> vw_CustomerAddress { get; set; }
        public virtual DbSet<vw_f_chargebackcreditfees> vw_f_chargebackcreditfees { get; set; }
        public virtual DbSet<vw_F_CustomerXref> vw_F_CustomerXref { get; set; }
        public virtual DbSet<vw_f_Fee> vw_f_Fee { get; set; }
        public virtual DbSet<vw_F_FindersFee> vw_F_FindersFee { get; set; }
        public virtual DbSet<vw_F_FranchiseeDistribution> vw_F_FranchiseeDistribution { get; set; }
        public virtual DbSet<vw_F_FranchiseeResponsibility> vw_F_FranchiseeResponsibility { get; set; }
        public virtual DbSet<vw_F_Information> vw_F_Information { get; set; }
        public virtual DbSet<vw_F_TrxFees> vw_F_TrxFees { get; set; }
        public virtual DbSet<vw_franchiserpt> vw_franchiserpt { get; set; }
        public virtual DbSet<vw_invoice> vw_invoice { get; set; }
        public virtual DbSet<vw_sys_bank> vw_sys_bank { get; set; }
        public virtual DbSet<vw_sys_bankregion_xref> vw_sys_bankregion_xref { get; set; }
        public virtual DbSet<vw_Sys_CountyTaxAuthority> vw_Sys_CountyTaxAuthority { get; set; }
        public virtual DbSet<vw_sys_F_PlanTypes> vw_sys_F_PlanTypes { get; set; }
        public virtual DbSet<vw_sys_Fees> vw_sys_Fees { get; set; }
        public virtual DbSet<vw_tbl_F_FranchiseeDistribution> vw_tbl_F_FranchiseeDistribution { get; set; }
        public virtual DbSet<Phone> Phones { get; set; }
        public virtual DbSet<FranchiseeBillSetting> FranchiseeBillSettings { get; set; }
        public virtual DbSet<vw_sys_config> vw_sys_config { get; set; }
        public virtual DbSet<CRM_LeadSource> CRM_LeadSource { get; set; }
        public virtual DbSet<CountryCodeList> CountryCodeLists { get; set; }
        public virtual DbSet<Batch> Batches { get; set; }
        public virtual DbSet<BatchTypeList> BatchTypeLists { get; set; }
        public virtual DbSet<vw_ChartofAccounts> vw_ChartofAccounts { get; set; }
        public virtual DbSet<RegionConfiguration> RegionConfigurations { get; set; }
        public virtual DbSet<BillingPayTypelist> BillingPayTypelists { get; set; }
        public virtual DbSet<TransactionStatusList> TransactionStatusLists { get; set; }
        public virtual DbSet<SearchDateList> SearchDateLists { get; set; }
        public virtual DbSet<ContractDetailServiceTypeList> ContractDetailServiceTypeLists { get; set; }
        public virtual DbSet<AmountTypeList> AmountTypeLists { get; set; }
        public virtual DbSet<FormItemTemplate> FormItemTemplates { get; set; }
        public virtual DbSet<FormItemType> FormItemTypes { get; set; }
        public virtual DbSet<FormTemplate> FormTemplates { get; set; }
        public virtual DbSet<FormTemplateType> FormTemplateTypes { get; set; }
        public virtual DbSet<InspectionStatu> InspectionStatus { get; set; }
        public virtual DbSet<PeriodNameList> PeriodNameLists { get; set; }
        public virtual DbSet<PeriodTypeList> PeriodTypeLists { get; set; }
        public virtual DbSet<DistributionFee> DistributionFees { get; set; }
        public virtual DbSet<CusFee> CusFees { get; set; }
        public virtual DbSet<SourceTypeList> SourceTypeLists { get; set; }
        public virtual DbSet<Bank> Banks { get; set; }
        public virtual DbSet<FranchiseeFeeList> FranchiseeFeeLists { get; set; }
        public virtual DbSet<vw_CustomerDetailFranchiseeDistribution> vw_CustomerDetailFranchiseeDistribution { get; set; }
        public virtual DbSet<MasterTrxFeeDetail> MasterTrxFeeDetails { get; set; }
        public virtual DbSet<vw_InvoiceContractDetailList> vw_InvoiceContractDetailList { get; set; }
        public virtual DbSet<BankTypeList> BankTypeLists { get; set; }
        public virtual DbSet<TransactionNumberConfig> TransactionNumberConfigs { get; set; }
        public virtual DbSet<CRM_LeadGeneration> CRM_LeadGeneration { get; set; }
        public virtual DbSet<CRM_StageStatusSchedule> CRM_StageStatusSchedule { get; set; }
        public virtual DbSet<PeriodStatusList> PeriodStatusLists { get; set; }
        public virtual DbSet<CRM_ActivityOutcomeType> CRM_ActivityOutcomeType { get; set; }
        public virtual DbSet<CRM_ActivityType> CRM_ActivityType { get; set; }
        public virtual DbSet<Region> Regions { get; set; }
        public virtual DbSet<AuthGroup> AuthGroups { get; set; }
        public virtual DbSet<AuthGroupRegion> AuthGroupRegions { get; set; }
        public virtual DbSet<AuthLoginTracking> AuthLoginTrackings { get; set; }
        public virtual DbSet<AuthMenu> AuthMenus { get; set; }
        public virtual DbSet<AuthRole> AuthRoles { get; set; }
        public virtual DbSet<AuthRoleAccess> AuthRoleAccesses { get; set; }
        public virtual DbSet<AuthUserRegion> AuthUserRegions { get; set; }
        public virtual DbSet<AuthUserRole> AuthUserRoles { get; set; }
        public virtual DbSet<AuthIPAddress> AuthIPAddresses { get; set; }
        public virtual DbSet<FundTypeList> FundTypeLists { get; set; }
        public virtual DbSet<Credit> Credits { get; set; }
        public virtual DbSet<ChargebackMethodList> ChargebackMethodLists { get; set; }
        public virtual DbSet<Contact> Contacts { get; set; }
        public virtual DbSet<vw_Distribution> vw_Distribution { get; set; }
        public virtual DbSet<CleanFrequencyList> CleanFrequencyLists { get; set; }
        public virtual DbSet<vw_FranchiseeDistributionFees> vw_FranchiseeDistributionFees { get; set; }
        public virtual DbSet<vw_Fee> vw_Fee { get; set; }
        public virtual DbSet<Vendor> Vendors { get; set; }
        public virtual DbSet<ServiceCallLogAreaList> ServiceCallLogAreaLists { get; set; }
        public virtual DbSet<StatusResultList> StatusResultLists { get; set; }
        public virtual DbSet<OrderTransaction> OrderTransactions { get; set; }
        public virtual DbSet<OrderTransactionsResponse> OrderTransactionsResponses { get; set; }
        public virtual DbSet<PaymentGatewayDetail> PaymentGatewayDetails { get; set; }
        public virtual DbSet<PaymentProfileDetail> PaymentProfileDetails { get; set; }
        public virtual DbSet<CPI> CPIs { get; set; }
        public virtual DbSet<vw_C_CustomerMaintenanceList> vw_C_CustomerMaintenanceList { get; set; }
        public virtual DbSet<ActionStatusList> ActionStatusLists { get; set; }
        public virtual DbSet<CreditFranchisee> CreditFranchisees { get; set; }
        public virtual DbSet<PaymentBillingFranchisee> PaymentBillingFranchisees { get; set; }
        public virtual DbSet<Message> Messages { get; set; }
        public virtual DbSet<MessageDetail> MessageDetails { get; set; }
        public virtual DbSet<MessageTypeList> MessageTypeLists { get; set; }
        public virtual DbSet<MailMessageTemplate> MailMessageTemplates { get; set; }
        public virtual DbSet<MailNotification> MailNotifications { get; set; }
        public virtual DbSet<CCTransaction> CCTransactions { get; set; }
        public virtual DbSet<CheckLayout> CheckLayouts { get; set; }
        public virtual DbSet<CheckLayoutElement> CheckLayoutElements { get; set; }
        public virtual DbSet<CheckLayoutElementTypeList> CheckLayoutElementTypeLists { get; set; }
        public virtual DbSet<CheckLayoutRegion> CheckLayoutRegions { get; set; }
        public virtual DbSet<FormCustomItemTemplate> FormCustomItemTemplates { get; set; }
        public virtual DbSet<Note> Notes { get; set; }
        public virtual DbSet<NotesDetail> NotesDetails { get; set; }
        public virtual DbSet<vw_ContractDetailDestribution> vw_ContractDetailDestribution { get; set; }
        public virtual DbSet<CheckCalibration> CheckCalibrations { get; set; }
        public virtual DbSet<vw_F_FinderFeeList> vw_F_FinderFeeList { get; set; }
        public virtual DbSet<vw_ContractDetail> vw_ContractDetail { get; set; }
        public virtual DbSet<vw_F_FinderFeeDetailList> vw_F_FinderFeeDetailList { get; set; }
        public virtual DbSet<CallLogAssociate> CallLogAssociates { get; set; }
        public virtual DbSet<CallLogInitiatedByTypeList> CallLogInitiatedByTypeLists { get; set; }
        public virtual DbSet<ManualCheckType> ManualCheckTypes { get; set; }
        public virtual DbSet<CheckTypeList> CheckTypeLists { get; set; }
        public virtual DbSet<RegionBank> RegionBanks { get; set; }
        public virtual DbSet<ManualCheck> ManualChecks { get; set; }
        public virtual DbSet<RegionSetting> RegionSettings { get; set; }
        public virtual DbSet<RegionTransactionNumber> RegionTransactionNumbers { get; set; }
        public virtual DbSet<RequestChangeStatusList> RequestChangeStatusLists { get; set; }
        public virtual DbSet<FileTypeList> FileTypeLists { get; set; }
        public virtual DbSet<UploadDocument> UploadDocuments { get; set; }
        public virtual DbSet<Distribution> Distributions { get; set; }
        public virtual DbSet<Period> Periods { get; set; }
        public virtual DbSet<MaintenanceDetailTypeList> MaintenanceDetailTypeLists { get; set; }
        public virtual DbSet<MaintenanceTypeList> MaintenanceTypeLists { get; set; }
        public virtual DbSet<CRM_CloseTempDocument> CRM_CloseTempDocument { get; set; }
        public virtual DbSet<CRM_Contact> CRM_Contact { get; set; }
        public virtual DbSet<CRM_ContactType> CRM_ContactType { get; set; }
        public virtual DbSet<FranchiseeManualTrxCreditReasonList> FranchiseeManualTrxCreditReasonLists { get; set; }
        public virtual DbSet<FranchsieeTrxTypeList> FranchsieeTrxTypeLists { get; set; }
        public virtual DbSet<FindersFeeAdjustmentTypeList> FindersFeeAdjustmentTypeLists { get; set; }
        public virtual DbSet<FindersFeeSchedule> FindersFeeSchedules { get; set; }
        public virtual DbSet<FindersFeeTypeList> FindersFeeTypeLists { get; set; }
        public virtual DbSet<FindersFeeAdjustment> FindersFeeAdjustments { get; set; }
        public virtual DbSet<Lease> Leases { get; set; }
        public virtual DbSet<vw_F_LeaseDetail> vw_F_LeaseDetail { get; set; }
        public virtual DbSet<FindersFeeBill> FindersFeeBills { get; set; }
        public virtual DbSet<MasterTrx> MasterTrxes { get; set; }
        public virtual DbSet<vw_ActiveCustomer> vw_ActiveCustomer { get; set; }
        public virtual DbSet<vw_ActiveFranchisee> vw_ActiveFranchisee { get; set; }
        public virtual DbSet<DepositType> DepositTypes { get; set; }
        public virtual DbSet<FranchiseeTypeList> FranchiseeTypeLists { get; set; }
        public virtual DbSet<AgreementTypeList> AgreementTypeLists { get; set; }
        public virtual DbSet<APBill> APBills { get; set; }
        public virtual DbSet<MaintenanceTemp> MaintenanceTemps { get; set; }
        public virtual DbSet<CRM_SalesTerritory_Assignment> CRM_SalesTerritory_Assignment { get; set; }
        public virtual DbSet<ManualInvoiceTmpDistribution> ManualInvoiceTmpDistributions { get; set; }
        public virtual DbSet<vw_AR_FrenchiseeTransaction> vw_AR_FrenchiseeTransaction { get; set; }
        public virtual DbSet<CRM_ScheduleType> CRM_ScheduleType { get; set; }
        public virtual DbSet<RemitTo> RemitToes { get; set; }
        public virtual DbSet<NotificationMessageForDashboard> NotificationMessageForDashboards { get; set; }
        public virtual DbSet<NotificationTypeList> NotificationTypeLists { get; set; }
        public virtual DbSet<NotificationMessage> NotificationMessages { get; set; }
        public virtual DbSet<CRMContact> CRMContacts { get; set; }
        public virtual DbSet<CRMContactType> CRMContactTypes { get; set; }
        public virtual DbSet<FeatureType> FeatureTypes { get; set; }
        public virtual DbSet<FeatureTypeEmail> FeatureTypeEmails { get; set; }
        public virtual DbSet<FranchiseeTurnaroundCheck> FranchiseeTurnaroundChecks { get; set; }
        public virtual DbSet<FranchiseeTransactionTypeList> FranchiseeTransactionTypeLists { get; set; }
        public virtual DbSet<Validation> Validations { get; set; }
        public virtual DbSet<ValidationItem> ValidationItems { get; set; }
        public virtual DbSet<ServiceTypeGroupList> ServiceTypeGroupLists { get; set; }
        public virtual DbSet<DeclineReasonList> DeclineReasonLists { get; set; }
        public virtual DbSet<CRM_Activity> CRM_Activity { get; set; }
        public virtual DbSet<CRM_Document> CRM_Document { get; set; }
        public virtual DbSet<CRM_FollowUp> CRM_FollowUp { get; set; }
        public virtual DbSet<CRM_FvPresentation> CRM_FvPresentation { get; set; }
        public virtual DbSet<CRM_Note> CRM_Note { get; set; }
        public virtual DbSet<CRM_PdAppointment> CRM_PdAppointment { get; set; }
        public virtual DbSet<FranchiseeFee> FranchiseeFees { get; set; }
        public virtual DbSet<AccountingFeeRebate> AccountingFeeRebates { get; set; }
        public virtual DbSet<FranchiseeReport> FranchiseeReports { get; set; }
        public virtual DbSet<AccountingFeeRebateConfiguration> AccountingFeeRebateConfigurations { get; set; }
        public virtual DbSet<FranchiseeReportDetail> FranchiseeReportDetails { get; set; }
        public virtual DbSet<LeaseBill> LeaseBills { get; set; }
        public virtual DbSet<Offering> Offerings { get; set; }
        public virtual DbSet<CRM_InitialCommunication> CRM_InitialCommunication { get; set; }
        public virtual DbSet<LockboxEDI> LockboxEDIs { get; set; }
        public virtual DbSet<CRM_Tmpterritoryimpdata> CRM_Tmpterritoryimpdata { get; set; }
        public virtual DbSet<CRM_Territory> CRM_Territory { get; set; }
        public virtual DbSet<BillingFrequencyList> BillingFrequencyLists { get; set; }
        public virtual DbSet<CRM_Bidding> CRM_Bidding { get; set; }
        public virtual DbSet<crm_tempallregiondata> crm_tempallregiondata { get; set; }
        public virtual DbSet<CRM_FranchiseTempData> CRM_FranchiseTempData { get; set; }
        public virtual DbSet<StatusReasonList> StatusReasonLists { get; set; }
        public virtual DbSet<StatusList> StatusLists { get; set; }
        public virtual DbSet<PeriodClosed> PeriodCloseds { get; set; }
        public virtual DbSet<CRM_RgnCardinalDirection> CRM_RgnCardinalDirection { get; set; }
        public virtual DbSet<CRM_Territory_Assignment> CRM_Territory_Assignment { get; set; }
        public virtual DbSet<MaintenanceStatusList> MaintenanceStatusLists { get; set; }
        public virtual DbSet<CRM_CallResult> CRM_CallResult { get; set; }
        public virtual DbSet<MaintenanceTempDetail> MaintenanceTempDetails { get; set; }
        public virtual DbSet<CRM_NoteType> CRM_NoteType { get; set; }
        public virtual DbSet<CRM_SalePossibilityType> CRM_SalePossibilityType { get; set; }
        public virtual DbSet<TurnAround> TurnArounds { get; set; }
        public virtual DbSet<CheckBookAmountTypeList> CheckBookAmountTypeLists { get; set; }
        public virtual DbSet<FranchiseeReportFinalized> FranchiseeReportFinalizeds { get; set; }
        public virtual DbSet<FranchiseeReportFinalizedDetail> FranchiseeReportFinalizedDetails { get; set; }
        public virtual DbSet<Adjustment> Adjustments { get; set; }
        public virtual DbSet<GeneralLedger> GeneralLedgers { get; set; }
        public virtual DbSet<MasterTrxTypeList> MasterTrxTypeLists { get; set; }
        public virtual DbSet<LedgerAcct> LedgerAccts { get; set; }
        public virtual DbSet<CRM_Territory_Assignment_New> CRM_Territory_Assignment_New { get; set; }
        public virtual DbSet<CRM_Territory_New> CRM_Territory_New { get; set; }
        public virtual DbSet<vw_MasterTrasactionList> vw_MasterTrasactionList { get; set; }
        public virtual DbSet<RoleServiceTypeList> RoleServiceTypeLists { get; set; }
        public virtual DbSet<LedgerAccount> LedgerAccounts { get; set; }
        public virtual DbSet<vw_InvoiceDetail> vw_InvoiceDetail { get; set; }
        public virtual DbSet<AuthDepartment> AuthDepartments { get; set; }
        public virtual DbSet<InspectionForm> InspectionForms { get; set; }
        public virtual DbSet<InspectionFormItem> InspectionFormItems { get; set; }
        public virtual DbSet<CRM_FranchiseFollowUp> CRM_FranchiseFollowUp { get; set; }
        public virtual DbSet<CRM_SignAgreement> CRM_SignAgreement { get; set; }
        public virtual DbSet<CRM_FranchiseContract> CRM_FranchiseContract { get; set; }
        public virtual DbSet<FranchiseeManualTransaction> FranchiseeManualTransactions { get; set; }
        public virtual DbSet<TemplateArea> TemplateAreas { get; set; }
        public virtual DbSet<TemplateAreaItem> TemplateAreaItems { get; set; }
        public virtual DbSet<TemplateAreaItemMapping> TemplateAreaItemMappings { get; set; }
        public virtual DbSet<CRM_CloseType> CRM_CloseType { get; set; }
        public virtual DbSet<CRM_ReasonType> CRM_ReasonType { get; set; }
        public virtual DbSet<FranchiseeContract> FranchiseeContracts { get; set; }
        public virtual DbSet<BillSetting> BillSettings { get; set; }
        public virtual DbSet<LockboxEDIHistory> LockboxEDIHistories { get; set; }
        public virtual DbSet<Chargeback> Chargebacks { get; set; }
        public virtual DbSet<ManualInvoiceTmpDetail> ManualInvoiceTmpDetails { get; set; }
        public virtual DbSet<Deposit> Deposits { get; set; }
        public virtual DbSet<Overflow> Overflows { get; set; }
        public virtual DbSet<ServiceTypeList> ServiceTypeLists { get; set; }
        public virtual DbSet<CheckBookTransactionTypeList> CheckBookTransactionTypeLists { get; set; }
        public virtual DbSet<CheckBook> CheckBooks { get; set; }
        public virtual DbSet<Bonus> Bonus1 { get; set; }
        public virtual DbSet<MasterTrxDetail> MasterTrxDetails { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<CRM_StageStartEnd> CRM_StageStartEnd { get; set; }
        public virtual DbSet<Fee> Fees { get; set; }
        public virtual DbSet<Address> Addresses { get; set; }
        public virtual DbSet<MasterTrxTax> MasterTrxTaxes { get; set; }
        public virtual DbSet<AuthUserLogin> AuthUserLogins { get; set; }
        public virtual DbSet<vw_AR_CustomerTransaction> vw_AR_CustomerTransaction { get; set; }
        public virtual DbSet<CSstage> CSstages { get; set; }
        public virtual DbSet<FeeConfiguration> FeeConfigurations { get; set; }
        public virtual DbSet<PaymentGroupCustomer> PaymentGroupCustomers { get; set; }
        public virtual DbSet<CRM_AccountCustomerDetail> CRM_AccountCustomerDetail { get; set; }
        public virtual DbSet<CRM_AccountFranchiseDetail> CRM_AccountFranchiseDetail { get; set; }
        public virtual DbSet<ApplySourceList> ApplySourceLists { get; set; }
        public virtual DbSet<ManualInvoiceTmp> ManualInvoiceTmps { get; set; }
        public virtual DbSet<NegativeDue> NegativeDues { get; set; }
        public virtual DbSet<FranchiseeManualTransactionTemp> FranchiseeManualTransactionTemps { get; set; }
        public virtual DbSet<CreditTemp> CreditTemps { get; set; }
        public virtual DbSet<CreditTempDetail> CreditTempDetails { get; set; }
        public virtual DbSet<CSActivity> CSActivities { get; set; }
        public virtual DbSet<Invoice> Invoices { get; set; }
        public virtual DbSet<PaymentMethodList> PaymentMethodLists { get; set; }
        public virtual DbSet<TaxRate> TaxRates { get; set; }
        public virtual DbSet<PaymentTempDetail> PaymentTempDetails { get; set; }
        public virtual DbSet<PaymentTempMasterTrx> PaymentTempMasterTrxes { get; set; }
        public virtual DbSet<PaymentTempDetailFee> PaymentTempDetailFees { get; set; }
        public virtual DbSet<PaymentTempDetailTax> PaymentTempDetailTaxes { get; set; }
        public virtual DbSet<PaymentTemp> PaymentTemps { get; set; }
        public virtual DbSet<LogList> LogLists { get; set; }
        public virtual DbSet<FranCall> FranCalls { get; set; }
        public virtual DbSet<ContractDetail> ContractDetails { get; set; }
        public virtual DbSet<Payment> Payments { get; set; }
        public virtual DbSet<CRM_Close> CRM_Close { get; set; }
        public virtual DbSet<BillingPay> BillingPays { get; set; }
        public virtual DbSet<PaymentGroup> PaymentGroups { get; set; }
        public virtual DbSet<CustomerLog> CustomerLogs { get; set; }
        public virtual DbSet<CollectionsCallLog> CollectionsCallLogs { get; set; }
        public virtual DbSet<PaidInvoiceSearchOrderByList> PaidInvoiceSearchOrderByLists { get; set; }
        public virtual DbSet<VendorInvoice> VendorInvoices { get; set; }
        public virtual DbSet<AdjustmentReasonList> AdjustmentReasonLists { get; set; }
        public virtual DbSet<GeneralLedgerTrx> GeneralLedgerTrxes { get; set; }
        public virtual DbSet<ACHBank_Temp> ACHBank_Temp { get; set; }
        public virtual DbSet<Address_Temp> Address_Temp { get; set; }
        public virtual DbSet<Contact_Temp> Contact_Temp { get; set; }
        public virtual DbSet<Email_Temp> Email_Temp { get; set; }
        public virtual DbSet<FranchiseeBillSettings_Temp> FranchiseeBillSettings_Temp { get; set; }
        public virtual DbSet<FranchiseeFee_Temp> FranchiseeFee_Temp { get; set; }
        public virtual DbSet<FranchiseeFullfillment_Temp> FranchiseeFullfillment_Temp { get; set; }
        public virtual DbSet<Identification_Temp> Identification_Temp { get; set; }
        public virtual DbSet<Phone_Temp> Phone_Temp { get; set; }
        public virtual DbSet<FeeConfiguration_Temp> FeeConfiguration_Temp { get; set; }
        public virtual DbSet<Franchisee_Temp> Franchisee_Temp { get; set; }
        public virtual DbSet<CommissionAdditionalBonusSchedule> CommissionAdditionalBonusSchedules { get; set; }
        public virtual DbSet<CommissionCompensationSchedule> CommissionCompensationSchedules { get; set; }
        public virtual DbSet<SalesPersonCommissionSchedule> SalesPersonCommissionSchedules { get; set; }
        public virtual DbSet<Contract> Contracts { get; set; }
        public virtual DbSet<CRM_Schedule> CRM_Schedule { get; set; }
        public virtual DbSet<FranchiseeContract_Temp> FranchiseeContract_Temp { get; set; }
        public virtual DbSet<ServiceCallLogTypeList> ServiceCallLogTypeLists { get; set; }
        public virtual DbSet<LogMsg> LogMsgs { get; set; }
        public virtual DbSet<SalesPersonBonusCommissionSchedule> SalesPersonBonusCommissionSchedules { get; set; }
        public virtual DbSet<CommissionPaymentSchedule> CommissionPaymentSchedules { get; set; }
        public virtual DbSet<CommissionPaymentScheduleType> CommissionPaymentScheduleTypes { get; set; }
        public virtual DbSet<CommissionTrx> CommissionTrxes { get; set; }
        public virtual DbSet<CompensationTypeList> CompensationTypeLists { get; set; }
        public virtual DbSet<CRM_PurposeType> CRM_PurposeType { get; set; }
        public virtual DbSet<CommissionSchedule> CommissionSchedules { get; set; }
        public virtual DbSet<FranchiseeOwnerList> FranchiseeOwnerLists { get; set; }
        public virtual DbSet<FranchiseeOwnerList_Temp> FranchiseeOwnerList_Temp { get; set; }
        public virtual DbSet<vw_F_FranchiseeDetail> vw_F_FranchiseeDetail { get; set; }
        public virtual DbSet<FindersFee> FindersFees { get; set; }
        public virtual DbSet<CheckTemplate> CheckTemplates { get; set; }
        public virtual DbSet<CRM_Account> CRM_Account { get; set; }
        public virtual DbSet<CSAccountWalkThursFormField> CSAccountWalkThursFormFields { get; set; }
        public virtual DbSet<CSAccountWalkThursFormFieldDetail> CSAccountWalkThursFormFieldDetails { get; set; }
        public virtual DbSet<CRM_tempImportData> CRM_tempImportData { get; set; }
        public virtual DbSet<CRM_CallLog> CRM_CallLog { get; set; }
        public virtual DbSet<CRM_ProviderSource> CRM_ProviderSource { get; set; }
        public virtual DbSet<File> Files { get; set; }
        public virtual DbSet<ServiceCallLog> ServiceCallLogs { get; set; }
        public virtual DbSet<Company> Companies { get; set; }
        public virtual DbSet<Franchisee> Franchisees { get; set; }
    
        public virtual ObjectResult<portal_spGet_F_TrxRecurringList_Result> portal_spGet_F_TrxRecurringList(Nullable<int> franchiseid, Nullable<int> transactiontype)
        {
            var franchiseidParameter = franchiseid.HasValue ?
                new ObjectParameter("franchiseid", franchiseid) :
                new ObjectParameter("franchiseid", typeof(int));
    
            var transactiontypeParameter = transactiontype.HasValue ?
                new ObjectParameter("transactiontype", transactiontype) :
                new ObjectParameter("transactiontype", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_F_TrxRecurringList_Result>("portal_spGet_F_TrxRecurringList", franchiseidParameter, transactiontypeParameter);
        }
    
        public virtual ObjectResult<spSave_F_TrxRecurring_Result> spSave_F_TrxRecurring(Nullable<int> id, Nullable<int> franid, Nullable<int> trxtypeid, Nullable<System.DateTime> trxdate, Nullable<int> credit, Nullable<int> resell, Nullable<decimal> quantity, Nullable<decimal> unitprice, Nullable<decimal> extendedprice, Nullable<decimal> subtotal, Nullable<decimal> tax, Nullable<decimal> trxtotal, string description, Nullable<int> noofpayments, Nullable<int> paymentsbilled, Nullable<System.DateTime> startdate, Nullable<int> status, Nullable<decimal> grosstotal, Nullable<int> userid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var franidParameter = franid.HasValue ?
                new ObjectParameter("franid", franid) :
                new ObjectParameter("franid", typeof(int));
    
            var trxtypeidParameter = trxtypeid.HasValue ?
                new ObjectParameter("trxtypeid", trxtypeid) :
                new ObjectParameter("trxtypeid", typeof(int));
    
            var trxdateParameter = trxdate.HasValue ?
                new ObjectParameter("trxdate", trxdate) :
                new ObjectParameter("trxdate", typeof(System.DateTime));
    
            var creditParameter = credit.HasValue ?
                new ObjectParameter("credit", credit) :
                new ObjectParameter("credit", typeof(int));
    
            var resellParameter = resell.HasValue ?
                new ObjectParameter("resell", resell) :
                new ObjectParameter("resell", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(decimal));
    
            var unitpriceParameter = unitprice.HasValue ?
                new ObjectParameter("unitprice", unitprice) :
                new ObjectParameter("unitprice", typeof(decimal));
    
            var extendedpriceParameter = extendedprice.HasValue ?
                new ObjectParameter("extendedprice", extendedprice) :
                new ObjectParameter("extendedprice", typeof(decimal));
    
            var subtotalParameter = subtotal.HasValue ?
                new ObjectParameter("subtotal", subtotal) :
                new ObjectParameter("subtotal", typeof(decimal));
    
            var taxParameter = tax.HasValue ?
                new ObjectParameter("tax", tax) :
                new ObjectParameter("tax", typeof(decimal));
    
            var trxtotalParameter = trxtotal.HasValue ?
                new ObjectParameter("trxtotal", trxtotal) :
                new ObjectParameter("trxtotal", typeof(decimal));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var noofpaymentsParameter = noofpayments.HasValue ?
                new ObjectParameter("noofpayments", noofpayments) :
                new ObjectParameter("noofpayments", typeof(int));
    
            var paymentsbilledParameter = paymentsbilled.HasValue ?
                new ObjectParameter("paymentsbilled", paymentsbilled) :
                new ObjectParameter("paymentsbilled", typeof(int));
    
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            var grosstotalParameter = grosstotal.HasValue ?
                new ObjectParameter("grosstotal", grosstotal) :
                new ObjectParameter("grosstotal", typeof(decimal));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSave_F_TrxRecurring_Result>("spSave_F_TrxRecurring", idParameter, franidParameter, trxtypeidParameter, trxdateParameter, creditParameter, resellParameter, quantityParameter, unitpriceParameter, extendedpriceParameter, subtotalParameter, taxParameter, trxtotalParameter, descriptionParameter, noofpaymentsParameter, paymentsbilledParameter, startdateParameter, statusParameter, grosstotalParameter, useridParameter);
        }
    
        public virtual ObjectResult<spGet_F_TrxRecurringList_Result> spGet_F_TrxRecurringList(Nullable<int> franchiseid, Nullable<int> transactiontype)
        {
            var franchiseidParameter = franchiseid.HasValue ?
                new ObjectParameter("franchiseid", franchiseid) :
                new ObjectParameter("franchiseid", typeof(int));
    
            var transactiontypeParameter = transactiontype.HasValue ?
                new ObjectParameter("transactiontype", transactiontype) :
                new ObjectParameter("transactiontype", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_F_TrxRecurringList_Result>("spGet_F_TrxRecurringList", franchiseidParameter, transactiontypeParameter);
        }
    
        public virtual ObjectResult<portal_spGet_F_TrxPostList_Result> portal_spGet_F_TrxPostList(string importid)
        {
            var importidParameter = importid != null ?
                new ObjectParameter("importid", importid) :
                new ObjectParameter("importid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_F_TrxPostList_Result>("portal_spGet_F_TrxPostList", importidParameter);
        }
    
        public virtual ObjectResult<portal_spDelete_AR_Credit_Result> portal_spDelete_AR_Credit(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spDelete_AR_Credit_Result>("portal_spDelete_AR_Credit", idParameter);
        }
    
        public virtual ObjectResult<portal_spDelete_AR_CTrxCredit_Result> portal_spDelete_AR_CTrxCredit(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spDelete_AR_CTrxCredit_Result>("portal_spDelete_AR_CTrxCredit", idParameter);
        }
    
        public virtual ObjectResult<portal_spDelete_AR_LockboxFile_Result> portal_spDelete_AR_LockboxFile(Nullable<int> delete, Nullable<int> userid)
        {
            var deleteParameter = delete.HasValue ?
                new ObjectParameter("delete", delete) :
                new ObjectParameter("delete", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spDelete_AR_LockboxFile_Result>("portal_spDelete_AR_LockboxFile", deleteParameter, useridParameter);
        }
    
        public virtual int portal_spDelete_AR_LockBoxPayment(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("portal_spDelete_AR_LockBoxPayment", idParameter);
        }
    
        public virtual ObjectResult<portal_spDelete_AR_OtherDeposits_Result> portal_spDelete_AR_OtherDeposits(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spDelete_AR_OtherDeposits_Result>("portal_spDelete_AR_OtherDeposits", idParameter);
        }
    
        public virtual ObjectResult<portal_spDelete_AR_OverpaymentCredit_Result> portal_spDelete_AR_OverpaymentCredit(Nullable<int> id, Nullable<int> userid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spDelete_AR_OverpaymentCredit_Result>("portal_spDelete_AR_OverpaymentCredit", idParameter, useridParameter);
        }
    
        public virtual ObjectResult<portal_spDelete_AR_Payment_Result> portal_spDelete_AR_Payment(Nullable<int> paymentid, Nullable<int> userid)
        {
            var paymentidParameter = paymentid.HasValue ?
                new ObjectParameter("paymentid", paymentid) :
                new ObjectParameter("paymentid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spDelete_AR_Payment_Result>("portal_spDelete_AR_Payment", paymentidParameter, useridParameter);
        }
    
        public virtual ObjectResult<portal_spDelete_AR_PaymentFTrx_Result> portal_spDelete_AR_PaymentFTrx(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spDelete_AR_PaymentFTrx_Result>("portal_spDelete_AR_PaymentFTrx", idParameter);
        }
    
        public virtual ObjectResult<portal_spDelete_AR_PaymentMoveReason_Result> portal_spDelete_AR_PaymentMoveReason(Nullable<int> paymentid, Nullable<int> userid)
        {
            var paymentidParameter = paymentid.HasValue ?
                new ObjectParameter("paymentid", paymentid) :
                new ObjectParameter("paymentid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spDelete_AR_PaymentMoveReason_Result>("portal_spDelete_AR_PaymentMoveReason", paymentidParameter, useridParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AR_Aging_Result> portal_spGet_AR_Aging(Nullable<int> customerid)
        {
            var customeridParameter = customerid.HasValue ?
                new ObjectParameter("customerid", customerid) :
                new ObjectParameter("customerid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_Aging_Result>("portal_spGet_AR_Aging", customeridParameter);
        }
    
        public virtual int portal_spGet_AR_AgingInvoicesDetail(Nullable<int> searchby, string searchvalue, string agingdate, string paymentdate, Nullable<int> months, Nullable<int> orderby, Nullable<int> include, Nullable<decimal> balance, Nullable<int> chargeback)
        {
            var searchbyParameter = searchby.HasValue ?
                new ObjectParameter("searchby", searchby) :
                new ObjectParameter("searchby", typeof(int));
    
            var searchvalueParameter = searchvalue != null ?
                new ObjectParameter("searchvalue", searchvalue) :
                new ObjectParameter("searchvalue", typeof(string));
    
            var agingdateParameter = agingdate != null ?
                new ObjectParameter("agingdate", agingdate) :
                new ObjectParameter("agingdate", typeof(string));
    
            var paymentdateParameter = paymentdate != null ?
                new ObjectParameter("paymentdate", paymentdate) :
                new ObjectParameter("paymentdate", typeof(string));
    
            var monthsParameter = months.HasValue ?
                new ObjectParameter("months", months) :
                new ObjectParameter("months", typeof(int));
    
            var orderbyParameter = orderby.HasValue ?
                new ObjectParameter("orderby", orderby) :
                new ObjectParameter("orderby", typeof(int));
    
            var includeParameter = include.HasValue ?
                new ObjectParameter("include", include) :
                new ObjectParameter("include", typeof(int));
    
            var balanceParameter = balance.HasValue ?
                new ObjectParameter("balance", balance) :
                new ObjectParameter("balance", typeof(decimal));
    
            var chargebackParameter = chargeback.HasValue ?
                new ObjectParameter("chargeback", chargeback) :
                new ObjectParameter("chargeback", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("portal_spGet_AR_AgingInvoicesDetail", searchbyParameter, searchvalueParameter, agingdateParameter, paymentdateParameter, monthsParameter, orderbyParameter, includeParameter, balanceParameter, chargebackParameter);
        }
    
        public virtual int portal_spGet_AR_AgingInvoicesSummary(Nullable<int> searchby, string searchvalue, string agingdate, string paymentdate, Nullable<int> months, Nullable<int> orderby, Nullable<int> include, Nullable<decimal> balance, Nullable<int> chargeback)
        {
            var searchbyParameter = searchby.HasValue ?
                new ObjectParameter("searchby", searchby) :
                new ObjectParameter("searchby", typeof(int));
    
            var searchvalueParameter = searchvalue != null ?
                new ObjectParameter("searchvalue", searchvalue) :
                new ObjectParameter("searchvalue", typeof(string));
    
            var agingdateParameter = agingdate != null ?
                new ObjectParameter("agingdate", agingdate) :
                new ObjectParameter("agingdate", typeof(string));
    
            var paymentdateParameter = paymentdate != null ?
                new ObjectParameter("paymentdate", paymentdate) :
                new ObjectParameter("paymentdate", typeof(string));
    
            var monthsParameter = months.HasValue ?
                new ObjectParameter("months", months) :
                new ObjectParameter("months", typeof(int));
    
            var orderbyParameter = orderby.HasValue ?
                new ObjectParameter("orderby", orderby) :
                new ObjectParameter("orderby", typeof(int));
    
            var includeParameter = include.HasValue ?
                new ObjectParameter("include", include) :
                new ObjectParameter("include", typeof(int));
    
            var balanceParameter = balance.HasValue ?
                new ObjectParameter("balance", balance) :
                new ObjectParameter("balance", typeof(decimal));
    
            var chargebackParameter = chargeback.HasValue ?
                new ObjectParameter("chargeback", chargeback) :
                new ObjectParameter("chargeback", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("portal_spGet_AR_AgingInvoicesSummary", searchbyParameter, searchvalueParameter, agingdateParameter, paymentdateParameter, monthsParameter, orderbyParameter, includeParameter, balanceParameter, chargebackParameter);
        }
    
        public virtual int portal_spGet_AR_Collected(string startdate, string enddate)
        {
            var startdateParameter = startdate != null ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(string));
    
            var enddateParameter = enddate != null ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("portal_spGet_AR_Collected", startdateParameter, enddateParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AR_Credit_Result> portal_spGet_AR_Credit(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_Credit_Result>("portal_spGet_AR_Credit", idParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AR_CreditDetail_Result> portal_spGet_AR_CreditDetail(Nullable<int> id, Nullable<int> creditId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var creditIdParameter = creditId.HasValue ?
                new ObjectParameter("creditId", creditId) :
                new ObjectParameter("creditId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_CreditDetail_Result>("portal_spGet_AR_CreditDetail", idParameter, creditIdParameter);
        }
    
        public virtual int portal_spGet_AR_Invoice(string searchParam, Nullable<int> searchBy)
        {
            var searchParamParameter = searchParam != null ?
                new ObjectParameter("searchParam", searchParam) :
                new ObjectParameter("searchParam", typeof(string));
    
            var searchByParameter = searchBy.HasValue ?
                new ObjectParameter("searchBy", searchBy) :
                new ObjectParameter("searchBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("portal_spGet_AR_Invoice", searchParamParameter, searchByParameter);
        }
    
        public virtual int portal_spGet_AR_InvoiceByBalance(Nullable<int> searchBy, string searchParam, Nullable<decimal> searchAmount)
        {
            var searchByParameter = searchBy.HasValue ?
                new ObjectParameter("searchBy", searchBy) :
                new ObjectParameter("searchBy", typeof(int));
    
            var searchParamParameter = searchParam != null ?
                new ObjectParameter("searchParam", searchParam) :
                new ObjectParameter("searchParam", typeof(string));
    
            var searchAmountParameter = searchAmount.HasValue ?
                new ObjectParameter("searchAmount", searchAmount) :
                new ObjectParameter("searchAmount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("portal_spGet_AR_InvoiceByBalance", searchByParameter, searchParamParameter, searchAmountParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AR_InvoiceCreditAvailable_Result> portal_spGet_AR_InvoiceCreditAvailable(Nullable<int> invoiceid)
        {
            var invoiceidParameter = invoiceid.HasValue ?
                new ObjectParameter("invoiceid", invoiceid) :
                new ObjectParameter("invoiceid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_InvoiceCreditAvailable_Result>("portal_spGet_AR_InvoiceCreditAvailable", invoiceidParameter);
        }
    
        public virtual int portal_spGet_AR_InvoiceDetail(Nullable<int> invoiceid)
        {
            var invoiceidParameter = invoiceid.HasValue ?
                new ObjectParameter("invoiceid", invoiceid) :
                new ObjectParameter("invoiceid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("portal_spGet_AR_InvoiceDetail", invoiceidParameter);
        }
    
        public virtual int portal_spGet_AR_InvoiceDetailClosed(Nullable<int> invoiceid, Nullable<int> billmonth, Nullable<int> billyear)
        {
            var invoiceidParameter = invoiceid.HasValue ?
                new ObjectParameter("invoiceid", invoiceid) :
                new ObjectParameter("invoiceid", typeof(int));
    
            var billmonthParameter = billmonth.HasValue ?
                new ObjectParameter("billmonth", billmonth) :
                new ObjectParameter("billmonth", typeof(int));
    
            var billyearParameter = billyear.HasValue ?
                new ObjectParameter("billyear", billyear) :
                new ObjectParameter("billyear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("portal_spGet_AR_InvoiceDetailClosed", invoiceidParameter, billmonthParameter, billyearParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AR_InvoiceDetailCreditAvailable_Result> portal_spGet_AR_InvoiceDetailCreditAvailable(Nullable<int> detailid)
        {
            var detailidParameter = detailid.HasValue ?
                new ObjectParameter("detailid", detailid) :
                new ObjectParameter("detailid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_InvoiceDetailCreditAvailable_Result>("portal_spGet_AR_InvoiceDetailCreditAvailable", detailidParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AR_InvoiceDistributionCount_Result> portal_spGet_AR_InvoiceDistributionCount(Nullable<int> invoiceid)
        {
            var invoiceidParameter = invoiceid.HasValue ?
                new ObjectParameter("invoiceid", invoiceid) :
                new ObjectParameter("invoiceid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_InvoiceDistributionCount_Result>("portal_spGet_AR_InvoiceDistributionCount", invoiceidParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AR_InvoiceHistory_Result> portal_spGet_AR_InvoiceHistory(Nullable<int> invoiceid)
        {
            var invoiceidParameter = invoiceid.HasValue ?
                new ObjectParameter("invoiceid", invoiceid) :
                new ObjectParameter("invoiceid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_InvoiceHistory_Result>("portal_spGet_AR_InvoiceHistory", invoiceidParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AR_InvoiceMessage_Result> portal_spGet_AR_InvoiceMessage()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_InvoiceMessage_Result>("portal_spGet_AR_InvoiceMessage");
        }
    
        public virtual int portal_spGet_AR_Invoices(Nullable<int> searchBy, string searchParam, Nullable<decimal> searchAmount, Nullable<int> billmonth, Nullable<int> billyear)
        {
            var searchByParameter = searchBy.HasValue ?
                new ObjectParameter("searchBy", searchBy) :
                new ObjectParameter("searchBy", typeof(int));
    
            var searchParamParameter = searchParam != null ?
                new ObjectParameter("searchParam", searchParam) :
                new ObjectParameter("searchParam", typeof(string));
    
            var searchAmountParameter = searchAmount.HasValue ?
                new ObjectParameter("searchAmount", searchAmount) :
                new ObjectParameter("searchAmount", typeof(decimal));
    
            var billmonthParameter = billmonth.HasValue ?
                new ObjectParameter("billmonth", billmonth) :
                new ObjectParameter("billmonth", typeof(int));
    
            var billyearParameter = billyear.HasValue ?
                new ObjectParameter("billyear", billyear) :
                new ObjectParameter("billyear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("portal_spGet_AR_Invoices", searchByParameter, searchParamParameter, searchAmountParameter, billmonthParameter, billyearParameter);
        }
    
        public virtual int portal_spGet_AR_InvoicesCreditBalance(Nullable<int> searchBy, string searchParam)
        {
            var searchByParameter = searchBy.HasValue ?
                new ObjectParameter("searchBy", searchBy) :
                new ObjectParameter("searchBy", typeof(int));
    
            var searchParamParameter = searchParam != null ?
                new ObjectParameter("searchParam", searchParam) :
                new ObjectParameter("searchParam", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("portal_spGet_AR_InvoicesCreditBalance", searchByParameter, searchParamParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AR_LastPeriod_Result> portal_spGet_AR_LastPeriod()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_LastPeriod_Result>("portal_spGet_AR_LastPeriod");
        }
    
        public virtual ObjectResult<portal_spGet_AR_LockBoxInvoiceList_Result> portal_spGet_AR_LockBoxInvoiceList(string checknumber)
        {
            var checknumberParameter = checknumber != null ?
                new ObjectParameter("checknumber", checknumber) :
                new ObjectParameter("checknumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_LockBoxInvoiceList_Result>("portal_spGet_AR_LockBoxInvoiceList", checknumberParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AR_LockBoxList_Result> portal_spGet_AR_LockBoxList(string checknumber)
        {
            var checknumberParameter = checknumber != null ?
                new ObjectParameter("checknumber", checknumber) :
                new ObjectParameter("checknumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_LockBoxList_Result>("portal_spGet_AR_LockBoxList", checknumberParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AR_LockBoxPayment_Result> portal_spGet_AR_LockBoxPayment(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_LockBoxPayment_Result>("portal_spGet_AR_LockBoxPayment", idParameter);
        }
    
        public virtual int portal_spGet_AR_Log(Nullable<int> datetype, string startdate, string enddate)
        {
            var datetypeParameter = datetype.HasValue ?
                new ObjectParameter("datetype", datetype) :
                new ObjectParameter("datetype", typeof(int));
    
            var startdateParameter = startdate != null ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(string));
    
            var enddateParameter = enddate != null ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("portal_spGet_AR_Log", datetypeParameter, startdateParameter, enddateParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AR_OpenPaymentsForDeposit_Result> portal_spGet_AR_OpenPaymentsForDeposit()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_OpenPaymentsForDeposit_Result>("portal_spGet_AR_OpenPaymentsForDeposit");
        }
    
        public virtual ObjectResult<portal_spGet_AR_OtherDeposits_Result> portal_spGet_AR_OtherDeposits(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_OtherDeposits_Result>("portal_spGet_AR_OtherDeposits", idParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AR_OtherDepositsList_Result> portal_spGet_AR_OtherDepositsList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_OtherDepositsList_Result>("portal_spGet_AR_OtherDepositsList");
        }
    
        public virtual ObjectResult<portal_spGet_AR_Payment_Result> portal_spGet_AR_Payment(Nullable<int> searchparam, Nullable<int> searchby)
        {
            var searchparamParameter = searchparam.HasValue ?
                new ObjectParameter("searchparam", searchparam) :
                new ObjectParameter("searchparam", typeof(int));
    
            var searchbyParameter = searchby.HasValue ?
                new ObjectParameter("searchby", searchby) :
                new ObjectParameter("searchby", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_Payment_Result>("portal_spGet_AR_Payment", searchparamParameter, searchbyParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AR_PaymentChargeback_Result> portal_spGet_AR_PaymentChargeback(Nullable<int> id, Nullable<int> listby)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var listbyParameter = listby.HasValue ?
                new ObjectParameter("listby", listby) :
                new ObjectParameter("listby", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_PaymentChargeback_Result>("portal_spGet_AR_PaymentChargeback", idParameter, listbyParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AR_PaymentDetail_Result> portal_spGet_AR_PaymentDetail(Nullable<int> id, Nullable<int> searchby)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var searchbyParameter = searchby.HasValue ?
                new ObjectParameter("searchby", searchby) :
                new ObjectParameter("searchby", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_PaymentDetail_Result>("portal_spGet_AR_PaymentDetail", idParameter, searchbyParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AR_PaymentFTrxs_Result> portal_spGet_AR_PaymentFTrxs(Nullable<int> id, Nullable<int> listby)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var listbyParameter = listby.HasValue ?
                new ObjectParameter("listby", listby) :
                new ObjectParameter("listby", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_PaymentFTrxs_Result>("portal_spGet_AR_PaymentFTrxs", idParameter, listbyParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AR_Payments_Result> portal_spGet_AR_Payments(string checkdate, string entereddate)
        {
            var checkdateParameter = checkdate != null ?
                new ObjectParameter("checkdate", checkdate) :
                new ObjectParameter("checkdate", typeof(string));
    
            var entereddateParameter = entereddate != null ?
                new ObjectParameter("entereddate", entereddate) :
                new ObjectParameter("entereddate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_Payments_Result>("portal_spGet_AR_Payments", checkdateParameter, entereddateParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AR_Period_Result> portal_spGet_AR_Period(Nullable<int> type)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_Period_Result>("portal_spGet_AR_Period", typeParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AR_PeriodClosed_Result> portal_spGet_AR_PeriodClosed()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_PeriodClosed_Result>("portal_spGet_AR_PeriodClosed");
        }
    
        public virtual ObjectResult<portal_spGet_AR_PeriodFranchiseReportsGenerated_Result> portal_spGet_AR_PeriodFranchiseReportsGenerated()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_PeriodFranchiseReportsGenerated_Result>("portal_spGet_AR_PeriodFranchiseReportsGenerated");
        }
    
        public virtual ObjectResult<portal_spGet_AR_PeriodOpen_Result> portal_spGet_AR_PeriodOpen()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_PeriodOpen_Result>("portal_spGet_AR_PeriodOpen");
        }
    
        public virtual ObjectResult<portal_spGet_AR_TraverseGLUpdate_Result> portal_spGet_AR_TraverseGLUpdate(Nullable<int> billmonth, Nullable<int> billyear)
        {
            var billmonthParameter = billmonth.HasValue ?
                new ObjectParameter("billmonth", billmonth) :
                new ObjectParameter("billmonth", typeof(int));
    
            var billyearParameter = billyear.HasValue ?
                new ObjectParameter("billyear", billyear) :
                new ObjectParameter("billyear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_TraverseGLUpdate_Result>("portal_spGet_AR_TraverseGLUpdate", billmonthParameter, billyearParameter);
        }
    
        public virtual int portal_spProcess_AR_LockBox(Nullable<int> billmonth, Nullable<int> billyear, Nullable<int> userid, Nullable<int> updatelockboxcheckbalance)
        {
            var billmonthParameter = billmonth.HasValue ?
                new ObjectParameter("billmonth", billmonth) :
                new ObjectParameter("billmonth", typeof(int));
    
            var billyearParameter = billyear.HasValue ?
                new ObjectParameter("billyear", billyear) :
                new ObjectParameter("billyear", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var updatelockboxcheckbalanceParameter = updatelockboxcheckbalance.HasValue ?
                new ObjectParameter("updatelockboxcheckbalance", updatelockboxcheckbalance) :
                new ObjectParameter("updatelockboxcheckbalance", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("portal_spProcess_AR_LockBox", billmonthParameter, billyearParameter, useridParameter, updatelockboxcheckbalanceParameter);
        }
    
        public virtual ObjectResult<portal_spProcess_AR_LockboxFile_Result> portal_spProcess_AR_LockboxFile(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spProcess_AR_LockboxFile_Result>("portal_spProcess_AR_LockboxFile", useridParameter);
        }
    
        public virtual ObjectResult<portal_spGet_R_RevenueList_Result> portal_spGet_R_RevenueList(Nullable<int> billmonth, Nullable<int> billyear)
        {
            var billmonthParameter = billmonth.HasValue ?
                new ObjectParameter("billmonth", billmonth) :
                new ObjectParameter("billmonth", typeof(int));
    
            var billyearParameter = billyear.HasValue ?
                new ObjectParameter("billyear", billyear) :
                new ObjectParameter("billyear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_R_RevenueList_Result>("portal_spGet_R_RevenueList", billmonthParameter, billyearParameter);
        }
    
        public virtual ObjectResult<portal_spGet_R_MonthlyTax_Result> portal_spGet_R_MonthlyTax(Nullable<int> billmonth, Nullable<int> billyear, Nullable<int> userid)
        {
            var billmonthParameter = billmonth.HasValue ?
                new ObjectParameter("billmonth", billmonth) :
                new ObjectParameter("billmonth", typeof(int));
    
            var billyearParameter = billyear.HasValue ?
                new ObjectParameter("billyear", billyear) :
                new ObjectParameter("billyear", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_R_MonthlyTax_Result>("portal_spGet_R_MonthlyTax", billmonthParameter, billyearParameter, useridParameter);
        }
    
        public virtual ObjectResult<portal_spget_F_LeaseHistory_Result> portal_spget_F_LeaseHistory(Nullable<int> franchiseeId)
        {
            var franchiseeIdParameter = franchiseeId.HasValue ?
                new ObjectParameter("franchiseeId", franchiseeId) :
                new ObjectParameter("franchiseeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spget_F_LeaseHistory_Result>("portal_spget_F_LeaseHistory", franchiseeIdParameter);
        }
    
        public virtual ObjectResult<portal_spget_F_LeaseHistory_all_Result> portal_spget_F_LeaseHistory_all(Nullable<int> franchiseeId)
        {
            var franchiseeIdParameter = franchiseeId.HasValue ?
                new ObjectParameter("franchiseeId", franchiseeId) :
                new ObjectParameter("franchiseeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spget_F_LeaseHistory_all_Result>("portal_spget_F_LeaseHistory_all", franchiseeIdParameter);
        }
    
        public virtual ObjectResult<portal_spget_F_LeaseHistory_New_Result> portal_spget_F_LeaseHistory_New(Nullable<int> franchiseeId)
        {
            var franchiseeIdParameter = franchiseeId.HasValue ?
                new ObjectParameter("franchiseeId", franchiseeId) :
                new ObjectParameter("franchiseeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spget_F_LeaseHistory_New_Result>("portal_spget_F_LeaseHistory_New", franchiseeIdParameter);
        }
    
        public virtual ObjectResult<portal_spget_F_LeaseHistory_Specific_Result> portal_spget_F_LeaseHistory_Specific()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spget_F_LeaseHistory_Specific_Result>("portal_spget_F_LeaseHistory_Specific");
        }
    
        public virtual ObjectResult<portal_spGet_F_Information_Result> portal_spGet_F_Information(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_F_Information_Result>("portal_spGet_F_Information", idParameter);
        }
    
        public virtual ObjectResult<portal_spGet_F_Information_all_Result> portal_spGet_F_Information_all(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_F_Information_all_Result>("portal_spGet_F_Information_all", idParameter);
        }
    
        public virtual ObjectResult<portal_spGet_F_Information_Specific_Result> portal_spGet_F_Information_Specific(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_F_Information_Specific_Result>("portal_spGet_F_Information_Specific", idParameter);
        }
    
        public virtual ObjectResult<portal_spGet_F_Lease_Result> portal_spGet_F_Lease(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_F_Lease_Result>("portal_spGet_F_Lease", idParameter);
        }
    
        public virtual ObjectResult<portal_spget_F_LeaseHistoryNew_Result> portal_spget_F_LeaseHistoryNew(Nullable<int> franchiseeId)
        {
            var franchiseeIdParameter = franchiseeId.HasValue ?
                new ObjectParameter("franchiseeId", franchiseeId) :
                new ObjectParameter("franchiseeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spget_F_LeaseHistoryNew_Result>("portal_spget_F_LeaseHistoryNew", franchiseeIdParameter);
        }
    
        public virtual int portal_spGet_R_CorporateDues(Nullable<int> month, Nullable<int> year)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("portal_spGet_R_CorporateDues", monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<portal_spDelete_AP_RegisterAdjustment_Result> portal_spDelete_AP_RegisterAdjustment(Nullable<int> registerid)
        {
            var registeridParameter = registerid.HasValue ?
                new ObjectParameter("registerid", registerid) :
                new ObjectParameter("registerid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spDelete_AP_RegisterAdjustment_Result>("portal_spDelete_AP_RegisterAdjustment", registeridParameter);
        }
    
        public virtual int portal_spGet_AP_IsBankInUse(string bankid)
        {
            var bankidParameter = bankid != null ?
                new ObjectParameter("bankid", bankid) :
                new ObjectParameter("bankid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("portal_spGet_AP_IsBankInUse", bankidParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AP_RegisterAdjustment_Result> portal_spGet_AP_RegisterAdjustment()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AP_RegisterAdjustment_Result>("portal_spGet_AP_RegisterAdjustment");
        }
    
        public virtual ObjectResult<portal_spReconcilePost_AP_Register_Result> portal_spReconcilePost_AP_Register(Nullable<int> userid)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spReconcilePost_AP_Register_Result>("portal_spReconcilePost_AP_Register", useridParameter);
        }
    
        public virtual ObjectResult<portal_spReconcileUpdate_AP_Register_Result> portal_spReconcileUpdate_AP_Register(Nullable<int> id, Nullable<int> reconcilevalue)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var reconcilevalueParameter = reconcilevalue.HasValue ?
                new ObjectParameter("reconcilevalue", reconcilevalue) :
                new ObjectParameter("reconcilevalue", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spReconcileUpdate_AP_Register_Result>("portal_spReconcileUpdate_AP_Register", idParameter, reconcilevalueParameter);
        }
    
        public virtual ObjectResult<portal_spReset_AR_LockboxPayment_Result> portal_spReset_AR_LockboxPayment(string id, Nullable<int> invoiceid)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var invoiceidParameter = invoiceid.HasValue ?
                new ObjectParameter("invoiceid", invoiceid) :
                new ObjectParameter("invoiceid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spReset_AR_LockboxPayment_Result>("portal_spReset_AR_LockboxPayment", idParameter, invoiceidParameter);
        }
    
        public virtual ObjectResult<portal_spSave_AP_RegisterAdjustment_Result> portal_spSave_AP_RegisterAdjustment(Nullable<int> id, Nullable<int> payeeid, string payeeName, string payeeAddress, string payeeCity, string payeeState, string payeePostalCode, Nullable<System.DateTime> transactionDate, Nullable<decimal> amount, string checkNumber, string description, Nullable<int> typeId, Nullable<int> reprintedId, Nullable<decimal> deductions, Nullable<decimal> income, Nullable<int> voidedId, Nullable<int> reconciled, Nullable<decimal> amount1099, Nullable<int> userid, Nullable<int> adjustment, Nullable<int> fromregisterid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var payeeidParameter = payeeid.HasValue ?
                new ObjectParameter("payeeid", payeeid) :
                new ObjectParameter("payeeid", typeof(int));
    
            var payeeNameParameter = payeeName != null ?
                new ObjectParameter("payeeName", payeeName) :
                new ObjectParameter("payeeName", typeof(string));
    
            var payeeAddressParameter = payeeAddress != null ?
                new ObjectParameter("payeeAddress", payeeAddress) :
                new ObjectParameter("payeeAddress", typeof(string));
    
            var payeeCityParameter = payeeCity != null ?
                new ObjectParameter("payeeCity", payeeCity) :
                new ObjectParameter("payeeCity", typeof(string));
    
            var payeeStateParameter = payeeState != null ?
                new ObjectParameter("payeeState", payeeState) :
                new ObjectParameter("payeeState", typeof(string));
    
            var payeePostalCodeParameter = payeePostalCode != null ?
                new ObjectParameter("payeePostalCode", payeePostalCode) :
                new ObjectParameter("payeePostalCode", typeof(string));
    
            var transactionDateParameter = transactionDate.HasValue ?
                new ObjectParameter("transactionDate", transactionDate) :
                new ObjectParameter("transactionDate", typeof(System.DateTime));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var checkNumberParameter = checkNumber != null ?
                new ObjectParameter("checkNumber", checkNumber) :
                new ObjectParameter("checkNumber", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("description", description) :
                new ObjectParameter("description", typeof(string));
    
            var typeIdParameter = typeId.HasValue ?
                new ObjectParameter("typeId", typeId) :
                new ObjectParameter("typeId", typeof(int));
    
            var reprintedIdParameter = reprintedId.HasValue ?
                new ObjectParameter("reprintedId", reprintedId) :
                new ObjectParameter("reprintedId", typeof(int));
    
            var deductionsParameter = deductions.HasValue ?
                new ObjectParameter("deductions", deductions) :
                new ObjectParameter("deductions", typeof(decimal));
    
            var incomeParameter = income.HasValue ?
                new ObjectParameter("income", income) :
                new ObjectParameter("income", typeof(decimal));
    
            var voidedIdParameter = voidedId.HasValue ?
                new ObjectParameter("voidedId", voidedId) :
                new ObjectParameter("voidedId", typeof(int));
    
            var reconciledParameter = reconciled.HasValue ?
                new ObjectParameter("reconciled", reconciled) :
                new ObjectParameter("reconciled", typeof(int));
    
            var amount1099Parameter = amount1099.HasValue ?
                new ObjectParameter("amount1099", amount1099) :
                new ObjectParameter("amount1099", typeof(decimal));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var adjustmentParameter = adjustment.HasValue ?
                new ObjectParameter("adjustment", adjustment) :
                new ObjectParameter("adjustment", typeof(int));
    
            var fromregisteridParameter = fromregisterid.HasValue ?
                new ObjectParameter("fromregisterid", fromregisterid) :
                new ObjectParameter("fromregisterid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spSave_AP_RegisterAdjustment_Result>("portal_spSave_AP_RegisterAdjustment", idParameter, payeeidParameter, payeeNameParameter, payeeAddressParameter, payeeCityParameter, payeeStateParameter, payeePostalCodeParameter, transactionDateParameter, amountParameter, checkNumberParameter, descriptionParameter, typeIdParameter, reprintedIdParameter, deductionsParameter, incomeParameter, voidedIdParameter, reconciledParameter, amount1099Parameter, useridParameter, adjustmentParameter, fromregisteridParameter);
        }
    
        public virtual int portal_spSave_AP_RegisterAdjustmentDetalils(Nullable<int> id, Nullable<int> registerId, string number, string name, string address, string city, string state, string postalCode, Nullable<int> payeeId, string typeName, Nullable<int> referenceNum, Nullable<int> referenceNumTwo, string referenceDescription, string referenceDescriptionTwo, Nullable<decimal> amount1, Nullable<decimal> amount2, Nullable<decimal> amount3, Nullable<decimal> amount4, Nullable<int> billMonth, Nullable<int> billYear, Nullable<int> regionId, string regionName, string regionPhone, string regionAddress, string regioncity, string regionState, string regionPostalCode, string bankName, string bankAddress, string bankCity, string bankState, string bankPostalCode, string bankDisplayName, string bankDescription, string bankPhone, string bankNumber, string bankAccountNum, string bankCheckNum, string bankRoutingNum, Nullable<int> colGroupType, Nullable<int> referenceId, string typeNameTwo, string addressTwo, Nullable<int> userid)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var registerIdParameter = registerId.HasValue ?
                new ObjectParameter("registerId", registerId) :
                new ObjectParameter("registerId", typeof(int));
    
            var numberParameter = number != null ?
                new ObjectParameter("number", number) :
                new ObjectParameter("number", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("postalCode", postalCode) :
                new ObjectParameter("postalCode", typeof(string));
    
            var payeeIdParameter = payeeId.HasValue ?
                new ObjectParameter("payeeId", payeeId) :
                new ObjectParameter("payeeId", typeof(int));
    
            var typeNameParameter = typeName != null ?
                new ObjectParameter("typeName", typeName) :
                new ObjectParameter("typeName", typeof(string));
    
            var referenceNumParameter = referenceNum.HasValue ?
                new ObjectParameter("referenceNum", referenceNum) :
                new ObjectParameter("referenceNum", typeof(int));
    
            var referenceNumTwoParameter = referenceNumTwo.HasValue ?
                new ObjectParameter("referenceNumTwo", referenceNumTwo) :
                new ObjectParameter("referenceNumTwo", typeof(int));
    
            var referenceDescriptionParameter = referenceDescription != null ?
                new ObjectParameter("referenceDescription", referenceDescription) :
                new ObjectParameter("referenceDescription", typeof(string));
    
            var referenceDescriptionTwoParameter = referenceDescriptionTwo != null ?
                new ObjectParameter("referenceDescriptionTwo", referenceDescriptionTwo) :
                new ObjectParameter("referenceDescriptionTwo", typeof(string));
    
            var amount1Parameter = amount1.HasValue ?
                new ObjectParameter("amount1", amount1) :
                new ObjectParameter("amount1", typeof(decimal));
    
            var amount2Parameter = amount2.HasValue ?
                new ObjectParameter("amount2", amount2) :
                new ObjectParameter("amount2", typeof(decimal));
    
            var amount3Parameter = amount3.HasValue ?
                new ObjectParameter("amount3", amount3) :
                new ObjectParameter("amount3", typeof(decimal));
    
            var amount4Parameter = amount4.HasValue ?
                new ObjectParameter("amount4", amount4) :
                new ObjectParameter("amount4", typeof(decimal));
    
            var billMonthParameter = billMonth.HasValue ?
                new ObjectParameter("billMonth", billMonth) :
                new ObjectParameter("billMonth", typeof(int));
    
            var billYearParameter = billYear.HasValue ?
                new ObjectParameter("billYear", billYear) :
                new ObjectParameter("billYear", typeof(int));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("regionId", regionId) :
                new ObjectParameter("regionId", typeof(int));
    
            var regionNameParameter = regionName != null ?
                new ObjectParameter("regionName", regionName) :
                new ObjectParameter("regionName", typeof(string));
    
            var regionPhoneParameter = regionPhone != null ?
                new ObjectParameter("regionPhone", regionPhone) :
                new ObjectParameter("regionPhone", typeof(string));
    
            var regionAddressParameter = regionAddress != null ?
                new ObjectParameter("regionAddress", regionAddress) :
                new ObjectParameter("regionAddress", typeof(string));
    
            var regioncityParameter = regioncity != null ?
                new ObjectParameter("regioncity", regioncity) :
                new ObjectParameter("regioncity", typeof(string));
    
            var regionStateParameter = regionState != null ?
                new ObjectParameter("regionState", regionState) :
                new ObjectParameter("regionState", typeof(string));
    
            var regionPostalCodeParameter = regionPostalCode != null ?
                new ObjectParameter("regionPostalCode", regionPostalCode) :
                new ObjectParameter("regionPostalCode", typeof(string));
    
            var bankNameParameter = bankName != null ?
                new ObjectParameter("bankName", bankName) :
                new ObjectParameter("bankName", typeof(string));
    
            var bankAddressParameter = bankAddress != null ?
                new ObjectParameter("bankAddress", bankAddress) :
                new ObjectParameter("bankAddress", typeof(string));
    
            var bankCityParameter = bankCity != null ?
                new ObjectParameter("bankCity", bankCity) :
                new ObjectParameter("bankCity", typeof(string));
    
            var bankStateParameter = bankState != null ?
                new ObjectParameter("bankState", bankState) :
                new ObjectParameter("bankState", typeof(string));
    
            var bankPostalCodeParameter = bankPostalCode != null ?
                new ObjectParameter("bankPostalCode", bankPostalCode) :
                new ObjectParameter("bankPostalCode", typeof(string));
    
            var bankDisplayNameParameter = bankDisplayName != null ?
                new ObjectParameter("bankDisplayName", bankDisplayName) :
                new ObjectParameter("bankDisplayName", typeof(string));
    
            var bankDescriptionParameter = bankDescription != null ?
                new ObjectParameter("bankDescription", bankDescription) :
                new ObjectParameter("bankDescription", typeof(string));
    
            var bankPhoneParameter = bankPhone != null ?
                new ObjectParameter("bankPhone", bankPhone) :
                new ObjectParameter("bankPhone", typeof(string));
    
            var bankNumberParameter = bankNumber != null ?
                new ObjectParameter("bankNumber", bankNumber) :
                new ObjectParameter("bankNumber", typeof(string));
    
            var bankAccountNumParameter = bankAccountNum != null ?
                new ObjectParameter("bankAccountNum", bankAccountNum) :
                new ObjectParameter("bankAccountNum", typeof(string));
    
            var bankCheckNumParameter = bankCheckNum != null ?
                new ObjectParameter("bankCheckNum", bankCheckNum) :
                new ObjectParameter("bankCheckNum", typeof(string));
    
            var bankRoutingNumParameter = bankRoutingNum != null ?
                new ObjectParameter("bankRoutingNum", bankRoutingNum) :
                new ObjectParameter("bankRoutingNum", typeof(string));
    
            var colGroupTypeParameter = colGroupType.HasValue ?
                new ObjectParameter("colGroupType", colGroupType) :
                new ObjectParameter("colGroupType", typeof(int));
    
            var referenceIdParameter = referenceId.HasValue ?
                new ObjectParameter("referenceId", referenceId) :
                new ObjectParameter("referenceId", typeof(int));
    
            var typeNameTwoParameter = typeNameTwo != null ?
                new ObjectParameter("typeNameTwo", typeNameTwo) :
                new ObjectParameter("typeNameTwo", typeof(string));
    
            var addressTwoParameter = addressTwo != null ?
                new ObjectParameter("addressTwo", addressTwo) :
                new ObjectParameter("addressTwo", typeof(string));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("portal_spSave_AP_RegisterAdjustmentDetalils", idParameter, registerIdParameter, numberParameter, nameParameter, addressParameter, cityParameter, stateParameter, postalCodeParameter, payeeIdParameter, typeNameParameter, referenceNumParameter, referenceNumTwoParameter, referenceDescriptionParameter, referenceDescriptionTwoParameter, amount1Parameter, amount2Parameter, amount3Parameter, amount4Parameter, billMonthParameter, billYearParameter, regionIdParameter, regionNameParameter, regionPhoneParameter, regionAddressParameter, regioncityParameter, regionStateParameter, regionPostalCodeParameter, bankNameParameter, bankAddressParameter, bankCityParameter, bankStateParameter, bankPostalCodeParameter, bankDisplayNameParameter, bankDescriptionParameter, bankPhoneParameter, bankNumberParameter, bankAccountNumParameter, bankCheckNumParameter, bankRoutingNumParameter, colGroupTypeParameter, referenceIdParameter, typeNameTwoParameter, addressTwoParameter, useridParameter);
        }
    
        public virtual int portal_spSearch_AP_Register(Nullable<int> regionid, Nullable<int> searchby, string searchValue, Nullable<int> trxtype, string startdate, string enddate, Nullable<System.DateTime> batchdate, Nullable<int> filterby, string fromcheckno, string tocheckno, Nullable<int> reconcile)
        {
            var regionidParameter = regionid.HasValue ?
                new ObjectParameter("regionid", regionid) :
                new ObjectParameter("regionid", typeof(int));
    
            var searchbyParameter = searchby.HasValue ?
                new ObjectParameter("searchby", searchby) :
                new ObjectParameter("searchby", typeof(int));
    
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("searchValue", searchValue) :
                new ObjectParameter("searchValue", typeof(string));
    
            var trxtypeParameter = trxtype.HasValue ?
                new ObjectParameter("trxtype", trxtype) :
                new ObjectParameter("trxtype", typeof(int));
    
            var startdateParameter = startdate != null ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(string));
    
            var enddateParameter = enddate != null ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(string));
    
            var batchdateParameter = batchdate.HasValue ?
                new ObjectParameter("batchdate", batchdate) :
                new ObjectParameter("batchdate", typeof(System.DateTime));
    
            var filterbyParameter = filterby.HasValue ?
                new ObjectParameter("filterby", filterby) :
                new ObjectParameter("filterby", typeof(int));
    
            var fromchecknoParameter = fromcheckno != null ?
                new ObjectParameter("fromcheckno", fromcheckno) :
                new ObjectParameter("fromcheckno", typeof(string));
    
            var tochecknoParameter = tocheckno != null ?
                new ObjectParameter("tocheckno", tocheckno) :
                new ObjectParameter("tocheckno", typeof(string));
    
            var reconcileParameter = reconcile.HasValue ?
                new ObjectParameter("reconcile", reconcile) :
                new ObjectParameter("reconcile", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("portal_spSearch_AP_Register", regionidParameter, searchbyParameter, searchValueParameter, trxtypeParameter, startdateParameter, enddateParameter, batchdateParameter, filterbyParameter, fromchecknoParameter, tochecknoParameter, reconcileParameter);
        }
    
        public virtual int portal_spCreate_AR_BillRunUndo(Nullable<int> batchId)
        {
            var batchIdParameter = batchId.HasValue ?
                new ObjectParameter("BatchId", batchId) :
                new ObjectParameter("BatchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("portal_spCreate_AR_BillRunUndo", batchIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AR_BillRunSummaryDetail_Result> portal_spGet_AR_BillRunSummaryDetail(string regionId, Nullable<int> billMonth, Nullable<int> billYear, Nullable<int> batchId)
        {
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            var billMonthParameter = billMonth.HasValue ?
                new ObjectParameter("BillMonth", billMonth) :
                new ObjectParameter("BillMonth", typeof(int));
    
            var billYearParameter = billYear.HasValue ?
                new ObjectParameter("BillYear", billYear) :
                new ObjectParameter("BillYear", typeof(int));
    
            var batchIdParameter = batchId.HasValue ?
                new ObjectParameter("BatchId", batchId) :
                new ObjectParameter("BatchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_BillRunSummaryDetail_Result>("portal_spGet_AR_BillRunSummaryDetail", regionIdParameter, billMonthParameter, billYearParameter, batchIdParameter);
        }
    
        public virtual ObjectResult<crm_spImport_Lead_Result> crm_spImport_Lead(Nullable<int> accountType, Nullable<int> stage, Nullable<int> stageStatus, Nullable<int> providerSource, Nullable<int> providerType, Nullable<System.DateTime> createdDate, Nullable<System.DateTime> modifiedDate, string firstName, string lastName, string phoneNumber, string emailAddress, string companyName, string companyAddressLine1, string companyAddressLine2, string companyAddressLine3, string companyCity, string companyState, string companyZipCode, string companyEmailAddress, string companyPhoneNumber, string companyWebSite, string ext, string title, string sicCode, string salesVolume, string sqFt, string lineofBusiness)
        {
            var accountTypeParameter = accountType.HasValue ?
                new ObjectParameter("AccountType", accountType) :
                new ObjectParameter("AccountType", typeof(int));
    
            var stageParameter = stage.HasValue ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(int));
    
            var stageStatusParameter = stageStatus.HasValue ?
                new ObjectParameter("StageStatus", stageStatus) :
                new ObjectParameter("StageStatus", typeof(int));
    
            var providerSourceParameter = providerSource.HasValue ?
                new ObjectParameter("ProviderSource", providerSource) :
                new ObjectParameter("ProviderSource", typeof(int));
    
            var providerTypeParameter = providerType.HasValue ?
                new ObjectParameter("ProviderType", providerType) :
                new ObjectParameter("ProviderType", typeof(int));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var modifiedDateParameter = modifiedDate.HasValue ?
                new ObjectParameter("ModifiedDate", modifiedDate) :
                new ObjectParameter("ModifiedDate", typeof(System.DateTime));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var companyAddressLine1Parameter = companyAddressLine1 != null ?
                new ObjectParameter("CompanyAddressLine1", companyAddressLine1) :
                new ObjectParameter("CompanyAddressLine1", typeof(string));
    
            var companyAddressLine2Parameter = companyAddressLine2 != null ?
                new ObjectParameter("CompanyAddressLine2", companyAddressLine2) :
                new ObjectParameter("CompanyAddressLine2", typeof(string));
    
            var companyAddressLine3Parameter = companyAddressLine3 != null ?
                new ObjectParameter("CompanyAddressLine3", companyAddressLine3) :
                new ObjectParameter("CompanyAddressLine3", typeof(string));
    
            var companyCityParameter = companyCity != null ?
                new ObjectParameter("CompanyCity", companyCity) :
                new ObjectParameter("CompanyCity", typeof(string));
    
            var companyStateParameter = companyState != null ?
                new ObjectParameter("CompanyState", companyState) :
                new ObjectParameter("CompanyState", typeof(string));
    
            var companyZipCodeParameter = companyZipCode != null ?
                new ObjectParameter("CompanyZipCode", companyZipCode) :
                new ObjectParameter("CompanyZipCode", typeof(string));
    
            var companyEmailAddressParameter = companyEmailAddress != null ?
                new ObjectParameter("CompanyEmailAddress", companyEmailAddress) :
                new ObjectParameter("CompanyEmailAddress", typeof(string));
    
            var companyPhoneNumberParameter = companyPhoneNumber != null ?
                new ObjectParameter("CompanyPhoneNumber", companyPhoneNumber) :
                new ObjectParameter("CompanyPhoneNumber", typeof(string));
    
            var companyWebSiteParameter = companyWebSite != null ?
                new ObjectParameter("CompanyWebSite", companyWebSite) :
                new ObjectParameter("CompanyWebSite", typeof(string));
    
            var extParameter = ext != null ?
                new ObjectParameter("Ext", ext) :
                new ObjectParameter("Ext", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var sicCodeParameter = sicCode != null ?
                new ObjectParameter("SicCode", sicCode) :
                new ObjectParameter("SicCode", typeof(string));
    
            var salesVolumeParameter = salesVolume != null ?
                new ObjectParameter("SalesVolume", salesVolume) :
                new ObjectParameter("SalesVolume", typeof(string));
    
            var sqFtParameter = sqFt != null ?
                new ObjectParameter("SqFt", sqFt) :
                new ObjectParameter("SqFt", typeof(string));
    
            var lineofBusinessParameter = lineofBusiness != null ?
                new ObjectParameter("LineofBusiness", lineofBusiness) :
                new ObjectParameter("LineofBusiness", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<crm_spImport_Lead_Result>("crm_spImport_Lead", accountTypeParameter, stageParameter, stageStatusParameter, providerSourceParameter, providerTypeParameter, createdDateParameter, modifiedDateParameter, firstNameParameter, lastNameParameter, phoneNumberParameter, emailAddressParameter, companyNameParameter, companyAddressLine1Parameter, companyAddressLine2Parameter, companyAddressLine3Parameter, companyCityParameter, companyStateParameter, companyZipCodeParameter, companyEmailAddressParameter, companyPhoneNumberParameter, companyWebSiteParameter, extParameter, titleParameter, sicCodeParameter, salesVolumeParameter, sqFtParameter, lineofBusinessParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AR_InvoiceSearchList_Result> portal_spGet_AR_InvoiceSearchList(Nullable<int> regionId, Nullable<int> billMonth, Nullable<int> billYear, string searchText, Nullable<int> filterBy, Nullable<int> searchBy, string searchValue, Nullable<bool> eOMOnly, Nullable<bool> consolidatedInvoice)
        {
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var billMonthParameter = billMonth.HasValue ?
                new ObjectParameter("BillMonth", billMonth) :
                new ObjectParameter("BillMonth", typeof(int));
    
            var billYearParameter = billYear.HasValue ?
                new ObjectParameter("BillYear", billYear) :
                new ObjectParameter("BillYear", typeof(int));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            var filterByParameter = filterBy.HasValue ?
                new ObjectParameter("FilterBy", filterBy) :
                new ObjectParameter("FilterBy", typeof(int));
    
            var searchByParameter = searchBy.HasValue ?
                new ObjectParameter("SearchBy", searchBy) :
                new ObjectParameter("SearchBy", typeof(int));
    
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("SearchValue", searchValue) :
                new ObjectParameter("SearchValue", typeof(string));
    
            var eOMOnlyParameter = eOMOnly.HasValue ?
                new ObjectParameter("EOMOnly", eOMOnly) :
                new ObjectParameter("EOMOnly", typeof(bool));
    
            var consolidatedInvoiceParameter = consolidatedInvoice.HasValue ?
                new ObjectParameter("ConsolidatedInvoice", consolidatedInvoice) :
                new ObjectParameter("ConsolidatedInvoice", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_InvoiceSearchList_Result>("portal_spGet_AR_InvoiceSearchList", regionIdParameter, billMonthParameter, billYearParameter, searchTextParameter, filterByParameter, searchByParameter, searchValueParameter, eOMOnlyParameter, consolidatedInvoiceParameter);
        }
    
        public virtual int portal_spGet_AR_GenerateInvoice()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("portal_spGet_AR_GenerateInvoice");
        }
    
        public virtual ObjectResult<portal_spGet_AR_GenerateInvoiceList_Result> portal_spGet_AR_GenerateInvoiceList(Nullable<int> regionId)
        {
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_GenerateInvoiceList_Result>("portal_spGet_AR_GenerateInvoiceList", regionIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_ContractDetail_Result> portal_spGet_ContractDetail()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_ContractDetail_Result>("portal_spGet_ContractDetail");
        }
    
        public virtual ObjectResult<GetTaxAddressForImportService_Result> GetTaxAddressForImportService()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTaxAddressForImportService_Result>("GetTaxAddressForImportService");
        }
    
        public virtual ObjectResult<portal_spGet_C_TransactionDetail_Result> portal_spGet_C_TransactionDetail(Nullable<int> customerId, Nullable<int> typeId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var typeIdParameter = typeId.HasValue ?
                new ObjectParameter("TypeId", typeId) :
                new ObjectParameter("TypeId", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_C_TransactionDetail_Result>("portal_spGet_C_TransactionDetail", customerIdParameter, typeIdParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<portal_spGet_F_Transaction_Result> portal_spGet_F_Transaction(Nullable<int> ctrxid, Nullable<int> temporary)
        {
            var ctrxidParameter = ctrxid.HasValue ?
                new ObjectParameter("ctrxid", ctrxid) :
                new ObjectParameter("ctrxid", typeof(int));
    
            var temporaryParameter = temporary.HasValue ?
                new ObjectParameter("temporary", temporary) :
                new ObjectParameter("temporary", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_F_Transaction_Result>("portal_spGet_F_Transaction", ctrxidParameter, temporaryParameter);
        }
    
        public virtual ObjectResult<portal_spGet_C_Distribution_Result> portal_spGet_C_Distribution(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_C_Distribution_Result>("portal_spGet_C_Distribution", customerIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AR_InvoiceFranchiseeBalance_Result> portal_spGet_AR_InvoiceFranchiseeBalance(Nullable<int> invoiceId)
        {
            var invoiceIdParameter = invoiceId.HasValue ?
                new ObjectParameter("InvoiceId", invoiceId) :
                new ObjectParameter("InvoiceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_InvoiceFranchiseeBalance_Result>("portal_spGet_AR_InvoiceFranchiseeBalance", invoiceIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AR_InvoiceBalance_Result> portal_spGet_AR_InvoiceBalance(Nullable<int> invoiceId)
        {
            var invoiceIdParameter = invoiceId.HasValue ?
                new ObjectParameter("InvoiceId", invoiceId) :
                new ObjectParameter("InvoiceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_InvoiceBalance_Result>("portal_spGet_AR_InvoiceBalance", invoiceIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AR_InvoiceSearchListForCredit_Result> portal_spGet_AR_InvoiceSearchListForCredit(string regionId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string searchText, Nullable<bool> includeClosed, Nullable<bool> includeConsolidated, string oCValue)
        {
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            var includeClosedParameter = includeClosed.HasValue ?
                new ObjectParameter("IncludeClosed", includeClosed) :
                new ObjectParameter("IncludeClosed", typeof(bool));
    
            var includeConsolidatedParameter = includeConsolidated.HasValue ?
                new ObjectParameter("IncludeConsolidated", includeConsolidated) :
                new ObjectParameter("IncludeConsolidated", typeof(bool));
    
            var oCValueParameter = oCValue != null ?
                new ObjectParameter("OCValue", oCValue) :
                new ObjectParameter("OCValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_InvoiceSearchListForCredit_Result>("portal_spGet_AR_InvoiceSearchListForCredit", regionIdParameter, fromDateParameter, toDateParameter, searchTextParameter, includeClosedParameter, includeConsolidatedParameter, oCValueParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AR_LockboxEDIData_Result> portal_spGet_AR_LockboxEDIData(Nullable<int> lockboxEDIId)
        {
            var lockboxEDIIdParameter = lockboxEDIId.HasValue ?
                new ObjectParameter("LockboxEDIId", lockboxEDIId) :
                new ObjectParameter("LockboxEDIId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_LockboxEDIData_Result>("portal_spGet_AR_LockboxEDIData", lockboxEDIIdParameter);
        }
    
        public virtual int portal_spGet_AR_GenerateInvoiceByMasterTmpTrxId(Nullable<int> masterTmpTrxId)
        {
            var masterTmpTrxIdParameter = masterTmpTrxId.HasValue ?
                new ObjectParameter("MasterTmpTrxId", masterTmpTrxId) :
                new ObjectParameter("MasterTmpTrxId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("portal_spGet_AR_GenerateInvoiceByMasterTmpTrxId", masterTmpTrxIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_Region_TransactionNumberConfig_Result> portal_spGet_Region_TransactionNumberConfig(Nullable<int> transactionType, Nullable<int> regionId)
        {
            var transactionTypeParameter = transactionType.HasValue ?
                new ObjectParameter("TransactionType", transactionType) :
                new ObjectParameter("TransactionType", typeof(int));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_Region_TransactionNumberConfig_Result>("portal_spGet_Region_TransactionNumberConfig", transactionTypeParameter, regionIdParameter);
        }
    
        public virtual int portal_spCreate_AR_Payment(string chaqueNumber, Nullable<int> invoiceId, Nullable<int> customerId, Nullable<decimal> invoiceAmount, Nullable<decimal> applyAmount, Nullable<int> paymentMethodListId, Nullable<int> transactionStatusListId, Nullable<int> createdBy)
        {
            var chaqueNumberParameter = chaqueNumber != null ?
                new ObjectParameter("ChaqueNumber", chaqueNumber) :
                new ObjectParameter("ChaqueNumber", typeof(string));
    
            var invoiceIdParameter = invoiceId.HasValue ?
                new ObjectParameter("InvoiceId", invoiceId) :
                new ObjectParameter("InvoiceId", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var invoiceAmountParameter = invoiceAmount.HasValue ?
                new ObjectParameter("InvoiceAmount", invoiceAmount) :
                new ObjectParameter("InvoiceAmount", typeof(decimal));
    
            var applyAmountParameter = applyAmount.HasValue ?
                new ObjectParameter("ApplyAmount", applyAmount) :
                new ObjectParameter("ApplyAmount", typeof(decimal));
    
            var paymentMethodListIdParameter = paymentMethodListId.HasValue ?
                new ObjectParameter("PaymentMethodListId", paymentMethodListId) :
                new ObjectParameter("PaymentMethodListId", typeof(int));
    
            var transactionStatusListIdParameter = transactionStatusListId.HasValue ?
                new ObjectParameter("TransactionStatusListId", transactionStatusListId) :
                new ObjectParameter("TransactionStatusListId", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("portal_spCreate_AR_Payment", chaqueNumberParameter, invoiceIdParameter, customerIdParameter, invoiceAmountParameter, applyAmountParameter, paymentMethodListIdParameter, transactionStatusListIdParameter, createdByParameter);
        }
    
        public virtual ObjectResult<portal_spGet_F_LeaseList_Result> portal_spGet_F_LeaseList(Nullable<bool> isActive, string regionId, string searchText)
        {
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_F_LeaseList_Result>("portal_spGet_F_LeaseList", isActiveParameter, regionIdParameter, searchTextParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AR_FranchiseeDetail_Result> portal_spGet_AR_FranchiseeDetail(Nullable<int> franchiseeId)
        {
            var franchiseeIdParameter = franchiseeId.HasValue ?
                new ObjectParameter("FranchiseeId", franchiseeId) :
                new ObjectParameter("FranchiseeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_FranchiseeDetail_Result>("portal_spGet_AR_FranchiseeDetail", franchiseeIdParameter);
        }
    
        public virtual ObjectResult<portal_spGetChargeBackList_Result> portal_spGetChargeBackList(Nullable<int> regionId)
        {
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGetChargeBackList_Result>("portal_spGetChargeBackList", regionIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_F_LeaseReportList_Result> portal_spGet_F_LeaseReportList(string regionId, string searchText, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_F_LeaseReportList_Result>("portal_spGet_F_LeaseReportList", regionIdParameter, searchTextParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<portal_SpGetCustomersDataUsingInoviceID_Result> portal_SpGetCustomersDataUsingInoviceID(string classID)
        {
            var classIDParameter = classID != null ?
                new ObjectParameter("ClassID", classID) :
                new ObjectParameter("ClassID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_SpGetCustomersDataUsingInoviceID_Result>("portal_SpGetCustomersDataUsingInoviceID", classIDParameter);
        }
    
        public virtual int SpSetActivePaymentGateway(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpSetActivePaymentGateway", iDParameter);
        }
    
        public virtual int portal_spUpdate_C_DefaultCheckLayoutForRegion(Nullable<int> regionId, Nullable<int> checkLayoutId)
        {
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var checkLayoutIdParameter = checkLayoutId.HasValue ?
                new ObjectParameter("CheckLayoutId", checkLayoutId) :
                new ObjectParameter("CheckLayoutId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("portal_spUpdate_C_DefaultCheckLayoutForRegion", regionIdParameter, checkLayoutIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_FP_InvoiceSearchListForCredit_Result> portal_spGet_FP_InvoiceSearchListForCredit(Nullable<int> regionId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string searchText, Nullable<bool> includeClosed, Nullable<bool> includeConsolidated)
        {
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            var includeClosedParameter = includeClosed.HasValue ?
                new ObjectParameter("IncludeClosed", includeClosed) :
                new ObjectParameter("IncludeClosed", typeof(bool));
    
            var includeConsolidatedParameter = includeConsolidated.HasValue ?
                new ObjectParameter("IncludeConsolidated", includeConsolidated) :
                new ObjectParameter("IncludeConsolidated", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_FP_InvoiceSearchListForCredit_Result>("portal_spGet_FP_InvoiceSearchListForCredit", regionIdParameter, fromDateParameter, toDateParameter, searchTextParameter, includeClosedParameter, includeConsolidatedParameter);
        }
    
        public virtual ObjectResult<SpGetCustomerDetailsByCustomerID_Result> SpGetCustomerDetailsByCustomerID(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetCustomerDetailsByCustomerID_Result>("SpGetCustomerDetailsByCustomerID", customerIDParameter);
        }
    
        public virtual ObjectResult<SpGetServicesCallLog_Result> SpGetServicesCallLog(Nullable<int> classID)
        {
            var classIDParameter = classID.HasValue ?
                new ObjectParameter("ClassID", classID) :
                new ObjectParameter("ClassID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetServicesCallLog_Result>("SpGetServicesCallLog", classIDParameter);
        }
    
        public virtual ObjectResult<portal_spCreate_AR_MonthlyBillRunGenerateList_Result> portal_spCreate_AR_MonthlyBillRunGenerateList(string regionId, Nullable<int> billMonth, Nullable<int> billYear, Nullable<int> iBarchId, Nullable<int> bBarchId, Nullable<int> lBarchId, Nullable<int> fFBarchId)
        {
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            var billMonthParameter = billMonth.HasValue ?
                new ObjectParameter("BillMonth", billMonth) :
                new ObjectParameter("BillMonth", typeof(int));
    
            var billYearParameter = billYear.HasValue ?
                new ObjectParameter("BillYear", billYear) :
                new ObjectParameter("BillYear", typeof(int));
    
            var iBarchIdParameter = iBarchId.HasValue ?
                new ObjectParameter("IBarchId", iBarchId) :
                new ObjectParameter("IBarchId", typeof(int));
    
            var bBarchIdParameter = bBarchId.HasValue ?
                new ObjectParameter("BBarchId", bBarchId) :
                new ObjectParameter("BBarchId", typeof(int));
    
            var lBarchIdParameter = lBarchId.HasValue ?
                new ObjectParameter("LBarchId", lBarchId) :
                new ObjectParameter("LBarchId", typeof(int));
    
            var fFBarchIdParameter = fFBarchId.HasValue ?
                new ObjectParameter("FFBarchId", fFBarchId) :
                new ObjectParameter("FFBarchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spCreate_AR_MonthlyBillRunGenerateList_Result>("portal_spCreate_AR_MonthlyBillRunGenerateList", regionIdParameter, billMonthParameter, billYearParameter, iBarchIdParameter, bBarchIdParameter, lBarchIdParameter, fFBarchIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_F_GetFindersFeeDetailByFindersFeeId_Result> portal_spGet_F_GetFindersFeeDetailByFindersFeeId(Nullable<int> findersFeeId, Nullable<int> regionId)
        {
            var findersFeeIdParameter = findersFeeId.HasValue ?
                new ObjectParameter("FindersFeeId", findersFeeId) :
                new ObjectParameter("FindersFeeId", typeof(int));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_F_GetFindersFeeDetailByFindersFeeId_Result>("portal_spGet_F_GetFindersFeeDetailByFindersFeeId", findersFeeIdParameter, regionIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_FP_InvoiceSearchListForCreditInvoice_Result> portal_spGet_FP_InvoiceSearchListForCreditInvoice(Nullable<int> regionId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string searchText, Nullable<bool> includeClosed, Nullable<bool> includeConsolidated)
        {
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            var includeClosedParameter = includeClosed.HasValue ?
                new ObjectParameter("IncludeClosed", includeClosed) :
                new ObjectParameter("IncludeClosed", typeof(bool));
    
            var includeConsolidatedParameter = includeConsolidated.HasValue ?
                new ObjectParameter("IncludeConsolidated", includeConsolidated) :
                new ObjectParameter("IncludeConsolidated", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_FP_InvoiceSearchListForCreditInvoice_Result>("portal_spGet_FP_InvoiceSearchListForCreditInvoice", regionIdParameter, fromDateParameter, toDateParameter, searchTextParameter, includeClosedParameter, includeConsolidatedParameter);
        }
    
        public virtual ObjectResult<portal_spGet_ContractDetailByCustomerID_Result> portal_spGet_ContractDetailByCustomerID(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_ContractDetailByCustomerID_Result>("portal_spGet_ContractDetailByCustomerID", customerIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_CustomerDetailFranchiseeDistribution_Result> portal_spGet_CustomerDetailFranchiseeDistribution(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_CustomerDetailFranchiseeDistribution_Result>("portal_spGet_CustomerDetailFranchiseeDistribution", customerIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_C_UnprintedManualCheckList_Result> portal_spGet_C_UnprintedManualCheckList(Nullable<int> regionId)
        {
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_C_UnprintedManualCheckList_Result>("portal_spGet_C_UnprintedManualCheckList", regionIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_C_CustomerDistributionDetailFranchisees_Result> portal_spGet_C_CustomerDistributionDetailFranchisees(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_C_CustomerDistributionDetailFranchisees_Result>("portal_spGet_C_CustomerDistributionDetailFranchisees", customerIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AR_PendingCreditList_Result> portal_spGet_AR_PendingCreditList(Nullable<int> regionId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string searchText, Nullable<bool> includeConsolidated)
        {
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            var includeConsolidatedParameter = includeConsolidated.HasValue ?
                new ObjectParameter("IncludeConsolidated", includeConsolidated) :
                new ObjectParameter("IncludeConsolidated", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_PendingCreditList_Result>("portal_spGet_AR_PendingCreditList", regionIdParameter, fromDateParameter, toDateParameter, searchTextParameter, includeConsolidatedParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AR_InvoicePaymentSearchList_Result> portal_spGet_AR_InvoicePaymentSearchList(Nullable<int> customerId, Nullable<int> regionId, string openClose)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var openCloseParameter = openClose != null ?
                new ObjectParameter("OpenClose", openClose) :
                new ObjectParameter("OpenClose", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_InvoicePaymentSearchList_Result>("portal_spGet_AR_InvoicePaymentSearchList", customerIdParameter, regionIdParameter, openCloseParameter);
        }
    
        public virtual int portal_spCreate_AR_GenerateBillRun_FinderFee(Nullable<int> regionId, Nullable<int> billMonth, Nullable<int> billYear, Nullable<int> createdBy, ObjectParameter batchId)
        {
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var billMonthParameter = billMonth.HasValue ?
                new ObjectParameter("BillMonth", billMonth) :
                new ObjectParameter("BillMonth", typeof(int));
    
            var billYearParameter = billYear.HasValue ?
                new ObjectParameter("BillYear", billYear) :
                new ObjectParameter("BillYear", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("portal_spCreate_AR_GenerateBillRun_FinderFee", regionIdParameter, billMonthParameter, billYearParameter, createdByParameter, batchId);
        }
    
        public virtual ObjectResult<portal_spGet_C_GetUploadDocument_Result> portal_spGet_C_GetUploadDocument(Nullable<int> classId, Nullable<int> typeListId, Nullable<int> regionId)
        {
            var classIdParameter = classId.HasValue ?
                new ObjectParameter("ClassId", classId) :
                new ObjectParameter("ClassId", typeof(int));
    
            var typeListIdParameter = typeListId.HasValue ?
                new ObjectParameter("TypeListId", typeListId) :
                new ObjectParameter("TypeListId", typeof(int));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_C_GetUploadDocument_Result>("portal_spGet_C_GetUploadDocument", classIdParameter, typeListIdParameter, regionIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_F_TransactionDetail_Result> portal_spGet_F_TransactionDetail(Nullable<int> frenchiseeId, Nullable<int> typeId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var frenchiseeIdParameter = frenchiseeId.HasValue ?
                new ObjectParameter("FrenchiseeId", frenchiseeId) :
                new ObjectParameter("FrenchiseeId", typeof(int));
    
            var typeIdParameter = typeId.HasValue ?
                new ObjectParameter("TypeId", typeId) :
                new ObjectParameter("TypeId", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_F_TransactionDetail_Result>("portal_spGet_F_TransactionDetail", frenchiseeIdParameter, typeIdParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<portal_spGet_CustomerPendingMaintenanceList_Result> portal_spGet_CustomerPendingMaintenanceList(string regionId)
        {
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_CustomerPendingMaintenanceList_Result>("portal_spGet_CustomerPendingMaintenanceList", regionIdParameter);
        }
    
        public virtual int portal_GenerateBillRun_Invoice(string regionId, Nullable<int> billMonth, Nullable<int> billYear, Nullable<int> createdBy, ObjectParameter batchId)
        {
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            var billMonthParameter = billMonth.HasValue ?
                new ObjectParameter("BillMonth", billMonth) :
                new ObjectParameter("BillMonth", typeof(int));
    
            var billYearParameter = billYear.HasValue ?
                new ObjectParameter("BillYear", billYear) :
                new ObjectParameter("BillYear", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("portal_GenerateBillRun_Invoice", regionIdParameter, billMonthParameter, billYearParameter, createdByParameter, batchId);
        }
    
        public virtual ObjectResult<portal_spGet_F_LeaseBillRunSummaryDetail_Result> portal_spGet_F_LeaseBillRunSummaryDetail(string regionId, Nullable<int> billMonth, Nullable<int> billYear, Nullable<int> batchId)
        {
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            var billMonthParameter = billMonth.HasValue ?
                new ObjectParameter("BillMonth", billMonth) :
                new ObjectParameter("BillMonth", typeof(int));
    
            var billYearParameter = billYear.HasValue ?
                new ObjectParameter("BillYear", billYear) :
                new ObjectParameter("BillYear", typeof(int));
    
            var batchIdParameter = batchId.HasValue ?
                new ObjectParameter("BatchId", batchId) :
                new ObjectParameter("BatchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_F_LeaseBillRunSummaryDetail_Result>("portal_spGet_F_LeaseBillRunSummaryDetail", regionIdParameter, billMonthParameter, billYearParameter, batchIdParameter);
        }
    
        [DbFunction("jkDatabaseEntities", "fn_GetCustomerBalance")]
        public virtual IQueryable<fn_GetCustomerBalance_Result> fn_GetCustomerBalance(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetCustomerBalance_Result>("[jkDatabaseEntities].[fn_GetCustomerBalance](@CustomerId)", customerIdParameter);
        }
    
        [DbFunction("jkDatabaseEntities", "fn_GetCustomerBalanceAsOfDate")]
        public virtual IQueryable<fn_GetCustomerBalanceAsOfDate_Result> fn_GetCustomerBalanceAsOfDate(Nullable<int> customerId, Nullable<System.DateTime> asOfDate)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var asOfDateParameter = asOfDate.HasValue ?
                new ObjectParameter("AsOfDate", asOfDate) :
                new ObjectParameter("AsOfDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetCustomerBalanceAsOfDate_Result>("[jkDatabaseEntities].[fn_GetCustomerBalanceAsOfDate](@CustomerId, @AsOfDate)", customerIdParameter, asOfDateParameter);
        }
    
        [DbFunction("jkDatabaseEntities", "fn_GetCustomerBalanceAsOfDateIfExists")]
        public virtual IQueryable<fn_GetCustomerBalanceAsOfDateIfExists_Result> fn_GetCustomerBalanceAsOfDateIfExists(Nullable<int> customerId, Nullable<System.DateTime> asOfDate, Nullable<bool> includeAll)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var asOfDateParameter = asOfDate.HasValue ?
                new ObjectParameter("AsOfDate", asOfDate) :
                new ObjectParameter("AsOfDate", typeof(System.DateTime));
    
            var includeAllParameter = includeAll.HasValue ?
                new ObjectParameter("IncludeAll", includeAll) :
                new ObjectParameter("IncludeAll", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetCustomerBalanceAsOfDateIfExists_Result>("[jkDatabaseEntities].[fn_GetCustomerBalanceAsOfDateIfExists](@CustomerId, @AsOfDate, @IncludeAll)", customerIdParameter, asOfDateParameter, includeAllParameter);
        }
    
        public virtual ObjectResult<portal_spGet_C_GetNewCustomersReport_Result> portal_spGet_C_GetNewCustomersReport(string searchText, Nullable<int> status, string startdate, string enddate, Nullable<int> regionId, string regionIds)
        {
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var startdateParameter = startdate != null ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(string));
    
            var enddateParameter = enddate != null ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(string));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var regionIdsParameter = regionIds != null ?
                new ObjectParameter("RegionIds", regionIds) :
                new ObjectParameter("RegionIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_C_GetNewCustomersReport_Result>("portal_spGet_C_GetNewCustomersReport", searchTextParameter, statusParameter, startdateParameter, enddateParameter, regionIdParameter, regionIdsParameter);
        }
    
        public virtual ObjectResult<spGet_Franchisee_Finderfee_ReportByFranchisee_Result> spGet_Franchisee_Finderfee_ReportByFranchisee(Nullable<int> franchiseeId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string regionId)
        {
            var franchiseeIdParameter = franchiseeId.HasValue ?
                new ObjectParameter("FranchiseeId", franchiseeId) :
                new ObjectParameter("FranchiseeId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_Franchisee_Finderfee_ReportByFranchisee_Result>("spGet_Franchisee_Finderfee_ReportByFranchisee", franchiseeIdParameter, fromDateParameter, toDateParameter, regionIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_C_DepositList_Result> portal_spGet_C_DepositList(Nullable<int> regionId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_C_DepositList_Result>("portal_spGet_C_DepositList", regionIdParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<portal_spGet_F_ChargebackListForFranchisee_Result> portal_spGet_F_ChargebackListForFranchisee(Nullable<int> franchiseeId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var franchiseeIdParameter = franchiseeId.HasValue ?
                new ObjectParameter("FranchiseeId", franchiseeId) :
                new ObjectParameter("FranchiseeId", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_F_ChargebackListForFranchisee_Result>("portal_spGet_F_ChargebackListForFranchisee", franchiseeIdParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int portal_spCreate_AR_GenerateBillRun_BillingPay(string regionId, Nullable<int> billMonth, Nullable<int> billYear, Nullable<int> createdBy, Nullable<int> iBatchId, ObjectParameter batchId)
        {
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            var billMonthParameter = billMonth.HasValue ?
                new ObjectParameter("BillMonth", billMonth) :
                new ObjectParameter("BillMonth", typeof(int));
    
            var billYearParameter = billYear.HasValue ?
                new ObjectParameter("BillYear", billYear) :
                new ObjectParameter("BillYear", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var iBatchIdParameter = iBatchId.HasValue ?
                new ObjectParameter("IBatchId", iBatchId) :
                new ObjectParameter("IBatchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("portal_spCreate_AR_GenerateBillRun_BillingPay", regionIdParameter, billMonthParameter, billYearParameter, createdByParameter, iBatchIdParameter, batchId);
        }
    
        public virtual ObjectResult<SpGetAllPendingDataForDashbord_Result> SpGetAllPendingDataForDashbord(Nullable<int> uID)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetAllPendingDataForDashbord_Result>("SpGetAllPendingDataForDashbord", uIDParameter);
        }
    
        public virtual int SpInsertPendingData(Nullable<int> uID, string message, Nullable<bool> isRejacted, Nullable<bool> isApproved, Nullable<int> customerID, Nullable<System.DateTime> messageDate, string entrySource, Nullable<int> masterTmpTrxId, Nullable<int> classId, Nullable<int> typeListId, Nullable<int> masterTrxTypeListId, Nullable<int> headerId, Nullable<int> masterTrxId)
        {
            var uIDParameter = uID.HasValue ?
                new ObjectParameter("UID", uID) :
                new ObjectParameter("UID", typeof(int));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var isRejactedParameter = isRejacted.HasValue ?
                new ObjectParameter("IsRejacted", isRejacted) :
                new ObjectParameter("IsRejacted", typeof(bool));
    
            var isApprovedParameter = isApproved.HasValue ?
                new ObjectParameter("IsApproved", isApproved) :
                new ObjectParameter("IsApproved", typeof(bool));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var messageDateParameter = messageDate.HasValue ?
                new ObjectParameter("MessageDate", messageDate) :
                new ObjectParameter("MessageDate", typeof(System.DateTime));
    
            var entrySourceParameter = entrySource != null ?
                new ObjectParameter("EntrySource", entrySource) :
                new ObjectParameter("EntrySource", typeof(string));
    
            var masterTmpTrxIdParameter = masterTmpTrxId.HasValue ?
                new ObjectParameter("MasterTmpTrxId", masterTmpTrxId) :
                new ObjectParameter("MasterTmpTrxId", typeof(int));
    
            var classIdParameter = classId.HasValue ?
                new ObjectParameter("ClassId", classId) :
                new ObjectParameter("ClassId", typeof(int));
    
            var typeListIdParameter = typeListId.HasValue ?
                new ObjectParameter("TypeListId", typeListId) :
                new ObjectParameter("TypeListId", typeof(int));
    
            var masterTrxTypeListIdParameter = masterTrxTypeListId.HasValue ?
                new ObjectParameter("MasterTrxTypeListId", masterTrxTypeListId) :
                new ObjectParameter("MasterTrxTypeListId", typeof(int));
    
            var headerIdParameter = headerId.HasValue ?
                new ObjectParameter("HeaderId", headerId) :
                new ObjectParameter("HeaderId", typeof(int));
    
            var masterTrxIdParameter = masterTrxId.HasValue ?
                new ObjectParameter("MasterTrxId", masterTrxId) :
                new ObjectParameter("MasterTrxId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpInsertPendingData", uIDParameter, messageParameter, isRejactedParameter, isApprovedParameter, customerIDParameter, messageDateParameter, entrySourceParameter, masterTmpTrxIdParameter, classIdParameter, typeListIdParameter, masterTrxTypeListIdParameter, headerIdParameter, masterTrxIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_F_LeaseBillReportList_Result> portal_spGet_F_LeaseBillReportList(string regionId, string searchText, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_F_LeaseBillReportList_Result>("portal_spGet_F_LeaseBillReportList", regionIdParameter, searchTextParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<portal_spGet_F_LeaseBillReport_By_FranchiseeId_Result> portal_spGet_F_LeaseBillReport_By_FranchiseeId(string transactionNumber)
        {
            var transactionNumberParameter = transactionNumber != null ?
                new ObjectParameter("transactionNumber", transactionNumber) :
                new ObjectParameter("transactionNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_F_LeaseBillReport_By_FranchiseeId_Result>("portal_spGet_F_LeaseBillReport_By_FranchiseeId", transactionNumberParameter);
        }
    
        public virtual ObjectResult<spGet_Franchisee_Finderfee_BillDetailByFranchisee_Result> spGet_Franchisee_Finderfee_BillDetailByFranchisee(string transactionNumber)
        {
            var transactionNumberParameter = transactionNumber != null ?
                new ObjectParameter("transactionNumber", transactionNumber) :
                new ObjectParameter("transactionNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_Franchisee_Finderfee_BillDetailByFranchisee_Result>("spGet_Franchisee_Finderfee_BillDetailByFranchisee", transactionNumberParameter);
        }
    
        [DbFunction("jkDatabaseEntities", "fn_GetBankBalance")]
        public virtual IQueryable<fn_GetBankBalance_Result> fn_GetBankBalance(Nullable<int> bankId)
        {
            var bankIdParameter = bankId.HasValue ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetBankBalance_Result>("[jkDatabaseEntities].[fn_GetBankBalance](@BankId)", bankIdParameter);
        }
    
        [DbFunction("jkDatabaseEntities", "fn_GetBankBalanceAsOfDate")]
        public virtual IQueryable<fn_GetBankBalanceAsOfDate_Result> fn_GetBankBalanceAsOfDate(Nullable<int> bankId, Nullable<System.DateTime> asOfDate)
        {
            var bankIdParameter = bankId.HasValue ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(int));
    
            var asOfDateParameter = asOfDate.HasValue ?
                new ObjectParameter("AsOfDate", asOfDate) :
                new ObjectParameter("AsOfDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetBankBalanceAsOfDate_Result>("[jkDatabaseEntities].[fn_GetBankBalanceAsOfDate](@BankId, @AsOfDate)", bankIdParameter, asOfDateParameter);
        }
    
        [DbFunction("jkDatabaseEntities", "fn_GetBankBalanceAsOfDateIfExists")]
        public virtual IQueryable<fn_GetBankBalanceAsOfDateIfExists_Result> fn_GetBankBalanceAsOfDateIfExists(Nullable<int> bankId, Nullable<System.DateTime> asOfDate, Nullable<bool> includeAll)
        {
            var bankIdParameter = bankId.HasValue ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(int));
    
            var asOfDateParameter = asOfDate.HasValue ?
                new ObjectParameter("AsOfDate", asOfDate) :
                new ObjectParameter("AsOfDate", typeof(System.DateTime));
    
            var includeAllParameter = includeAll.HasValue ?
                new ObjectParameter("IncludeAll", includeAll) :
                new ObjectParameter("IncludeAll", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetBankBalanceAsOfDateIfExists_Result>("[jkDatabaseEntities].[fn_GetBankBalanceAsOfDateIfExists](@BankId, @AsOfDate, @IncludeAll)", bankIdParameter, asOfDateParameter, includeAllParameter);
        }
    
        public virtual ObjectResult<portal_spGet_C_BankStatementDetails_Result> portal_spGet_C_BankStatementDetails(Nullable<int> bankId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var bankIdParameter = bankId.HasValue ?
                new ObjectParameter("BankId", bankId) :
                new ObjectParameter("BankId", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_C_BankStatementDetails_Result>("portal_spGet_C_BankStatementDetails", bankIdParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AR_CustomerWithCreditList_Result> portal_spGet_AR_CustomerWithCreditList(Nullable<int> regionId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string searchText, Nullable<bool> includeClosed, Nullable<bool> includeConsolidated)
        {
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            var includeClosedParameter = includeClosed.HasValue ?
                new ObjectParameter("IncludeClosed", includeClosed) :
                new ObjectParameter("IncludeClosed", typeof(bool));
    
            var includeConsolidatedParameter = includeConsolidated.HasValue ?
                new ObjectParameter("IncludeConsolidated", includeConsolidated) :
                new ObjectParameter("IncludeConsolidated", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_CustomerWithCreditList_Result>("portal_spGet_AR_CustomerWithCreditList", regionIdParameter, fromDateParameter, toDateParameter, searchTextParameter, includeClosedParameter, includeConsolidatedParameter);
        }
    
        public virtual ObjectResult<portal_spGet_F_FindersFeeList_Result> portal_spGet_F_FindersFeeList(string regionId, string statusListId)
        {
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            var statusListIdParameter = statusListId != null ?
                new ObjectParameter("StatusListId", statusListId) :
                new ObjectParameter("StatusListId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_F_FindersFeeList_Result>("portal_spGet_F_FindersFeeList", regionIdParameter, statusListIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_F_FindersFeeDetailList_Result> portal_spGet_F_FindersFeeDetailList(Nullable<int> franchiseeId, string regionId, string statusListId)
        {
            var franchiseeIdParameter = franchiseeId.HasValue ?
                new ObjectParameter("FranchiseeId", franchiseeId) :
                new ObjectParameter("FranchiseeId", typeof(int));
    
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            var statusListIdParameter = statusListId != null ?
                new ObjectParameter("StatusListId", statusListId) :
                new ObjectParameter("StatusListId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_F_FindersFeeDetailList_Result>("portal_spGet_F_FindersFeeDetailList", franchiseeIdParameter, regionIdParameter, statusListIdParameter);
        }
    
        public virtual int CRM_Import(ObjectParameter duplicateCount)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_Import", duplicateCount);
        }
    
        public virtual ObjectResult<portal_spGet_C_DistributionReport_Result> portal_spGet_C_DistributionReport(string regionId, string searchText, Nullable<int> status)
        {
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_C_DistributionReport_Result>("portal_spGet_C_DistributionReport", regionIdParameter, searchTextParameter, statusParameter);
        }
    
        public virtual ObjectResult<portal_spGet_F_LeaseListSearch_Result> portal_spGet_F_LeaseListSearch(string statusListId, string regionId, string searchText)
        {
            var statusListIdParameter = statusListId != null ?
                new ObjectParameter("StatusListId", statusListId) :
                new ObjectParameter("StatusListId", typeof(string));
    
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_F_LeaseListSearch_Result>("portal_spGet_F_LeaseListSearch", statusListIdParameter, regionIdParameter, searchTextParameter);
        }
    
        public virtual ObjectResult<portal_spGet_F_FinderfeeReportList_Result> portal_spGet_F_FinderfeeReportList(string regionId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_F_FinderfeeReportList_Result>("portal_spGet_F_FinderfeeReportList", regionIdParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<portal_spGet_C_CustomerInvoiceHistory_Result> portal_spGet_C_CustomerInvoiceHistory(Nullable<int> customerId, Nullable<System.DateTime> startDate)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_C_CustomerInvoiceHistory_Result>("portal_spGet_C_CustomerInvoiceHistory", customerIdParameter, startDateParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AR_PendingPaymentList_Result> portal_spGet_AR_PendingPaymentList(string regionIds, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var regionIdsParameter = regionIds != null ?
                new ObjectParameter("RegionIds", regionIds) :
                new ObjectParameter("RegionIds", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_PendingPaymentList_Result>("portal_spGet_AR_PendingPaymentList", regionIdsParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AR_OpenInvoiceListWithSearch_Result> portal_spGet_AR_OpenInvoiceListWithSearch(string regionId, Nullable<int> billMonth, Nullable<int> billYear, string searchText, Nullable<int> invoiceTypeListId)
        {
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            var billMonthParameter = billMonth.HasValue ?
                new ObjectParameter("BillMonth", billMonth) :
                new ObjectParameter("BillMonth", typeof(int));
    
            var billYearParameter = billYear.HasValue ?
                new ObjectParameter("BillYear", billYear) :
                new ObjectParameter("BillYear", typeof(int));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            var invoiceTypeListIdParameter = invoiceTypeListId.HasValue ?
                new ObjectParameter("InvoiceTypeListId", invoiceTypeListId) :
                new ObjectParameter("InvoiceTypeListId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_OpenInvoiceListWithSearch_Result>("portal_spGet_AR_OpenInvoiceListWithSearch", regionIdParameter, billMonthParameter, billYearParameter, searchTextParameter, invoiceTypeListIdParameter);
        }
    
        public virtual ObjectResult<spGet_Franchisee_ManualTransaction_Result> spGet_Franchisee_ManualTransaction(string transactionNumber)
        {
            var transactionNumberParameter = transactionNumber != null ?
                new ObjectParameter("transactionNumber", transactionNumber) :
                new ObjectParameter("transactionNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGet_Franchisee_ManualTransaction_Result>("spGet_Franchisee_ManualTransaction", transactionNumberParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AR_InvoiceSearchListByNameAndInvoiceNo_Result> portal_spGet_AR_InvoiceSearchListByNameAndInvoiceNo(string regionId, Nullable<int> billMonth, Nullable<int> billYear, string searchText, Nullable<int> filterBy, Nullable<int> searchBy, string searchValue, Nullable<bool> eOMOnly, Nullable<bool> consolidatedInvoice)
        {
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            var billMonthParameter = billMonth.HasValue ?
                new ObjectParameter("BillMonth", billMonth) :
                new ObjectParameter("BillMonth", typeof(int));
    
            var billYearParameter = billYear.HasValue ?
                new ObjectParameter("BillYear", billYear) :
                new ObjectParameter("BillYear", typeof(int));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            var filterByParameter = filterBy.HasValue ?
                new ObjectParameter("FilterBy", filterBy) :
                new ObjectParameter("FilterBy", typeof(int));
    
            var searchByParameter = searchBy.HasValue ?
                new ObjectParameter("SearchBy", searchBy) :
                new ObjectParameter("SearchBy", typeof(int));
    
            var searchValueParameter = searchValue != null ?
                new ObjectParameter("SearchValue", searchValue) :
                new ObjectParameter("SearchValue", typeof(string));
    
            var eOMOnlyParameter = eOMOnly.HasValue ?
                new ObjectParameter("EOMOnly", eOMOnly) :
                new ObjectParameter("EOMOnly", typeof(bool));
    
            var consolidatedInvoiceParameter = consolidatedInvoice.HasValue ?
                new ObjectParameter("ConsolidatedInvoice", consolidatedInvoice) :
                new ObjectParameter("ConsolidatedInvoice", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_InvoiceSearchListByNameAndInvoiceNo_Result>("portal_spGet_AR_InvoiceSearchListByNameAndInvoiceNo", regionIdParameter, billMonthParameter, billYearParameter, searchTextParameter, filterByParameter, searchByParameter, searchValueParameter, eOMOnlyParameter, consolidatedInvoiceParameter);
        }
    
        public virtual ObjectResult<string> portal_spCreate_F_FirenchiseeManualBillGenerate(Nullable<int> franchiseeTransactionId, Nullable<int> regionId, Nullable<int> createdBy, ObjectParameter batchId)
        {
            var franchiseeTransactionIdParameter = franchiseeTransactionId.HasValue ?
                new ObjectParameter("FranchiseeTransactionId", franchiseeTransactionId) :
                new ObjectParameter("FranchiseeTransactionId", typeof(int));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("portal_spCreate_F_FirenchiseeManualBillGenerate", franchiseeTransactionIdParameter, regionIdParameter, createdByParameter, batchId);
        }
    
        public virtual ObjectResult<spGetCRMContactList_Result> spGetCRMContactList(Nullable<int> contactID)
        {
            var contactIDParameter = contactID.HasValue ?
                new ObjectParameter("ContactID", contactID) :
                new ObjectParameter("ContactID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetCRMContactList_Result>("spGetCRMContactList", contactIDParameter);
        }
    
        public virtual ObjectResult<PortalSpGetCustomerStatements_Result> PortalSpGetCustomerStatements(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string regionIds)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var regionIdsParameter = regionIds != null ?
                new ObjectParameter("RegionIds", regionIds) :
                new ObjectParameter("RegionIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PortalSpGetCustomerStatements_Result>("PortalSpGetCustomerStatements", startDateParameter, endDateParameter, regionIdsParameter);
        }
    
        public virtual int portal_spDelete_AP_GeneratedFranchiseeReports(Nullable<int> regionId, Nullable<int> billMonth, Nullable<int> billYear)
        {
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var billMonthParameter = billMonth.HasValue ?
                new ObjectParameter("BillMonth", billMonth) :
                new ObjectParameter("BillMonth", typeof(int));
    
            var billYearParameter = billYear.HasValue ?
                new ObjectParameter("BillYear", billYear) :
                new ObjectParameter("BillYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("portal_spDelete_AP_GeneratedFranchiseeReports", regionIdParameter, billMonthParameter, billYearParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AP_FranchiseeReportList_Result> portal_spGet_AP_FranchiseeReportList(string regionId, Nullable<int> billMonth, Nullable<int> billYear)
        {
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            var billMonthParameter = billMonth.HasValue ?
                new ObjectParameter("BillMonth", billMonth) :
                new ObjectParameter("BillMonth", typeof(int));
    
            var billYearParameter = billYear.HasValue ?
                new ObjectParameter("BillYear", billYear) :
                new ObjectParameter("BillYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AP_FranchiseeReportList_Result>("portal_spGet_AP_FranchiseeReportList", regionIdParameter, billMonthParameter, billYearParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AP_GeneratedFranchiseeReportList_Result> portal_spGet_AP_GeneratedFranchiseeReportList(string regionId, Nullable<int> billMonth, Nullable<int> billYear)
        {
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            var billMonthParameter = billMonth.HasValue ?
                new ObjectParameter("BillMonth", billMonth) :
                new ObjectParameter("BillMonth", typeof(int));
    
            var billYearParameter = billYear.HasValue ?
                new ObjectParameter("BillYear", billYear) :
                new ObjectParameter("BillYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AP_GeneratedFranchiseeReportList_Result>("portal_spGet_AP_GeneratedFranchiseeReportList", regionIdParameter, billMonthParameter, billYearParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AP_FinalizedFranchiseeReportList_Result> portal_spGet_AP_FinalizedFranchiseeReportList(string regionId, Nullable<int> billMonth, Nullable<int> billYear)
        {
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            var billMonthParameter = billMonth.HasValue ?
                new ObjectParameter("BillMonth", billMonth) :
                new ObjectParameter("BillMonth", typeof(int));
    
            var billYearParameter = billYear.HasValue ?
                new ObjectParameter("BillYear", billYear) :
                new ObjectParameter("BillYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AP_FinalizedFranchiseeReportList_Result>("portal_spGet_AP_FinalizedFranchiseeReportList", regionIdParameter, billMonthParameter, billYearParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AP_FinalizedFranchiseeReportPeriods_Result> portal_spGet_AP_FinalizedFranchiseeReportPeriods(Nullable<int> regionId)
        {
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AP_FinalizedFranchiseeReportPeriods_Result>("portal_spGet_AP_FinalizedFranchiseeReportPeriods", regionIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AP_AvailableChargebackPeriods_Result> portal_spGet_AP_AvailableChargebackPeriods(string regionId)
        {
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AP_AvailableChargebackPeriods_Result>("portal_spGet_AP_AvailableChargebackPeriods", regionIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AP_AvailableFranchiseeReportFinalizedPeriods_Result> portal_spGet_AP_AvailableFranchiseeReportFinalizedPeriods(string regionId)
        {
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AP_AvailableFranchiseeReportFinalizedPeriods_Result>("portal_spGet_AP_AvailableFranchiseeReportFinalizedPeriods", regionIdParameter);
        }
    
        public virtual int CRM_TerritoryImport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CRM_TerritoryImport");
        }
    
        public virtual ObjectResult<CRM_spGet_SalesPerson_Result> CRM_spGet_SalesPerson(Nullable<int> roleid, Nullable<int> territoryId)
        {
            var roleidParameter = roleid.HasValue ?
                new ObjectParameter("roleid", roleid) :
                new ObjectParameter("roleid", typeof(int));
    
            var territoryIdParameter = territoryId.HasValue ?
                new ObjectParameter("territoryId", territoryId) :
                new ObjectParameter("territoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_spGet_SalesPerson_Result>("CRM_spGet_SalesPerson", roleidParameter, territoryIdParameter);
        }
    
        public virtual ObjectResult<CRM_common_CRMDashboard_Result> CRM_common_CRMDashboard(Nullable<int> region, Nullable<int> user)
        {
            var regionParameter = region.HasValue ?
                new ObjectParameter("region", region) :
                new ObjectParameter("region", typeof(int));
    
            var userParameter = user.HasValue ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_common_CRMDashboard_Result>("CRM_common_CRMDashboard", regionParameter, userParameter);
        }
    
        public virtual int portal_spCreate_AR_GenerateInvoiceByCustomer(Nullable<int> customerId, string regionId, Nullable<int> billMonth, Nullable<int> billYear, Nullable<int> createdBy, ObjectParameter batchId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            var billMonthParameter = billMonth.HasValue ?
                new ObjectParameter("BillMonth", billMonth) :
                new ObjectParameter("BillMonth", typeof(int));
    
            var billYearParameter = billYear.HasValue ?
                new ObjectParameter("BillYear", billYear) :
                new ObjectParameter("BillYear", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("portal_spCreate_AR_GenerateInvoiceByCustomer", customerIdParameter, regionIdParameter, billMonthParameter, billYearParameter, createdByParameter, batchId);
        }
    
        public virtual ObjectResult<portal_spGet_CustomerMaintenanceList_Result> portal_spGet_CustomerMaintenanceList(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_CustomerMaintenanceList_Result>("portal_spGet_CustomerMaintenanceList", customerIdParameter);
        }
    
        [DbFunction("jkDatabaseEntities", "fn_GetCalanderDatesFromDateRange")]
        public virtual IQueryable<fn_GetCalanderDatesFromDateRange_Result> fn_GetCalanderDatesFromDateRange(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetCalanderDatesFromDateRange_Result>("[jkDatabaseEntities].[fn_GetCalanderDatesFromDateRange](@FromDate, @ToDate)", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<portal_spGet_C_DistributionWithNoFinderFee_Result> portal_spGet_C_DistributionWithNoFinderFee(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_C_DistributionWithNoFinderFee_Result>("portal_spGet_C_DistributionWithNoFinderFee", customerIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_C_CancellationInvoiceList_Result> portal_spGet_C_CancellationInvoiceList(Nullable<int> customerId, Nullable<int> month, Nullable<int> year)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_C_CancellationInvoiceList_Result>("portal_spGet_C_CancellationInvoiceList", customerIdParameter, monthParameter, yearParameter);
        }
    
        [DbFunction("jkDatabaseEntities", "fn_GetCustomerCreditBalance")]
        public virtual IQueryable<fn_GetCustomerCreditBalance_Result> fn_GetCustomerCreditBalance(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetCustomerCreditBalance_Result>("[jkDatabaseEntities].[fn_GetCustomerCreditBalance](@CustomerId)", customerIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_FranchiseeMaintenanceList_Result> portal_spGet_FranchiseeMaintenanceList(Nullable<int> franchiseeId)
        {
            var franchiseeIdParameter = franchiseeId.HasValue ?
                new ObjectParameter("FranchiseeId", franchiseeId) :
                new ObjectParameter("FranchiseeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_FranchiseeMaintenanceList_Result>("portal_spGet_FranchiseeMaintenanceList", franchiseeIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AR_BillRunSummaryDetailValidatedPeriod_Result> portal_spGet_AR_BillRunSummaryDetailValidatedPeriod(Nullable<int> regionId, Nullable<int> billMonth, Nullable<int> billYear)
        {
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var billMonthParameter = billMonth.HasValue ?
                new ObjectParameter("BillMonth", billMonth) :
                new ObjectParameter("BillMonth", typeof(int));
    
            var billYearParameter = billYear.HasValue ?
                new ObjectParameter("BillYear", billYear) :
                new ObjectParameter("BillYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_BillRunSummaryDetailValidatedPeriod_Result>("portal_spGet_AR_BillRunSummaryDetailValidatedPeriod", regionIdParameter, billMonthParameter, billYearParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AR_InvoiceListForManualPayment_Result> portal_spGet_AR_InvoiceListForManualPayment(string regionId, string searchText, Nullable<bool> includeClosed, Nullable<bool> includeConsolidated, string oCValue, Nullable<int> billMonth, Nullable<int> billYear)
        {
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            var includeClosedParameter = includeClosed.HasValue ?
                new ObjectParameter("IncludeClosed", includeClosed) :
                new ObjectParameter("IncludeClosed", typeof(bool));
    
            var includeConsolidatedParameter = includeConsolidated.HasValue ?
                new ObjectParameter("IncludeConsolidated", includeConsolidated) :
                new ObjectParameter("IncludeConsolidated", typeof(bool));
    
            var oCValueParameter = oCValue != null ?
                new ObjectParameter("OCValue", oCValue) :
                new ObjectParameter("OCValue", typeof(string));
    
            var billMonthParameter = billMonth.HasValue ?
                new ObjectParameter("BillMonth", billMonth) :
                new ObjectParameter("BillMonth", typeof(int));
    
            var billYearParameter = billYear.HasValue ?
                new ObjectParameter("BillYear", billYear) :
                new ObjectParameter("BillYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_InvoiceListForManualPayment_Result>("portal_spGet_AR_InvoiceListForManualPayment", regionIdParameter, searchTextParameter, includeClosedParameter, includeConsolidatedParameter, oCValueParameter, billMonthParameter, billYearParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AP_AvailableChargebackFinalizedPeriods_Result> portal_spGet_AP_AvailableChargebackFinalizedPeriods(string regionId)
        {
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AP_AvailableChargebackFinalizedPeriods_Result>("portal_spGet_AP_AvailableChargebackFinalizedPeriods", regionIdParameter);
        }
    
        public virtual ObjectResult<SpGetPercentPaidByDateReport_Result> SpGetPercentPaidByDateReport(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpGetPercentPaidByDateReport_Result>("SpGetPercentPaidByDateReport", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<portal_spGet_FP_BilingPayList_Result> portal_spGet_FP_BilingPayList(Nullable<int> regionId, string searchText, Nullable<bool> includeClosed, Nullable<bool> includeConsolidated, Nullable<int> billMonth, Nullable<int> billYear)
        {
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            var includeClosedParameter = includeClosed.HasValue ?
                new ObjectParameter("IncludeClosed", includeClosed) :
                new ObjectParameter("IncludeClosed", typeof(bool));
    
            var includeConsolidatedParameter = includeConsolidated.HasValue ?
                new ObjectParameter("IncludeConsolidated", includeConsolidated) :
                new ObjectParameter("IncludeConsolidated", typeof(bool));
    
            var billMonthParameter = billMonth.HasValue ?
                new ObjectParameter("BillMonth", billMonth) :
                new ObjectParameter("BillMonth", typeof(int));
    
            var billYearParameter = billYear.HasValue ?
                new ObjectParameter("BillYear", billYear) :
                new ObjectParameter("BillYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_FP_BilingPayList_Result>("portal_spGet_FP_BilingPayList", regionIdParameter, searchTextParameter, includeClosedParameter, includeConsolidatedParameter, billMonthParameter, billYearParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AP_AvailableFranchiseeReportGeneratePeriods_Result> portal_spGet_AP_AvailableFranchiseeReportGeneratePeriods(string regionId)
        {
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AP_AvailableFranchiseeReportGeneratePeriods_Result>("portal_spGet_AP_AvailableFranchiseeReportGeneratePeriods", regionIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AP_TurnAroundListSummary_Result> portal_spGet_AP_TurnAroundListSummary(string regionIds, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var regionIdsParameter = regionIds != null ?
                new ObjectParameter("RegionIds", regionIds) :
                new ObjectParameter("RegionIds", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AP_TurnAroundListSummary_Result>("portal_spGet_AP_TurnAroundListSummary", regionIdsParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> portal_spCreate_AP_FinalizeFranchiseeReports(string regionId, Nullable<int> periodId, string franchiseeReportId, Nullable<int> userId)
        {
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            var periodIdParameter = periodId.HasValue ?
                new ObjectParameter("PeriodId", periodId) :
                new ObjectParameter("PeriodId", typeof(int));
    
            var franchiseeReportIdParameter = franchiseeReportId != null ?
                new ObjectParameter("FranchiseeReportId", franchiseeReportId) :
                new ObjectParameter("FranchiseeReportId", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("portal_spCreate_AP_FinalizeFranchiseeReports", regionIdParameter, periodIdParameter, franchiseeReportIdParameter, userIdParameter);
        }
    
        public virtual int potal_spGet_AP_GetTaxRateAPI()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("potal_spGet_AP_GetTaxRateAPI");
        }
    
        public virtual ObjectResult<portal_spGet_AP_FranchiseeReportDetails_Result> portal_spGet_AP_FranchiseeReportDetails(Nullable<int> franchiseeReportId)
        {
            var franchiseeReportIdParameter = franchiseeReportId.HasValue ?
                new ObjectParameter("FranchiseeReportId", franchiseeReportId) :
                new ObjectParameter("FranchiseeReportId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AP_FranchiseeReportDetails_Result>("portal_spGet_AP_FranchiseeReportDetails", franchiseeReportIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AP_FranchiseeReportFinalizedDetails_Result> portal_spGet_AP_FranchiseeReportFinalizedDetails(Nullable<int> franchiseeReportFinalizedId)
        {
            var franchiseeReportFinalizedIdParameter = franchiseeReportFinalizedId.HasValue ?
                new ObjectParameter("FranchiseeReportFinalizedId", franchiseeReportFinalizedId) :
                new ObjectParameter("FranchiseeReportFinalizedId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AP_FranchiseeReportFinalizedDetails_Result>("portal_spGet_AP_FranchiseeReportFinalizedDetails", franchiseeReportFinalizedIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AR_InvoiceListWithSearch_Result> portal_spGet_AR_InvoiceListWithSearch(string regionId, Nullable<int> billMonth, Nullable<int> billYear, string searchText, Nullable<int> invoiceTypeListId)
        {
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            var billMonthParameter = billMonth.HasValue ?
                new ObjectParameter("BillMonth", billMonth) :
                new ObjectParameter("BillMonth", typeof(int));
    
            var billYearParameter = billYear.HasValue ?
                new ObjectParameter("BillYear", billYear) :
                new ObjectParameter("BillYear", typeof(int));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            var invoiceTypeListIdParameter = invoiceTypeListId.HasValue ?
                new ObjectParameter("InvoiceTypeListId", invoiceTypeListId) :
                new ObjectParameter("InvoiceTypeListId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_InvoiceListWithSearch_Result>("portal_spGet_AR_InvoiceListWithSearch", regionIdParameter, billMonthParameter, billYearParameter, searchTextParameter, invoiceTypeListIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AR_InvoiceSearchListForCustomerCredits_Result> portal_spGet_AR_InvoiceSearchListForCustomerCredits(string regionId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string searchText, Nullable<bool> includeClosed, Nullable<bool> includeConsolidated, Nullable<int> searchBy, Nullable<int> customerId)
        {
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            var includeClosedParameter = includeClosed.HasValue ?
                new ObjectParameter("IncludeClosed", includeClosed) :
                new ObjectParameter("IncludeClosed", typeof(bool));
    
            var includeConsolidatedParameter = includeConsolidated.HasValue ?
                new ObjectParameter("IncludeConsolidated", includeConsolidated) :
                new ObjectParameter("IncludeConsolidated", typeof(bool));
    
            var searchByParameter = searchBy.HasValue ?
                new ObjectParameter("SearchBy", searchBy) :
                new ObjectParameter("SearchBy", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_InvoiceSearchListForCustomerCredits_Result>("portal_spGet_AR_InvoiceSearchListForCustomerCredits", regionIdParameter, fromDateParameter, toDateParameter, searchTextParameter, includeClosedParameter, includeConsolidatedParameter, searchByParameter, customerIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AR_CustomerDetail_Result> portal_spGet_AR_CustomerDetail(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_CustomerDetail_Result>("portal_spGet_AR_CustomerDetail", customerIdParameter);
        }
    
        [DbFunction("jkDatabaseEntities", "fn_GetInvoiceBalance")]
        public virtual IQueryable<fn_GetInvoiceBalance_Result> fn_GetInvoiceBalance(Nullable<int> invoiceId)
        {
            var invoiceIdParameter = invoiceId.HasValue ?
                new ObjectParameter("InvoiceId", invoiceId) :
                new ObjectParameter("InvoiceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetInvoiceBalance_Result>("[jkDatabaseEntities].[fn_GetInvoiceBalance](@InvoiceId)", invoiceIdParameter);
        }
    
        [DbFunction("jkDatabaseEntities", "fn_GetInvoiceBalanceForCredit")]
        public virtual IQueryable<fn_GetInvoiceBalanceForCredit_Result> fn_GetInvoiceBalanceForCredit(Nullable<int> invoiceId)
        {
            var invoiceIdParameter = invoiceId.HasValue ?
                new ObjectParameter("InvoiceId", invoiceId) :
                new ObjectParameter("InvoiceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_GetInvoiceBalanceForCredit_Result>("[jkDatabaseEntities].[fn_GetInvoiceBalanceForCredit](@InvoiceId)", invoiceIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AP_FranchiseeReportDetailsByCustomerAndServiceType_Result> portal_spGet_AP_FranchiseeReportDetailsByCustomerAndServiceType(Nullable<int> franchiseeReportId)
        {
            var franchiseeReportIdParameter = franchiseeReportId.HasValue ?
                new ObjectParameter("FranchiseeReportId", franchiseeReportId) :
                new ObjectParameter("FranchiseeReportId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AP_FranchiseeReportDetailsByCustomerAndServiceType_Result>("portal_spGet_AP_FranchiseeReportDetailsByCustomerAndServiceType", franchiseeReportIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AP_FranchiseeReportFinalizedDetailsByCustomerAndServiceType_Result> portal_spGet_AP_FranchiseeReportFinalizedDetailsByCustomerAndServiceType(Nullable<int> franchiseeReportId)
        {
            var franchiseeReportIdParameter = franchiseeReportId.HasValue ?
                new ObjectParameter("FranchiseeReportId", franchiseeReportId) :
                new ObjectParameter("FranchiseeReportId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AP_FranchiseeReportFinalizedDetailsByCustomerAndServiceType_Result>("portal_spGet_AP_FranchiseeReportFinalizedDetailsByCustomerAndServiceType", franchiseeReportIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_BankStatment_Result> portal_spGet_BankStatment(string regionId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_BankStatment_Result>("portal_spGet_BankStatment", regionIdParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int portal_spCreate_AP_GenerateFranchiseeReports(Nullable<int> regionId, Nullable<int> billMonth, Nullable<int> billYear, Nullable<int> userId)
        {
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var billMonthParameter = billMonth.HasValue ?
                new ObjectParameter("BillMonth", billMonth) :
                new ObjectParameter("BillMonth", typeof(int));
    
            var billYearParameter = billYear.HasValue ?
                new ObjectParameter("BillYear", billYear) :
                new ObjectParameter("BillYear", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("portal_spCreate_AP_GenerateFranchiseeReports", regionIdParameter, billMonthParameter, billYearParameter, userIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AR_InvoiceSearchListForCreditTransaction_Result> portal_spGet_AR_InvoiceSearchListForCreditTransaction(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_InvoiceSearchListForCreditTransaction_Result>("portal_spGet_AR_InvoiceSearchListForCreditTransaction", customerIdParameter);
        }
    
        public virtual ObjectResult<sp_GetTemplateAreaItemListByArea_Result> sp_GetTemplateAreaItemListByArea(Nullable<int> templateAreaId, Nullable<bool> isEnable, string sortColumn, string sortOrder)
        {
            var templateAreaIdParameter = templateAreaId.HasValue ?
                new ObjectParameter("TemplateAreaId", templateAreaId) :
                new ObjectParameter("TemplateAreaId", typeof(int));
    
            var isEnableParameter = isEnable.HasValue ?
                new ObjectParameter("IsEnable", isEnable) :
                new ObjectParameter("IsEnable", typeof(bool));
    
            var sortColumnParameter = sortColumn != null ?
                new ObjectParameter("SortColumn", sortColumn) :
                new ObjectParameter("SortColumn", typeof(string));
    
            var sortOrderParameter = sortOrder != null ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetTemplateAreaItemListByArea_Result>("sp_GetTemplateAreaItemListByArea", templateAreaIdParameter, isEnableParameter, sortColumnParameter, sortOrderParameter);
        }
    
        public virtual ObjectResult<portal_spGet_C_CheckDetails_Result> portal_spGet_C_CheckDetails(Nullable<int> checkBookId)
        {
            var checkBookIdParameter = checkBookId.HasValue ?
                new ObjectParameter("CheckBookId", checkBookId) :
                new ObjectParameter("CheckBookId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_C_CheckDetails_Result>("portal_spGet_C_CheckDetails", checkBookIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_CustomerDetail_Result> portal_spGet_CustomerDetail(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_CustomerDetail_Result>("portal_spGet_CustomerDetail", iDParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AP_OpenNotPrintedAPBillListByType_Result> portal_spGet_AP_OpenNotPrintedAPBillListByType(Nullable<int> regionId, Nullable<int> checkBookTransactionTypeListId)
        {
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var checkBookTransactionTypeListIdParameter = checkBookTransactionTypeListId.HasValue ?
                new ObjectParameter("CheckBookTransactionTypeListId", checkBookTransactionTypeListId) :
                new ObjectParameter("CheckBookTransactionTypeListId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AP_OpenNotPrintedAPBillListByType_Result>("portal_spGet_AP_OpenNotPrintedAPBillListByType", regionIdParameter, checkBookTransactionTypeListIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AP_TurnAroundSummaryList_Result> portal_spGet_AP_TurnAroundSummaryList(string regionId, Nullable<System.DateTime> paymentdate)
        {
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            var paymentdateParameter = paymentdate.HasValue ?
                new ObjectParameter("Paymentdate", paymentdate) :
                new ObjectParameter("Paymentdate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AP_TurnAroundSummaryList_Result>("portal_spGet_AP_TurnAroundSummaryList", regionIdParameter, paymentdateParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AP_TaxRateAPI_Result> portal_spGet_AP_TaxRateAPI()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AP_TaxRateAPI_Result>("portal_spGet_AP_TaxRateAPI");
        }
    
        public virtual ObjectResult<Nullable<int>> portal_spGet_AP_ClearGeneratedFranchiseeReportList(string regionId, Nullable<int> periodId)
        {
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            var periodIdParameter = periodId.HasValue ?
                new ObjectParameter("PeriodId", periodId) :
                new ObjectParameter("PeriodId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("portal_spGet_AP_ClearGeneratedFranchiseeReportList", regionIdParameter, periodIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AP_FranchiseeReportDeductions_Result> portal_spGet_AP_FranchiseeReportDeductions(Nullable<int> franchiseeReportId)
        {
            var franchiseeReportIdParameter = franchiseeReportId.HasValue ?
                new ObjectParameter("FranchiseeReportId", franchiseeReportId) :
                new ObjectParameter("FranchiseeReportId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AP_FranchiseeReportDeductions_Result>("portal_spGet_AP_FranchiseeReportDeductions", franchiseeReportIdParameter);
        }
    
        public virtual int portal_spCreate_AR_GenerateBillRun_Lease(string regionId, Nullable<int> billMonth, Nullable<int> billYear, Nullable<int> frenchiseeId, Nullable<int> createdBy, ObjectParameter batchId)
        {
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            var billMonthParameter = billMonth.HasValue ?
                new ObjectParameter("BillMonth", billMonth) :
                new ObjectParameter("BillMonth", typeof(int));
    
            var billYearParameter = billYear.HasValue ?
                new ObjectParameter("BillYear", billYear) :
                new ObjectParameter("BillYear", typeof(int));
    
            var frenchiseeIdParameter = frenchiseeId.HasValue ?
                new ObjectParameter("FrenchiseeId", frenchiseeId) :
                new ObjectParameter("FrenchiseeId", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("portal_spCreate_AR_GenerateBillRun_Lease", regionIdParameter, billMonthParameter, billYearParameter, frenchiseeIdParameter, createdByParameter, batchId);
        }
    
        public virtual ObjectResult<Nullable<int>> Portal_sp_Customer_ReActivate(Nullable<int> customerId, Nullable<int> createdBy)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Portal_sp_Customer_ReActivate", customerIdParameter, createdByParameter);
        }
    
        public virtual ObjectResult<CRM_spGet_PotentialList_Result> CRM_spGet_PotentialList(Nullable<int> type, string region, Nullable<int> user, Nullable<int> choice, Nullable<int> loginUserId, Nullable<int> pageNo, Nullable<int> pageSize)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var regionParameter = region != null ?
                new ObjectParameter("region", region) :
                new ObjectParameter("region", typeof(string));
    
            var userParameter = user.HasValue ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(int));
    
            var choiceParameter = choice.HasValue ?
                new ObjectParameter("choice", choice) :
                new ObjectParameter("choice", typeof(int));
    
            var loginUserIdParameter = loginUserId.HasValue ?
                new ObjectParameter("LoginUserId", loginUserId) :
                new ObjectParameter("LoginUserId", typeof(int));
    
            var pageNoParameter = pageNo.HasValue ?
                new ObjectParameter("PageNo", pageNo) :
                new ObjectParameter("PageNo", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CRM_spGet_PotentialList_Result>("CRM_spGet_PotentialList", typeParameter, regionParameter, userParameter, choiceParameter, loginUserIdParameter, pageNoParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AP_InvoiceFranchiseeSummaryForChargeback_Result> portal_spGet_AP_InvoiceFranchiseeSummaryForChargeback(string regionIds, Nullable<int> periodId)
        {
            var regionIdsParameter = regionIds != null ?
                new ObjectParameter("RegionIds", regionIds) :
                new ObjectParameter("RegionIds", typeof(string));
    
            var periodIdParameter = periodId.HasValue ?
                new ObjectParameter("PeriodId", periodId) :
                new ObjectParameter("PeriodId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AP_InvoiceFranchiseeSummaryForChargeback_Result>("portal_spGet_AP_InvoiceFranchiseeSummaryForChargeback", regionIdsParameter, periodIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Portal_sp_Customer_Suspended(Nullable<int> customerId, Nullable<int> createdBy)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Portal_sp_Customer_Suspended", customerIdParameter, createdByParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AP_AccountingFeeRebateCheckDetails_Result> portal_spGet_AP_AccountingFeeRebateCheckDetails(string regionId, Nullable<int> mastertrxId)
        {
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            var mastertrxIdParameter = mastertrxId.HasValue ?
                new ObjectParameter("MastertrxId", mastertrxId) :
                new ObjectParameter("MastertrxId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AP_AccountingFeeRebateCheckDetails_Result>("portal_spGet_AP_AccountingFeeRebateCheckDetails", regionIdParameter, mastertrxIdParameter);
        }
    
        public virtual ObjectResult<portal_spCreate_AP_AccountingFeeRebateProcess_Result> portal_spCreate_AP_AccountingFeeRebateProcess(string regionId)
        {
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spCreate_AP_AccountingFeeRebateProcess_Result>("portal_spCreate_AP_AccountingFeeRebateProcess", regionIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AP_TurnAroundList_Result> portal_spGet_AP_TurnAroundList(string regionIds, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var regionIdsParameter = regionIds != null ?
                new ObjectParameter("RegionIds", regionIds) :
                new ObjectParameter("RegionIds", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AP_TurnAroundList_Result>("portal_spGet_AP_TurnAroundList", regionIdsParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<portal_spGet_F_GetFinderFeeCustomersList_Result> portal_spGet_F_GetFinderFeeCustomersList(Nullable<int> regionId, Nullable<int> franchiseeId, string statusListId)
        {
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var franchiseeIdParameter = franchiseeId.HasValue ?
                new ObjectParameter("FranchiseeId", franchiseeId) :
                new ObjectParameter("FranchiseeId", typeof(int));
    
            var statusListIdParameter = statusListId != null ?
                new ObjectParameter("StatusListId", statusListId) :
                new ObjectParameter("StatusListId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_F_GetFinderFeeCustomersList_Result>("portal_spGet_F_GetFinderFeeCustomersList", regionIdParameter, franchiseeIdParameter, statusListIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AP_FranchiseeReportFinalizedDeductions_Result> portal_spGet_AP_FranchiseeReportFinalizedDeductions(Nullable<int> franchiseeReportFinalizedId)
        {
            var franchiseeReportFinalizedIdParameter = franchiseeReportFinalizedId.HasValue ?
                new ObjectParameter("FranchiseeReportFinalizedId", franchiseeReportFinalizedId) :
                new ObjectParameter("FranchiseeReportFinalizedId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AP_FranchiseeReportFinalizedDeductions_Result>("portal_spGet_AP_FranchiseeReportFinalizedDeductions", franchiseeReportFinalizedIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AP_TurnAroundCheckDetails_Result> portal_spGet_AP_TurnAroundCheckDetails(string regionId, Nullable<int> masterTrxId)
        {
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            var masterTrxIdParameter = masterTrxId.HasValue ?
                new ObjectParameter("MasterTrxId", masterTrxId) :
                new ObjectParameter("MasterTrxId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AP_TurnAroundCheckDetails_Result>("portal_spGet_AP_TurnAroundCheckDetails", regionIdParameter, masterTrxIdParameter);
        }
    
        public virtual int Auth_UpdateLoginTracking(Nullable<int> userId, Nullable<int> loginTrackingId, Nullable<int> menuId, string refUrl)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var loginTrackingIdParameter = loginTrackingId.HasValue ?
                new ObjectParameter("LoginTrackingId", loginTrackingId) :
                new ObjectParameter("LoginTrackingId", typeof(int));
    
            var menuIdParameter = menuId.HasValue ?
                new ObjectParameter("MenuId", menuId) :
                new ObjectParameter("MenuId", typeof(int));
    
            var refUrlParameter = refUrl != null ?
                new ObjectParameter("RefUrl", refUrl) :
                new ObjectParameter("RefUrl", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Auth_UpdateLoginTracking", userIdParameter, loginTrackingIdParameter, menuIdParameter, refUrlParameter);
        }
    
        public virtual int portal_spCreate_AR_GenerateBillRun_Invoice(string regionId, Nullable<int> billMonth, Nullable<int> billYear, Nullable<int> createdBy, ObjectParameter batchId)
        {
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            var billMonthParameter = billMonth.HasValue ?
                new ObjectParameter("BillMonth", billMonth) :
                new ObjectParameter("BillMonth", typeof(int));
    
            var billYearParameter = billYear.HasValue ?
                new ObjectParameter("BillYear", billYear) :
                new ObjectParameter("BillYear", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("portal_spCreate_AR_GenerateBillRun_Invoice", regionIdParameter, billMonthParameter, billYearParameter, createdByParameter, batchId);
        }
    
        public virtual ObjectResult<Atuh_UserLoginTrackingList_Result> Atuh_UserLoginTrackingList(string fromDate, string endDate, string oC)
        {
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var oCParameter = oC != null ?
                new ObjectParameter("OC", oC) :
                new ObjectParameter("OC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Atuh_UserLoginTrackingList_Result>("Atuh_UserLoginTrackingList", fromDateParameter, endDateParameter, oCParameter);
        }
    
        public virtual ObjectResult<Auth_UserLoginActivityBYId_Result> Auth_UserLoginActivityBYId(Nullable<int> trackingId)
        {
            var trackingIdParameter = trackingId.HasValue ?
                new ObjectParameter("TrackingId", trackingId) :
                new ObjectParameter("TrackingId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Auth_UserLoginActivityBYId_Result>("Auth_UserLoginActivityBYId", trackingIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AR_FranchiseeSupplybyId_Result> portal_spGet_AR_FranchiseeSupplybyId(Nullable<int> fransSupplyId, Nullable<int> regionId)
        {
            var fransSupplyIdParameter = fransSupplyId.HasValue ?
                new ObjectParameter("FransSupplyId", fransSupplyId) :
                new ObjectParameter("FransSupplyId", typeof(int));
    
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AR_FranchiseeSupplybyId_Result>("portal_spGet_AR_FranchiseeSupplybyId", fransSupplyIdParameter, regionIdParameter);
        }
    
        public virtual int portal_sp_UpdateCustomerLogId(Nullable<int> classId, Nullable<int> typeListId, Nullable<int> serviceLogTypeListId, Nullable<int> createdBy)
        {
            var classIdParameter = classId.HasValue ?
                new ObjectParameter("ClassId", classId) :
                new ObjectParameter("ClassId", typeof(int));
    
            var typeListIdParameter = typeListId.HasValue ?
                new ObjectParameter("TypeListId", typeListId) :
                new ObjectParameter("TypeListId", typeof(int));
    
            var serviceLogTypeListIdParameter = serviceLogTypeListId.HasValue ?
                new ObjectParameter("ServiceLogTypeListId", serviceLogTypeListId) :
                new ObjectParameter("ServiceLogTypeListId", typeof(int));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("portal_sp_UpdateCustomerLogId", classIdParameter, typeListIdParameter, serviceLogTypeListIdParameter, createdByParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AP_PendingUnprintedManualCheckList_Result> portal_spGet_AP_PendingUnprintedManualCheckList(Nullable<int> regionId, Nullable<int> transactionStatus)
        {
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var transactionStatusParameter = transactionStatus.HasValue ?
                new ObjectParameter("TransactionStatus", transactionStatus) :
                new ObjectParameter("TransactionStatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AP_PendingUnprintedManualCheckList_Result>("portal_spGet_AP_PendingUnprintedManualCheckList", regionIdParameter, transactionStatusParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AP_APBillListById_Result> portal_spGet_AP_APBillListById(Nullable<int> regionId, string aPBillListId)
        {
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var aPBillListIdParameter = aPBillListId != null ?
                new ObjectParameter("APBillListId", aPBillListId) :
                new ObjectParameter("APBillListId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AP_APBillListById_Result>("portal_spGet_AP_APBillListById", regionIdParameter, aPBillListIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AP_TurnAroundDetailsList_Result> portal_spGet_AP_TurnAroundDetailsList(string regionId, Nullable<System.DateTime> paymentdate, Nullable<int> franchiseeId)
        {
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            var paymentdateParameter = paymentdate.HasValue ?
                new ObjectParameter("Paymentdate", paymentdate) :
                new ObjectParameter("Paymentdate", typeof(System.DateTime));
    
            var franchiseeIdParameter = franchiseeId.HasValue ?
                new ObjectParameter("FranchiseeId", franchiseeId) :
                new ObjectParameter("FranchiseeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AP_TurnAroundDetailsList_Result>("portal_spGet_AP_TurnAroundDetailsList", regionIdParameter, paymentdateParameter, franchiseeIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_F_FranchiseeManualTransactionsList_Result> portal_spGet_F_FranchiseeManualTransactionsList(string regionId, string searchText, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> billMonth, Nullable<int> billYear)
        {
            var regionIdParameter = regionId != null ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(string));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var billMonthParameter = billMonth.HasValue ?
                new ObjectParameter("BillMonth", billMonth) :
                new ObjectParameter("BillMonth", typeof(int));
    
            var billYearParameter = billYear.HasValue ?
                new ObjectParameter("BillYear", billYear) :
                new ObjectParameter("BillYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_F_FranchiseeManualTransactionsList_Result>("portal_spGet_F_FranchiseeManualTransactionsList", regionIdParameter, searchTextParameter, startDateParameter, endDateParameter, billMonthParameter, billYearParameter);
        }
    
        public virtual int portal_spCreate_C_FinderFeeBillGenerateFirenchisee(Nullable<int> regionId, Nullable<int> userId, Nullable<int> finderFeeId, Nullable<bool> hasFinderFeeId, Nullable<int> fCustomerId)
        {
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var finderFeeIdParameter = finderFeeId.HasValue ?
                new ObjectParameter("FinderFeeId", finderFeeId) :
                new ObjectParameter("FinderFeeId", typeof(int));
    
            var hasFinderFeeIdParameter = hasFinderFeeId.HasValue ?
                new ObjectParameter("HasFinderFeeId", hasFinderFeeId) :
                new ObjectParameter("HasFinderFeeId", typeof(bool));
    
            var fCustomerIdParameter = fCustomerId.HasValue ?
                new ObjectParameter("FCustomerId", fCustomerId) :
                new ObjectParameter("FCustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("portal_spCreate_C_FinderFeeBillGenerateFirenchisee", regionIdParameter, userIdParameter, finderFeeIdParameter, hasFinderFeeIdParameter, fCustomerIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AP_InvoiceFranchiseeListForChargeback_Result> portal_spGet_AP_InvoiceFranchiseeListForChargeback(string regionIds, Nullable<int> periodId)
        {
            var regionIdsParameter = regionIds != null ?
                new ObjectParameter("RegionIds", regionIds) :
                new ObjectParameter("RegionIds", typeof(string));
    
            var periodIdParameter = periodId.HasValue ?
                new ObjectParameter("PeriodId", periodId) :
                new ObjectParameter("PeriodId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AP_InvoiceFranchiseeListForChargeback_Result>("portal_spGet_AP_InvoiceFranchiseeListForChargeback", regionIdsParameter, periodIdParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AP_PendingAPBillListByType_Result> portal_spGet_AP_PendingAPBillListByType(Nullable<int> regionId, Nullable<int> checkbookTransactionTypeListId, Nullable<int> transactionStatus, string aPBillList)
        {
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var checkbookTransactionTypeListIdParameter = checkbookTransactionTypeListId.HasValue ?
                new ObjectParameter("CheckbookTransactionTypeListId", checkbookTransactionTypeListId) :
                new ObjectParameter("CheckbookTransactionTypeListId", typeof(int));
    
            var transactionStatusParameter = transactionStatus.HasValue ?
                new ObjectParameter("TransactionStatus", transactionStatus) :
                new ObjectParameter("TransactionStatus", typeof(int));
    
            var aPBillListParameter = aPBillList != null ?
                new ObjectParameter("APBillList", aPBillList) :
                new ObjectParameter("APBillList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AP_PendingAPBillListByType_Result>("portal_spGet_AP_PendingAPBillListByType", regionIdParameter, checkbookTransactionTypeListIdParameter, transactionStatusParameter, aPBillListParameter);
        }
    
        public virtual ObjectResult<portal_spGet_AP_APBillListByType_Result> portal_spGet_AP_APBillListByType(Nullable<int> regionId, Nullable<int> checkBookTransactionTypeListId, Nullable<int> transactionStausId, string aPBillList)
        {
            var regionIdParameter = regionId.HasValue ?
                new ObjectParameter("RegionId", regionId) :
                new ObjectParameter("RegionId", typeof(int));
    
            var checkBookTransactionTypeListIdParameter = checkBookTransactionTypeListId.HasValue ?
                new ObjectParameter("CheckBookTransactionTypeListId", checkBookTransactionTypeListId) :
                new ObjectParameter("CheckBookTransactionTypeListId", typeof(int));
    
            var transactionStausIdParameter = transactionStausId.HasValue ?
                new ObjectParameter("TransactionStausId", transactionStausId) :
                new ObjectParameter("TransactionStausId", typeof(int));
    
            var aPBillListParameter = aPBillList != null ?
                new ObjectParameter("APBillList", aPBillList) :
                new ObjectParameter("APBillList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<portal_spGet_AP_APBillListByType_Result>("portal_spGet_AP_APBillListByType", regionIdParameter, checkBookTransactionTypeListIdParameter, transactionStausIdParameter, aPBillListParameter);
        }
    }
}
