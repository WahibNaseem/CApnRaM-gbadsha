
@{
    ViewBag.Title = "RunPaymentCheck";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section styles{
    <link href="@Url.Content("~/Content/admin/assets/global/plugins/datatables/datatables.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/admin/assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/admin/assets/global/plugins/bootstrap-multiselect/css/bootstrap-multiselect.css")" rel="stylesheet" />
}

<style>
    .topheader {
        font-size: 14px;
        font-weight: bold;
        color: #FFF !important;
        text-transform: uppercase;
        margin-top: 3px;
    }

    .alignRight {
        text-align: right;
    }

    .alignCenter {
        text-align: center;
    }

    .no-padding {
        padding: 0 !important;
    }

    .no-margin {
        margin: 0 !important;
    }

    .custom-listbox .headerbox {
        padding: 3px 0px 3px 5px;
        font-weight: normal;
    }

    .custom-listbox {
        margin-top: 4px;
        margin-bottom: 0px;
    }

    .row {
        margin: 0;
        padding: 3px 0;
    }

    .btn.multiselect {
        text-align: left;
        padding-top: 4px;
        padding-bottom: 4px;
        font-size: 11px;
        color: #555;
    }

    .multiselect .caret {
        right: 0;
        position: absolute;
        margin-top: 8px;
        margin-right: 8px;
    }

    .multiselect-container.dropdown-menu {
        text-transform: none;
        font-size: 14px;
    }

    #modal_RegionModel .modal-content {
        width: 55% !important;
        margin-left: 30% !important;
    }
</style>



<form class="form-horizontal" role="form" id="form_checks">
    
   <div class="headerbox">
       @Html.Hidden("hdnHasChecks", "", new { @id = "hdnhaschecks", Value=ViewBag.HasChecks })
       @Html.Hidden("hdnCheckBookTransactionType", "", new { @id = "hdnCheckBookTransactionType"})

        <div class="row" style="background-color: #3598DC;color: #fff;">
            <div class="col-md-12 no-padding">
                <div class="alignCenter">
                    <div class="col-md-4" style="text-align:right;">
                    </div>
                    <div class="col-md-4 topheader">
                        GENERATE CHECKS
                    </div>
                    <div class="col-md-4" style="padding-right:5px;">
                        <div class="col-md-7 pull-right no-padding">
                            
                            @if (ViewBag.regionlist != null)
                            {
                                <div style="display:table-cell;padding-right: 5px;">
                                    Region
                                </div>
                                <div style="display:table-cell;width:100%;">
                                    <select class="form-control input-sm" id="regionlist" name="regionlist">
                                        @foreach (var item in (SelectList)ViewBag.regionlist)
                                        {
                                            <option @(item.Selected ? "selected" : "") value="@item.Value">@item.Text</option>
                                        }
                                    </select>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="custom-listbox" id="divfranchiseList" style="margin-top:4px;">
        <div class="headerbox">
            <div class="row no-padding">
                <div class="col-md-4 control-label alignCenter" style="padding-top: 2px">
                    <span id="lblRegionName">&nbsp;</span>
                </div>
                <div class="col-md-2" style="padding-left: 0px;">
                    @Html.DropDownList("BankList", (SelectList)ViewBag.BankList, new { @class = "form-control input-sm" })
                </div>
                <div class="control-label col-md-2 alignRight" style="padding-top: 2px">
                    Balance
                </div>
                <div class="col-md-1 control-label" style="padding-top: 2px">
                    <span id="lblBankBalance">$0.00</span>
                </div>
                <div class="col-md-2">

                </div>
            </div>
        </div>
    </div> 

    <div class="custom-form portlet light form-horizontal" style="margin: 0px auto;padding:0;min-height: 100px;">
        <div class="portlet-body form">
            <div class="form-body">
                <div class="form-group">
                    <div class="row" style="padding-bottom: 18px;">

                        <div class="col-md-12">
                            <div class="col-md-2 col-md-offset-1 control-label">
                                <span>Select Check Type to Print:</span>
                            </div>
                            <div class="col-md-3">
                                @Html.DropDownList("CheckTypeList", (SelectList)ViewBag.CheckTypeList, "Select", new { @class = "form-control input-sm" })
                            </div>
                            <div class="col-md-1 control-label">
                                <span>Check Date:</span>
                            </div>
                            <div class="col-md-2">
                                <div class="input-group input-sm date" style="padding:0px" data-date-format="dd-mm-yyyy" data-date-start-date="+0d">
                                    <input type="text" class="form-control input-sm date-picker" name="dtCheckDate" id="dtCheckDate">
                                    <span class="input-group-btn">
                                        <button class="btn default" type="button">
                                            <i class="fa fa-calendar"></i>
                                        </button>
                                    </span>
                                </div>
                            </div>
                        </div>

                    </div>

                    <div class="row">
                        <div class="col-md-12" style="text-align: center">
                            <button type="button" class="btn btn-primary button-next" id="btnRunChecks">
                                Process Printing Checks
                            </button>
                        </div>
                    </div>

                    <hr />

                    <div class="row">
                        <div class="table-responsive">
                            <table class="table table-striped table-bordered table-hover order-column" id="TableCheckList">
                                <thead>
                                    <tr>
                                        <th class="tblFR_region" style="width:10px;text-align:center;">
                                            Region
                                        </th>
                                        <th class="tblFR_franchiseeNo" style="width:10px;text-align:center;">
                                            Pay To No
                                        </th>
                                        <th class="tblFR_franchiseeName" style="width:80px;text-align:center;">
                                            Pay To Name
                                        </th>
                                        <th class="tblFR_billMonthYear" style="width:80px;text-align:center;">
                                            Period
                                        </th>
                                        <th class="tblFR_paymentAmount" style="text-align:center;width:70px;">
                                            Total Check Amount
                                        </th>
                                        <th class="tblFR_viewReportBtn" style="text-align:center;width:30px;">
                                            Action
                                        </th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                                <tfoot>
                                    <tr>
                                        <td colspan="3" style="text-align:center;background: #b7cbef;">
                                        <td style="text-align:center;background: #b7cbef;">Total</td>
                                        <td style="text-align:center;background: #b7cbef;padding-right:5px">&nbsp;</td>
                                        <td style="text-align:center;background: #b7cbef;padding-right:5px">&nbsp;</td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>

    <div class="modal fade custom-model custom-form-design" id="ModalFranchiseePayReportPopup" tabindex="-1" role="basic" aria-hidden="true" style="display: none;">
        <div class="modal-dialog" style="width:740px">
            <div class="modal-content" style="border-radius: 8px;">
                <div class="custom-form portlet light" id="" style="margin-top:0px;">
                    <div class="headerbox" style="font-weight: normal;">
                        <div class="col-md-12 text-center" style="font-size:15px;">
                            <b> Franchisee Report</b>
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true" style="margin-top: 5px !important;margin-right: 12px !important;"></button>
                        </div>
                        <div class="clearfix"> </div>
                    </div>
                    <div class="portlet-body" style="padding:14px;" id="RenderFranchiseePayReportDetails">
                    </div>
                </div>
            </div>
        </div>
    </div>

</form>
<iframe src="" style="visibility:hidden" id="iframe_check" name="iframe_check"></iframe>

<div class="modal fade in" id="modal_RegionModel" tabindex="-1" role="basic" aria-hidden="true" style="display: none; padding-right: 17px;">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" style="border-radius: 8px;">
            <div class="modal-header headerbox list" style="padding:0px!important;border-bottom: none;">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true" style="margin-top: 12px !important;margin-right: 12px !important;"></button>
                <h4 class="modal-title text-center" style="margin-top: 0px; margin-bottom: 4px;  padding: 7px!important;font-size: 12px;font-weight: bold;background: #3598DC !important;color: #FFF !important;border: 1px solid #3598DC !important;padding: 0px;text-transform: uppercase;">
                    Select Region
                </h4>
            </div>
            <div class="modal-body form form-horizontal" style="padding-top: 1px;margin-top: -5px;">
                <div class="form-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label class="control-label col-md-12" style="text-align: center;padding: 5px;background-color: #e8e8e8;margin-bottom:5px;font-weight:bold;">Select Region</label>
                                @if (ViewBag.regionlist != null)
                                {
                                    <select class="form-control input-sm" id="selectregionlist">
                                        <option value="">Select Region</option>
                                        @foreach (var item in (SelectList)ViewBag.regionlist)
                                        {
                                            <option @(item.Selected ? "selected" : "") value="@item.Value">@item.Text</option>
                                        }
                                    </select>
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-actions">
                    <div class="col-md-12">
                        <button type="button" id="btnRegion" class="btn btn-primary button-next pull-right" onclick="" style="margin-right:0px;">Select Region</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section pageplugins{

    <!-- BEGIN PAGE LEVEL PLUGINS -->
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/select2/js/select2.full.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/jquery-validation/js/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/jquery-validation/js/additional-methods.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/bootstrap-wizard/jquery.bootstrap.wizard.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/jquery-inputmask/jquery.inputmask.bundle.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/scripts/datatable.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/datatables/datatables.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/scripts/app.min.js")" type="text/javascript" )"></script>
    <script src="@Url.Content("~/Content/admin/assets/pages/scripts/table-datatables-managed.min.js")" type="text/javascript"></script>
}
@section scripts{
    <script>
        var checkList;
        var bankBalances = {};
        var printwindow = false;
        var CLOSED_TRXSTATUSID = "CLOSE";
        var OPEN_TRXSTATUSID = "OPEN";
        var PENDING_TRXSTATUSID = "PENDING";
        var NOREPRINT = false;
        var REPRINT = true;
       
        function getTableURL() {

            var _regionId = $('#regionlist :selected').val();
            var _checkTypeId = $('#CheckTypeList :selected').val();
            var _transactionstatusListId = "4";
            var sURL = '@Url.Action("GeneratedChecksList", "AccountsPayable", new { area = "Portal" })?regionId=' + _regionId + '&typeId=' + _checkTypeId + '&TransactionStatusListId=' + _transactionstatusListId;

            return sURL;
        }

        function refreshTable(sURL) {

            var isUIBlocked = $('.blockUI').length > 0;
            var hasChecks = false;

            if (!isUIBlocked)
                $.blockUI();

            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {

                    checkList.clear();
                    checkList.rows.add(data.aaData).draw();
                    $.unblockUI();
                },
                error: function () {
                    $.unblockUI();
                    alert("Content load failed.");
                }
            });
        }

        function updateBankListAndRegionName() {

            var regionId = $("#regionlist :selected").val();
            if (regionId == 0)
                return;

            $.blockUI();

            $.ajax({
                type: "GET",
                url: '@Url.Action("RunPaymentCheckRegionInfo", "AccountsPayable", new { area = "Portal" })?regionId=' + regionId,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {

                    $("#BankList").html("");
                    bankBalances = {};

                    for (var i in data.BankList) {
                        var bank = data.BankList[i];
                        $("#BankList").append($("<option>")
                            .val(bank.BankId)
                            .html(bank.BankName)
                        );
                        bankBalances[bank.BankId] = bank.Balance;
                    }

                    $("#lblRegionName").text(data.RegionName);

                    updateBankBalance();

                    if ($("#CheckTypeList").val() != 0)
                        refreshTable(getTableURL());
                    else
                        $.unblockUI();

                },
                error: function () {
                    alert("Content load failed.");
                }
            });
        }

        function updateBankBalance() {
            var selectedBankId = $("#BankList :selected").val();
            $("#lblBankBalance").text(formatCurrency(bankBalances[selectedBankId] || 0));
        }


        function updateCloseTransactionStatus(getStatus, updateStatus, printMode) {

            var printedCheckType = localStorage.getItem("PrintedCheckBookTransactionType");
            var regionId = $("#regionlist :selected").val();

            if (regionId == 0)
                return;

            //$.blockUI();

            if (printedCheckType != "-1") {
                
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("UpdateCloseTransactionStatus", "AccountsPayable", new { area = "Portal" })?regionId=' + regionId.toString() + '&CheckbookTransactionTypeListId=' + printedCheckType.toString() + '&GetTrxStatusId=' + getStatus + '&UpdateTrxStatusId=' + updateStatus,
                    contentType: "application/json; charset=utf-8",
                    datatype: "json",
                    success: function (data) {
                        if (printMode == REPRINT) {
                            
                            RePrintChecks(PENDING_TRXSTATUSID, CLOSED_TRXSTATUSID);
                        } else {
                            localStorage.setItem("PrintedCheckBookTransactionType", "-1");
                            window.location.href = '@Url.Action("RunPaymentCheck", "AccountsPayable")';
                        }
                    },
                    error: function () {
                        alert("Content load failed.");
                    }
                });
            } else {
                window.location.href = '@Url.Action("RunPaymentCheck", "AccountsPayable")';
            }
        }

        function updateTransactionStatus() {

            var printedCheckType = localStorage.getItem("PrintedCheckBookTransactionType");
            var regionId = $("#regionlist :selected").val();

            if (regionId == 0)
                return;

            //$.blockUI();

            if (printedCheckType != "-1") {
                
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("UpdateTransactionStatus", "AccountsPayable", new { area = "Portal" })?regionId=' + regionId.toString() + '&CheckbookTransactionTypeListId=' + printedCheckType.toString() + '&StatusStr=' + PENDING_TRXSTATUSID,
                    contentType: "application/json; charset=utf-8",
                    datatype: "json",
                    success: function (data) {
                        localStorage.setItem("PrintedCheckBookTransactionType", "-1");
                        window.location.href = '@Url.Action("RunPaymentCheck", "AccountsPayable")';
                    },
                    error: function () {
                        alert("Content load failed.");
                    }
                });
            } else {
                window.location.href = '@Url.Action("RunPaymentCheck", "AccountsPayable")';
            }
        }


        $(window).load(function () {
         
            var pendingChecks = parseInt(@ViewBag.HasChecks);
            var printedCheckType = localStorage.getItem("PrintedCheckBookTransactionType") == null ? "-1" : localStorage.getItem("PrintedCheckBookTransactionType");

            //if (pendingChecks == 1 ) {
            if (printedCheckType != "-1") {
                swal({
                    title: "",
                    text: "Have pending checks printed ok?",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonClass: "btn-confirmr",
                    confirmButtonText: "Yes",
                    cancelButtonText: "No",
                    closeOnConfirm: false,
                    closeOnCancel: false

                    },
                    function (isConfirm) {
                        if (isConfirm) {
                            updateCloseTransactionStatus(PENDING_TRXSTATUSID, CLOSED_TRXSTATUSID, NOREPRINT);
                        } else {
                           
                            swal({
                                title: "",
                                text: "Do you want to reprint checks?",
                                type: "warning",
                                showCancelButton: true,
                                confirmButtonClass: "btn-confirmr",
                                confirmButtonText: "Yes",
                                cancelButtonText: "No",
                                closeOnConfirm: false,
                                closeOnCancel: false

                                }, function (isConfirm) {
                                    if (isConfirm) {
                                        updateCloseTransactionStatus(PENDING_TRXSTATUSID, PENDING_TRXSTATUSID, REPRINT);
                                    } else {
                                        localStorage.setItem("PrintedCheckBookTransactionType", "-1");
                                        document.location.reload();
                                        
                                    }
                                }
                            )

                        }
                    }
                )
            }


            if ('@ViewBag.selectedRegionId' == 0) {
                $("#modal_RegionModel").modal({ backdrop: 'static' });
            }
            else {
                updateBankListAndRegionName();
            }

        });

        jQuery(document).ready(function () {
            $("#dtCheckDate").datepicker("setDate", new Date());

            $("#regionlist").multiselect({
                includeSelectAllOption: false,
                selectAllText: 'Select all',
                buttonWidth: '100%',
                nonSelectedText: 'Select region..',
                dropRight: true,
                numberDisplayed: 2
            });

            $("#btnRegion").click(function () {
                if ($("#selectregionlist").val() != "") {
                    $("#regionlist option[value='" + $("#selectregionlist").val() + "']").attr("selected", 1);
                    $("#regionlist").multiselect("refresh");
                    updateBankListAndRegionName();
                    $(".close").click();
                }
            });

            $("#regionlist").change(function () {
                updateBankListAndRegionName();
            });

            $("#CheckTypeList").change(function () {
                if ($(this).val() != 0)
                    refreshTable(getTableURL());
            });

            $("#BankList").change(function () {
                updateBankBalance();
            });

            $(".input-group-btn").click(function () {
                $(this).prev().trigger("focus");
                $(this).prev().trigger("focus");
            });

            checkList = $('#TableCheckList').DataTable({
                //"bProcessing": true,
                "bServerSide": false,
                "aLengthMenu": [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]],
                "pageLength": 25, // default records per page
                "dom": '<"top">rt<"bottom"lp><"clear">'
                //"dom": "<'row'<'col-md-8 col-sm-12'pli><'col-md-4 col-sm-12'<'table-group-actions pull-right'>>r><'table-responsive't><'row'<'col-md-8 col-sm-12'pli><'col-md-4 col-sm-12'>>", // datatable layout
                ,
                columnDefs: [
                    {
                        targets: "tblFR_region",
                        data: "RegionAcronym",
                        className: "dt-center",
                        render: function (data, type, row, meta) {
                            return '<label id="fp' + row.FranchiseeReportId + '_region">' + formatString(data) + '</label>';
                        }
                    },
                    {
                        targets: "tblFR_franchiseeNo",
                        data: "FranchiseeNo",
                        className: "dt-center",
                        render: function (data, type, row, meta) {
                            return '<label id="fp' + row.FranchiseeReportId + '_franchiseeNo">' + formatString(data) + '</label>';
                        }
                    },
                    {
                        targets: "tblFR_franchiseeName",
                        data: "FranchiseeName",
                        className: "dt-center",
                        render: function (data, type, row, meta) {
                            return '<label id="fp' + row.FranchiseeReportId + '_franchiseeName">' + formatString(data) + '</label>';
                        }
                    },
                    {
                        targets: "tblFR_billMonthYear",
                        data: "",
                        className: "dt-center",
                        render: function (data, type, row, meta) {
                            return row.BillMonth + '/' + row.BillYear;
                        }
                    },
                    {
                        targets: "tblFR_paymentAmount",
                        data: "Total",
                        className: "dt-center",
                        render: function (data, type, row, meta) {
                            return formatCurrency(parseFloat(data));
                        }
                    },
                    {
                        targets: "tblFR_viewReportBtn",
                        data: "FranchiseeReportId",
                        className: "dt-center",
                        orderable: false,
                        render: function (data, type, row, meta) {
                            //return '<a href="javascript:void(0);" onclick="btnOpenReportView(' + data + ')">Page</a> | <a href="javascript:void(0);" onclick="btnOpenPayReportPopup(' + data + ')">Popup</a>';
                            return ' <a href="javascript:void(0);" onclick="btnOpenPayReportPopup(' + data + ')">View</a>';
                        }
                    },
                ],
                "footerCallback": function (row, data, start, end, display) {
                    var api = this.api(), data;

                    // Remove the formatting to get integer data for summation
                    var intVal = function (i) {
                        return typeof i === 'string' ?
                            i.replace(/[\$,]/g, '') * 1 :
                            typeof i === 'number' ?
                            i : 0;
                    };

                    var total = api
                        .column(4)
                        .data()
                        .reduce(function (a, b) {
                            return intVal(a) + intVal(b);
                        }, 0);

                    $(api.column(4).footer()).html(formatCurrency(total));
                }
            });

            $("#btnRunChecks").click(function (e) {
                var _selcheckTypeId = $('#CheckTypeList :selected').val();
                var key = "PrintedCheckBookTransactionType";
                var value = _selcheckTypeId;
                localStorage.setItem(key, value);
               
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("RunChecks","AccountsPayable","Portal")',
                    data: $("#form_checks").serialize(),
                    dataType: 'json',
                    success: function (data) {
                        printChecksAndReload(data);

                    }
                })
            });

        });

        function RePrintChecks(RePrintWithStatusId, UpdateStatusId)
        {
           
            var checkTypeId = localStorage.getItem("PrintedCheckBookTransactionType");
            var regionId = $("#regionlist").val();

            $.ajax({
                type: "POST",
                url: '@Url.Action("RePrintChecks", "AccountsPayable","Portal")',
                data: { RegionId: regionId, checkTypeId: checkTypeId, GetTRXStatusId: RePrintWithStatusId, UpdateTRXStatusId: UpdateStatusId },
                dataType: 'json',
                success: function (data) {
                    printChecksAndReload(data);
                    localStorage.setItem("PrintedCheckBookTransactionType", "-1");

                }
            });
      

        }

        function printChecksAndReload(data) {

            var afterPrint = function () {
                document.location.reload();
            }


            var sURL = data;

            $('#iframe_check').attr('src', document.location.origin + sURL);
            $('#iframe_check').load(function () {

                // for ie and firefox
                window.onafterprint = afterPrint();

                // for chrome
                if (window.matchMedia) {
                    var mediaQueryList = window.matchMedia('print');
                    mediaQueryList.addListener(function (mql) {

                        if (mql.matches) {

                        } else {
                            afterPrint();

                        }
                    });

                }

                frames['iframe_check'].print();

            });




        }

        @*function printChecksAndReload(data) {



            var afterPrint = function () {
                document.location.reload();
            }

            var stringurl = [];
            stringurl = data.split('?');
            var url = '@Url.Action("CheckFinalizedReport", "Company", new { area = "Portal" })?' + stringurl[1];
            $("#iframe_check").attr('src', url);


            //var sURL = data;
            //$('#iframe_check').attr('src', document.location.origin + sURL);
            //$('#iframe_check').show();
            $('#iframe_check').load(function () {
            //$('#iframe_check').load('/Portal/Company/CheckFinalizedReport?' + stringurl[1], function () {


                                // for ie and firefox
                                window.onafterprint = afterPrint();

                                // for chrome



                                if (window.matchMedia) {
                                    var mediaQueryList = window.matchMedia('print');

                                    mediaQueryList.addListener(function (mql) {
                                        if (mql.matches) {
                                        } else {
                                            afterPrint();
                                        }
                                    });
                    }

                                frames['iframe_check'].print();
                                //$(this).show();
                });


        }*@

        function btnOpenReportView(id) {
            window.open('@Url.Action("FranchiseeReport", "AccountsPayable", new { area = "Portal" })?ids=' + id, '_blank');
        }

        function btnOpenDetail(id) {

            var sURL = '@Url.Action("FranchiseePayDetail", "AccountsPayable", new { area = "Portal" })?Id=' + id

            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#modal_franchiseeDetailPay').html(data);
                    $("#modal_franchiseeDetailPay").modal('show');
                },
                error: function () {
                    alert("Content load failed.");
                }
            });

        }

        function getDataIdChunk(elem) {
            return $(elem).attr("id").split('_')[0];
        }
        function getDataFilter(chunk) {
            return "[id^=" + getDataPrefix(chunk) + "]";
        }
        function getDataPrefix(chunk) {
            return chunk + "_";
        }

        function btnOpenPayReportPopup(Id) {
            var sURL = '@Url.Action("FranchiseePayReportPopupDetail", "AccountsPayable", new { area = "Portal" })?ids=' + Id

            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {

                    $('#RenderFranchiseePayReportDetails').html(data);
                    $("#ModalFranchiseePayReportPopup").modal({ backdrop: 'static' });
                },
                error: function () {
                    alert("Content load failed.");
                }
            });

        }

        function formatString(str) {
            // simple function to get rid of "null" text
            return str || "";
        }

        function formatCurrency(total) {
            var neg = false;
            if (total < 0) {
                neg = true;
                total = Math.abs(total);
            }
            return (neg ? "-$" : '$') + parseFloat(total, 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString();
        }
    </script>
}
