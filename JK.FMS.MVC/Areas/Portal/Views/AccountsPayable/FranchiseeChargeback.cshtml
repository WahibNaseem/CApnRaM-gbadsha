@using JKViewModels.Common

@{
    ViewBag.Title = "FranchiseeChargeback";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    var IsApprove = false;
    var IsReject = false;
    JKApi.Core.Common.ClaimView _claim = JKApi.Core.Common.ClaimView.Instance;
    var getPermission = _claim.GETCLAIM_AR_PERMISSION();
    if (getPermission != null)
    {
        string enumName = ARPermission.Franchisee_Chargeback_Process.ToString();
        var validIsApprove = getPermission.Where(x => x.EnumName == enumName && x.IsApprove).FirstOrDefault();
        if (validIsApprove != null && validIsApprove.IsApprove)
        {
            IsApprove = true;
        }
        var validIsReject = getPermission.Where(x => x.EnumName == enumName && x.IsReject).FirstOrDefault();
        if (validIsReject != null && validIsReject.IsReject)
        {
            IsReject = true;
        }
    }

}

@section styles{

    <link href="@Url.Content("~/Content/admin/assets/global/plugins/bootstrap-multiselect/css/bootstrap-multiselect.css")" rel="stylesheet" />

    <style type="text/css">
        .clsAmounttd {
            text-align: right !important;
        }

        .btn.multiselect {
            text-align: left;
            padding-top: 4px;
            padding-bottom: 4px;
            font-size: 11px;
            color: #555;
        }


        .multiselect .caret {
            right: 0;
            position: absolute;
            margin-top: 8px;
            margin-right: 8px;
        }

        .multiselect-container.dropdown-menu {
            text-transform: none;
            font-size: 14px;
            padding-left: 35px;
            padding-right: 10px;
        }

        .no-padding {
            padding: 0;
        }

        .row {
            margin: 0;
        }

        .alignCenter {
            text-align: center;
        }

        .topheader {
            font-size: 14px;
            font-weight: bold;
            color: #FFF !important;
            text-transform: uppercase;
            margin-top: 3px;
        }

        .custom-form .headerbox {
            padding: 3px 0px 3px 5px;
            font-weight: normal;
        }

        .error {
            border-color: red;
        }

        #CustomerList_length {
            padding-left: 16px;
        }

        #FranchiseeChargebackDetailsList thead > tr > th,
        #FranchiseeChargebackDetailsList tbody > tr > td,
        #FranchiseeChargebackDetailsList tfoot > tr > td #FranchiseeChargebackDetailsList thead > tr > th,
        #FranchiseeChargebackDetailsList tbody > tr > td,
        #FranchiseeChargebackDetailsList tfoot > tr > td {
            padding: 5px !important;
            font-size: 11px !important;
        }

        #FranchiseeChargebackDetailsList thead > tr > th,
        #FranchiseeChargebackDetailsList thead > tr > th {
            vertical-align: middle;
        }
    </style>

}

<form class="form-horizontal" role="form" id="form_chargeback" action="@Url.Action("ApplyFranchiseeChargeback","AccountsPayable","Portal")" method="post">
    @Html.Hidden("CBSelectedIds")
    @Html.Hidden("PeriodId")
    @Html.Hidden("SelectedView")
    @Html.Hidden("RegionIds")
    <div class="custom-form portlet light" style="margin: 0px auto;padding:0;min-height: 100px;">
        <div class="headerbox">
            <div class="row" style="background-color: #3598DC;color: #fff;">
                <div class="col-md-12 no-padding">
                    <div class="alignCenter">
                        <div class="col-md-4" style="text-align:right;">
                        </div>
                        <div class="col-md-4 topheader">
                            Possible Chargebacks
                        </div>
                        <div class="col-md-4" style="padding-right:5px;">
                            <div class="col-md-7 pull-right no-padding">
                                <div style="display:table-cell;padding-right: 5px;text-transform:none">
                                    Region
                                </div>
                                <div style="display:table-cell;width:100%;">
                                    @if (ViewBag.RegionList != null)
                                    {
                                        <select class="form-control input-sm" id="regionlist" multiple="multiple" style="display:none;">
                                            @foreach (var item in (SelectList)ViewBag.RegionList)
                                            {
                                                <option @(item.Selected ? "selected" : "") value="@item.Value">@item.Text</option>
                                            }
                                        </select>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="portlet-body form">
            <div class="form-body">

                <div class="custom-listbox" id="divfranchiseList" style="margin-top:4px;">
                    <div class="headerbox">
                        <div class="row no-padding">
                            <div class="col-md-12">
                                @*<div class="col-md-1">
                                    <div class="portlet-input input-inline input-small">
                                        <div class="input-icon">
                                            <select name="CustomerList_length" id="CustomerList_length" aria-controls="CustomerList" class="form-control input-sm input-xsmall input-inline">
                                                <option value="25">25</option>
                                                <option value="50">50</option>
                                                <option value="100">100</option>
                                                <option value="-1">All</option>
                                            </select>
                                        </div>
                                        <div id="container">
                                        </div>
                                    </div>
                                </div>*@
                                <div class="col-md-2">
                                    <div class="input-icon">
                                        <i class="icon-magnifier icon-align-right" style="margin-top: 8px;"></i>
                                        <input id="input_Search" style="width:250px!important" type="text" required name="customernumber" autocomplete="off" placeholder="Search by Name" value="" class="form-control input-sm typeahead" />
                                    </div>
                                </div>
                                <div class="col-md-3" style="text-align:center;">
                                    <div class="col-md-6 pull-right no-padding">
                                        @Html.DropDownList("BillMonthYearList", (SelectList)ViewBag.BillMonthYears, new { @class = "form-control input-sm", @id = "select_BillMonthYearList", style = "width: 150px;float: left;margin-right:10px" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <button type="button" class="btn btn-primary button-next" id="btnGenerateChargeback" style="margin-left: 5px;">Generate Possible Chargeback</button>
                                </div>
                             
                            </div>
                        </div>
                    </div>
                </div>
               
                    <div class="form-group" id="divDetailsView" >
                        <div class="row">
                            <div class="col-md-12">
                                <div class="table-responsive">
                                    <table class="table table-striped table-bordered table-hover order-column" id="FranchiseeChargebackDetailsList">
                                        <thead>
                                            <tr>
                                                <th class="tblInvoice_chk" style="width:5px;text-align:center;background-color:#95A5A6 !important;color:#fff!important;">
                                                    <input type="checkbox" id="chkAllDetails" />
                                                </th>
                                                <th class="tblInvoice_invoiceDate" style="width:50px;text-align:center;background-color:#95A5A6 !important;color:#fff!important;">
                                                    Invoice Date
                                                </th>
                                                @*<th class="tblInvoice_franchiseeNo" style="text-align:center;width:80px;background-color:#95A5A6 !important;color:#fff!important;">
                                                        Franchisee No.
                                                    </th>
                                                    <th class="tblInvoice_franchiseeName" style="text-align:center;width:150px;background-color:#95A5A6 !important;color:#fff!important;">
                                                        Franchisee Name
                                                    </th>*@
                                                <th class="tblInvoice_invoiceNo" style="width:70px;text-align:center;background-color:#95A5A6 !important;color:#fff!important;">
                                                    Invoice No.
                                                </th>
                                                <th class="tblInvoice_customerName" style="width:180px;text-align:center;background-color:#95A5A6 !important;color:#fff!important;">
                                                    Customer Name
                                                </th>
                                                <th class="tblInvoice_invAmount" style="text-align:center;width:60px;background-color:#95A5A6 !important;color:#fff!important;">
                                                    Invoice Amount
                                                </th>
                                                <th class="tblInvoice_paymentsAndCredits" style="text-align:center;width:60px;background-color:#95A5A6 !important;color:#fff!important;">
                                                    Payments & Credits (w/o tax)
                                                </th>
                                                <th class="tblInvoice_invBalance" style="text-align:center;width:60px;background-color:#95A5A6 !important;color:#fff!important;">
                                                    Invoice Balance (w/o tax)
                                                </th>
                                                <th class="tblInvoice_invFees" style="text-align:center;width:60px;background-color:#95A5A6 !important;color:#fff!important;">
                                                    Fees Amount
                                                </th>
                                                <th class="tblInvoice_chargeback" style="text-align:center;width:70px;background-color:#95A5A6 !important;color:#fff!important;">
                                                    Chargeback Amount
                                                </th>
                                                @*<th class="tblInvoice_Action" style="text-align:center;width:70px;background-color:#95A5A6 !important;color:#fff!important;">
                                                        Action
                                                    </th>*@
                                            </tr>
                                        </thead>

                                        @*<tfoot align="right">
                                                <tr id="trSum" style="display:none">
                                                    <th></th>
                                                    <th></th>
                                                    <th></th>
                                                    <th></th>
                                                    <th></th>
                                                    <th style="padding-right: 5px;font-size: 12px !important;">Total</th>
                                                    <th style="padding-right: 3px;font-size: 12px !important;"></th>
                                                    <th style="padding-right: 3px;font-size: 12px !important;"></th>
                                                    <th style="padding-right: 3px;font-size: 12px !important;"></th>
                                                    <th style="padding-right: 3px;font-size: 12px !important;"></th>
                                                    <th style="padding-right: 3px;font-size: 12px !important;"></th>
                                                </tr>
                                            </tfoot>*@
                                        <tbody></tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="form-group text-right">
                        <input type="button" class="btn btn-primary button-next" value="Clear" id="btnClear" style="min-width:100px" />
                        @if (IsApprove)
                        {
                            <input type="button" class="btn btn-primary button-next" value="Process" id="btnProcess" style="min-width:100px" />
                        }
                    </div>
                </div>

            </div>
        </div>
    </div>
</form>

<div class="form-horizontal" id="form_invoicedetail"></div>

@section pageplugins{
    @if (Request.IsSecureConnection)
    {
        <script src="https://code.jquery.com/ui/1.11.4/jquery-ui.js" type="text/javascript"></script>
    }
    else
    {
        <script src="http://code.jquery.com/ui/1.11.4/jquery-ui.js" type="text/javascript"></script>
    }

    <!-- BEGIN PAGE LEVEL PLUGINS -->
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/select2/js/select2.full.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/jquery-validation/js/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/jquery-validation/js/additional-methods.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/bootstrap-wizard/jquery.bootstrap.wizard.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/jquery-inputmask/jquery.inputmask.bundle.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/scripts/datatable.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/datatables/datatables.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/scripts/app.min.js")" type="text/javascript" )"></script>
    <script src="@Url.Content("~/Content/admin/assets/pages/scripts/table-datatables-managed.min.js")" type="text/javascript"></script>
}
@section scripts{
    <script>
        var possibleChargebackDetailsList;
        var generatedMonths = [];

        function getTableURL(regions, periodid) {
            var _fromDateVal = $('#dtpfrom').val();
            var _toDateVal = $('#dtpto').val();
            //var _billMonth = _billMonthYear.split('/')[0];  //$('#select_BillMonthList :selected').val();
            //var _billYear = _billMonthYear.split('/')[1];  //$('#select_BillYearList :selected').val();
            var _regionIds = regions || $('#regionlist').val();

            var sURL = '@Url.Action("InvoiceFranchiseeListForChargeback", "AccountsPayable", new { area = "Portal" })?periodId=' + periodid + '&regionIds=' + _regionIds

            return sURL;
        }

        function refreshTable(regions, periodid) {

            var sURL = getTableURL(regions, periodid);

            $.blockUI();

            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    getpossibleChargebackDetailsListView(data.detailsData);
                    showTableView(true);
                    $.unblockUI();
                },
                error: function () {
                    $.unblockUI();
                    alert("Content load failed.");
                }
            });
        }

        function showTableView(showAll) {

            if (showAll)
                $("#gridbox").show();

            if (!$("#gridbox").is(':visible'))
                return;


        }
        jQuery(document).ready(function () {

            setSearchTime(3);

            $("#regionlist").multiselect({
                includeSelectAllOption: true,
                selectAllText: 'Select all',
                buttonWidth: '100%',
                nonSelectedText: 'Select region..',
                dropRight: true,
                numberDisplayed: 2
            });

            var selRegionIds = $('#regionlist').val();
            $('#RegionIds').val(selRegionIds);

            /*
            $("#CustomerList_length").change(function () {

                var selectedView = $("input[name=isSummaryView]:checked").val();
                if (selectedView == "1") {
                    var table = $("#FranchiseeChargebackSummaryList").DataTable();
                    if ($(this).val() > 0) {
                        table.page.len($(this).val()).draw();
                    }
                    else if ($(this).val() == -1) {
                        table.page.len(table.rows().count()).draw();
                    }
                    else {
                        table.page.page.len(25).draw();
                    }

                    if ($("#CustomerList_length").val() == -1 || $("#CustomerList_length").val() >= table.rows().count()) {
                        $("#trSumSummary").show();
                    }
                    else {
                        $("#trSumSummary").hide();
                    }
                }
                else if (selectedView == "2") {
                    //var table = $("#FranchiseeChargebackDetailsList").DataTable();
                    //if ($(this).val() > 0) {
                    //    table.page.len($(this).val()).draw();
                    //}
                    //else if ($(this).val() == -1) {
                    //    table.page.len(table.rows().count()).draw();
                    //}
                    //else {
                    //    table.page.page.len(25).draw();
                    //}


                    //if ($("#CustomerList_length").val() == -1 || $("#CustomerList_length").val() >= table.rows().count()) {
                    //    $("#trSum").show();
                    //}
                    //else {
                    //    $("#trSum").hide();
                    //}
                }
            });
            */

            /*
            $("input[name=isSummaryView]").change(function () {
                var selectedview = $("input[name=isSummaryView]:checked").val();
                $('#SelectedView').val(selectedview);
                showTableView();
            });

            $(document).on('change', 'input[rel="mgglchk"][id^=summary_]', function () {
                var isChecked = $(this).is(":checked");
                var franId = getFranchiseeIdChunk($(this)).substr(4);
                $('input.fran' + franId + '[rel="mgglchk"][id^=details_]').prop('checked', isChecked);
            });
            */

            //$(document).on('change', 'input[rel="mgglchk"][id^=details_]', function () {

            //    var isChecked = true;
            //    var franId = getFranchiseeIdChunk($(this)).substr(4);

            //    $('input.fran' + franId + '[rel="mgglchk"][id^=details_]').each(function () {
            //        if (!$(this).is(":checked"))
            //            isChecked = false;
            //    })

            //    $('input[rel="mgglchk"][id^=summary_fran' + franId + '_]').prop('checked', isChecked);

            //});


            //$("#chkAll").change(function () {

            //    if (this.checked) {
            //        var startdate = $("#dtpfrom").val();
            //        startdate = Date.parse(startdate);
            //        startdate = new Date(parseInt(startdate));
            //        var enddate = $("#dtpto").val();
            //        enddate = Date.parse(enddate);
            //        enddate = new Date(parseInt(enddate));
            //        var table = $("#FranchiseeChargebackList").DataTable();
            //        var data = table.rows().data();
            //        data.each(function (value, index) {
            //            var date = new Date(parseInt(value.InvoiceDate.substr(6)));
            //            if (startdate <= date && enddate >= date) {
            //                $("#inv" + value.InvoiceId + "_bp" + value.BillingPayId + "_chk").prop("checked", true);
            //            }
            //            else {
            //                $("#inv" + value.InvoiceId + "_bp" + value.BillingPayId + "_chk").prop("checked", false);
            //            }
            //        });

            //    }
            //    else {
            //        $(".payment-checkbox").prop("checked", false);
            //    }
            //});

            $('#btnGenerateChargeback').click(function (e) {

                //var _billMonth = $('#select_BillMonthList :selected').val();
                //var _billYear = $('#select_BillYearList :selected').val();
                var _periodId = $('#select_BillMonthYearList').val(); //$('#select_BillMonthYearList :selected').val();
                var _regions = $('#regionlist').val();

                $('#PeriodId').val(_periodId);
                //if (_billMonth == null || _billYear == null || _regions == null)
                //    return;

                var calledRegions = [];
                var atLeastOne = false;
                _regions.forEach(function (_region) {
                    var selectedRegion = _region;
                    if (generatedMonths.indexOf(selectedRegion) == -1) {
                        generatedMonths.push(selectedRegion);
                        atLeastOne = true;
                        calledRegions.push(_region);
                    }
                    /*
                    var selectedBillMonthYearRegion = _billMonth + "/" + _billYear + "-" + _region;
                    if (generatedMonths.indexOf(selectedBillMonthYearRegion) == -1) {
                        generatedMonths.push(selectedBillMonthYearRegion);
                        atLeastOne = true;
                        calledRegions.push(_region);
                    }*/

                });

                if (atLeastOne) {
                    refreshTable(calledRegions, _periodId);
                }

            });

            $('#btnProcess').click(function (e) {
                var selectedIds = getSelectedIds();
                if (selectedIds != "") {
                    $("#CBSelectedIds").val(selectedIds);
                }

                if ($("#CBSelectedIds").val() != '') {


                    var selperiodId = $('#select_BillMonthYearList').val();
                    $('#PeriodId').val(selperiodId);

                    $("#form_chargeback").submit();

                    //window.location.href = 'Url.Content("~/Portal/AccountsPayable/FranchiseeChargebackList/")';
                } else {
                    swal("error", "Please select a row from the list.", "error")
                }
            });

            $('#chkAllDetails').change(function () {
                if ($(this).is(":checked")) {
                    $('input[rel="mgglchkDetails"]').prop('checked', true);

                }
                else {
                    $('input[rel="mgglchkDetails"]').prop('checked', false);
                    $('#CBSelectedIds').val();
                }
            });


            //possibleChargebackDetailsList = $('#FranchiseeChargebackDetailsList').DataTable({
            //    //"bProcessing": true,
            //    "bServerSide": false,
            //    "aLengthMenu": [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]],
            //    "pageLength": 25, // default records per page
            //    //"dom": '<"top">rt<"bottom"lp><"clear">'
            //    "dom": "<'table-responsive't><'bottom'ip><'clear'>"
            //    //"dom": "<'row'<'col-md-8 col-sm-12'pli><'col-md-4 col-sm-12'<'table-group-actions pull-right'>>r><'table-responsive't><'row'<'col-md-8 col-sm-12'pli><'col-md-4 col-sm-12'>>", // datatable layout
            //    ,
            //    columnDefs: [
            //        {
            //            targets: "tblInvoice_chk",
            //            data: "",
            //            orderable: false,
            //            render: function (data, type, row, meta) {
            //                return '<input rel="mgglchkDetails" type="checkbox" style="margin-left: 10px;" id="details_fran' + row.FranchiseeId + '_inv' + row.InvoiceId + '_bp' + row.BillingPayId + '_chk" relId = "' + row.InvoiceId + '" name="inv' + row.InvoiceId + '_bp' + row.BillingPayId + '_chk" class="payment-checkbox fran' + row.FranchiseeId + '" />';
            //            }
            //        },

            //        {

            //            targets: "tblInvoice_invoiceDate",
            //            data: "InvoiceDate",
            //            type: "date",
            //            sClass: "dt-center",
            //            render: function (data, type, row, meta) {
            //                return data; //moment(new Date(parseInt(data.substr(6)))).format("MM/DD/YYYY");
            //            }
            //        },
            //        { targets: "tblInvoice_franchiseeNo", data: "FranchiseeNo", sClass: "dt-center" },
            //        { targets: "tblInvoice_franchiseeName", data: "FranchiseeName" },
            //        {
            //            targets: "tblInvoice_invoiceNo",
            //            data: "InvoiceNo",
            //            sClass: "dt-center",
            //            render: function (data, type, row, meta) {
            //                return '<a onclick="btnOpenInvoiceDetail(' + row.InvoiceId + ')">' + row.InvoiceNo + '</a>';
            //            }
            //        },
            //        { targets: "tblInvoice_customerName", data: "CustomerName" },

            //        {
            //            targets: "tblInvoice_invAmount",
            //            data: "Amount",
            //            sClass: "clsAmounttd",
            //            render: function (data, type, row, meta) {
            //                return formatCurrency(parseFloat(data), true);
            //            }
            //        },
            //        {
            //            targets: "tblInvoice_invBalance",
            //            data: "Balance",
            //            sClass: "clsAmounttd",
            //            render: function (data, type, row, meta) {
            //                return formatCurrency(parseFloat(data), true);
            //            }
            //        },
            //        {
            //            targets: "tblInvoice_paymentsAndCredits",
            //            data: "PaymentsAndCredits",
            //            sClass: "clsAmounttd",
            //            render: function (data, type, row, meta) {
            //                return formatCurrency(parseFloat(data), true);
            //            }
            //        },
            //         {
            //             targets: "tblInvoice_invFees",
            //             data: "TotalFee",
            //             sClass: "clsAmounttd",
            //             render: function (data, type, row, meta) {
            //                 return formatCurrency(parseFloat(data), true);
            //             }
            //         },
            //        {
            //            targets: "tblInvoice_chargeback",
            //            data: "ChargebackAmount",
            //            sClass: "clsAmounttd",
            //            render: function (data, type, row, meta) {
            //                return formatCurrency(parseFloat(data), true);
            //            }
            //        },
            //    ] ,
            //    "footerCallback": function ( row, data ) {
            //        var api = this.api(), data;

            //        // converting to interger to find total
            //        var intVal = function ( i ) {
            //            return typeof i === 'string' ?
            //                i.replace(/[\$,]/g, '')*1 :
            //                typeof i === 'number' ?
            //                i : 0;
            //        };

            //        // computing column Total of the complete result
            //        var monTotal = api
            //            .column(6, { page: 'current' })
            //            .data()
            //            .reduce( function (a, b) {
            //                return intVal(a) + intVal(b);
            //            }, 0 );

            //        var tueTotal = api
            //                .column(7, { page: 'current' })
            //                .data()
            //                .reduce( function (a, b) {
            //                    return intVal(a) + intVal(b);
            //                }, 0 );

            //        var wedTotal = api
            //            .column(8, { page: 'current' })
            //            .data()
            //            .reduce( function (a, b) {
            //                return intVal(a) + intVal(b);
            //            }, 0 );

            //        var thuTotal = api
            //               .column(9, { page: 'current' })
            //               .data()
            //               .reduce( function (a, b) {
            //                   return intVal(a) + intVal(b);
            //               }, 0 );

            //        var friTotal = api
            //               .column(10, { page: 'current' })
            //               .data()
            //               .reduce( function (a, b) {
            //                   return intVal(a) + intVal(b);
            //               }, 0 );


            //        // Update footer by showing the total with the reference of the column index
            //        //$( api.column( 0 ).footer() ).html('Total');
            //        $( api.column( 6 ).footer() ).html(formatCurrency(parseFloat(monTotal), true));
            //        $( api.column( 7 ).footer() ).html(formatCurrency(parseFloat(tueTotal), true));
            //        $( api.column( 8 ).footer() ).html(formatCurrency(parseFloat(wedTotal), true));
            //        $( api.column( 9 ).footer() ).html(formatCurrency(parseFloat(thuTotal), true));
            //        $( api.column( 10 ).footer() ).html(formatCurrency(parseFloat(friTotal), true));
            //    },
            //});

            getpossibleChargebackDetailsListView(possibleChargebackDetailsList);

          
            $("#input_Search").keyup(function () {

                if ($(this).val() != '') {
                    $("#FranchiseeChargebackDetailsList tbody>tr").hide()
                    $("#FranchiseeChargebackDetailsList tbody>tr[relcusn*='" + $(this).val().toUpperCase() + "']").show()
                } else {
                    $("#FranchiseeChargebackDetailsList tbody>tr").show()
                }

             
            });


            $("#select_dateRange").change(function () {
                var value = this.value;
                setSearchTime(value);
                //refreshTable();
            });

            $(".search-field").change(function () {
                //refreshTable();
            });

            $("#btnClear").click(function () {
               
                $("#chkAllDetails").prop("checked", false);
                generatedMonths = [];
               
                $("input[rel='mgglchkDetails']").prop('checked', false)

                $('#FranchiseeChargebackDetailsList tbody').html('');
                //possibleChargebackSummaryList.rows.clear().draw();
            });
        })

        function getpossibleChargebackDetailsListView(data) {

            if (data != null && data.length > 0) {
                $('#FranchiseeChargebackDetailsList tbody').html('');

                var frId = 0;
                var sec_frid = 0;

                var invoiceAmount = 0;
                var totalInvoiceBalance = 0;
                var totalPayment = 0;
                var totalCBFees = 0;
                var totalChargeback = 0;


                for (var i = 0; i <= data.length; i++) {
                    var lengthdata = data.length;

                    if (data[i] != null) {
                        frId = data[i].FranchiseeNo;
                        trInvoicelist = "";
                        if (sec_frid != frId) {
                            if (sec_frid != 0 && sec_frid != frId) {
                                trInvoicelist += '<tr relcusn="' + data[i].FranchiseeNo + ' ' + data[i].FranchiseeName + '">';
                                trInvoicelist += '<td style="text-align:center;"colspan="3"></td>';
                                trInvoicelist += '<td style="text-align:center;"><b>Total</b></td>';
                                trInvoicelist += '<td style="text-align:right;"><b>' + formatCurrency(parseFloat(invoiceAmount), true) + '</b></td>';
                                trInvoicelist += '<td style="text-align:right;"><b>' + formatCurrency(parseFloat(totalInvoiceBalance), true) + '</b></td>';
                                trInvoicelist += '<td style="text-align:right;"><b>' + formatCurrency(parseFloat(totalPayment), true) + '</b></td>';
                                trInvoicelist += '<td style="text-align:right;"><b>' + formatCurrency(parseFloat(totalCBFees), true) + '</b></td>';
                                trInvoicelist += '<td style="text-align:right;"><b>' + formatCurrency(parseFloat(totalChargeback), true) + '</b></td>';
                                trInvoicelist += '</tr>';

                                invoiceAmount = 0;
                                totalInvoiceBalance = 0;
                                totalPayment = 0;
                                totalCBFees = 0;
                                totalChargeback = 0;
                            }
                            trInvoicelist += '<tr relcusn="' + data[i].FranchiseeNo + ' ' + data[i].FranchiseeName + '">';
                            trInvoicelist += '<td style="font-size:12px" colspan="9"><b>' + data[i].FranchiseeNo + '</b>-<span style="color: blue;"> <b>' + data[i].FranchiseeName + '</b></span></td></tr>';
                            sec_frid = data[i].FranchiseeNo;
                        }
                        trInvoicelist += '<tr relcusn="' + data[i].FranchiseeNo + ' ' + data[i].FranchiseeName + '">';
                        trInvoicelist += '<td style="text-align:center;"><input rel="mgglchkDetails" type="checkbox" style="margin-left: 10px;" id="details_fran' + data[i].FranchiseeId + '_inv' + data[i].InvoiceId + '_bp' + data[i].BillingPayId + '_chk" relId = "' + data[i].CBId + '" name="inv' + data[i].InvoiceId + '_bp' + data[i].BillingPayId + '_chk" class="payment-checkbox fran' + data[i].FranchiseeId + '" /></td>';
                        trInvoicelist += '<td style="text-align:center;">' + data[i].InvoiceDate + '</td>';
                        //trInvoicelist += '<td style="text-align:center;">' + formatJSONDate(data[i].InvoiceDate) + '</td>';
                        trInvoicelist += '<td style="text-align:center;"><a onclick="btnOpenInvoiceDetail(' + data[i].InvoiceId + ')">' + data[i].InvoiceNo + '</a></td>';
                        trInvoicelist += '<td style="text-align:left;">' + data[i].CustomerName + '</td>';
                        trInvoicelist += '<td style="text-align:right;">' + formatCurrency(parseFloat(data[i].Amount), true) + '</td>';
                        trInvoicelist += '<td style="text-align:right;">' + formatCurrency(parseFloat(data[i].PaymentsAndCredits), true) + '</td>';
                        trInvoicelist += '<td style="text-align:right;">' + formatCurrency(parseFloat(data[i].Balance), true) + '</td>';
                        trInvoicelist += '<td style="text-align:right;">' + formatCurrency(parseFloat(data[i].TotalFee), true) + '</td>';
                        trInvoicelist += '<td style="text-align:right;">' + formatCurrency(parseFloat(data[i].ChargebackAmount), true) + '</td>';


                        //var _strHtml = ''
                        //_strHtml = _strHtml + '<div class="btn-group dropdown">'
                        //_strHtml = _strHtml + '    <a target="_blank" dropdown-toggle="" data-toggle="dropdown"><i class="fa fa-hand-o-right" aria-hidden="true"></i></a>'
                        //_strHtml = _strHtml + '    <ul class="dropdown-menu pull-right">'
                        //_strHtml = _strHtml + '        <li><a href="#" onclick="showChargeBackCredit(' + data[i].FranchiseeId + ')"><i class="fa fa-plus"></i> Customer Service log </a></li>'
                        //_strHtml = _strHtml + '        <li><a href="#" onclick="showCollectionLog(' + data[i].FranchiseeId + ')"><i class="fa fa-plus"></i> Collection Call Log </a></li>'
                        //_strHtml = _strHtml + '    </ul>'
                        //_strHtml = _strHtml + '</div>'

                        //trInvoicelist += '<td style="text-align:center;">' + _strHtml + '</td>';
                        trInvoicelist += '</tr>';
                        if (sec_frid == frId) {

                            invoiceAmount += data[i].Amount;
                            totalInvoiceBalance += data[i].Balance;
                            totalPayment += data[i].PaymentsAndCredits;
                            totalCBFees += data[i].TotalFee;
                            totalChargeback += data[i].ChargebackAmount;

                        }
                        if (i == lengthdata - 1) {
                            trInvoicelist += '<tr relcusn="' + data[i].FranchiseeNo + ' ' + data[i].FranchiseeName + '">';
                            trInvoicelist += '<td style="text-align:center;" colspan="3"></td>';
                            trInvoicelist += '<td style="text-align:center;"><b>Total</b></td>';
                            trInvoicelist += '<td style="text-align:right;"><b>' + formatCurrency(parseFloat(invoiceAmount), true) + '</b></td>';
                            trInvoicelist += '<td style="text-align:right;"><b>' + formatCurrency(parseFloat(totalPayment), true) + '</b></td>';
                            trInvoicelist += '<td style="text-align:right;"><b>' + formatCurrency(parseFloat(totalInvoiceBalance), true) + '</b></td>';
                            trInvoicelist += '<td style="text-align:right;"><b>' + formatCurrency(parseFloat(totalCBFees), true) + '</b></td>';
                            trInvoicelist += '<td style="text-align:right;"><b>' + formatCurrency(parseFloat(totalChargeback), true) + '</b></td>';
                            trInvoicelist += '</tr>';
                        }

                        $('#FranchiseeChargebackDetailsList tbody').append(trInvoicelist);
                    }

                }
            }

        }
        function formatJSONDate(jsonDate) {
            if (jsonDate != null) {
                var dateString = jsonDate.substr(6);
                var currentTime = new Date(parseInt(dateString));
                var month = currentTime.getMonth() + 1;
                var day = currentTime.getDate();
                var year = currentTime.getFullYear();
                var date = month + "/" + day + "/" + year;
                return date;
            }
            return null;
        }
        function setSearchTime(value) {

            value = parseInt(value);
            $("#select_dateRange").val(value.toString());

            var custom_enabled = false;

            //var date_today = new Date(); // get today date
            //var date_yesterday = new Date(new Date(date_today).setDate(date_today.getDate() - 1));
            //var quarter_this = date_today.getMonth() / 3;
            //var quarter_last = quarter_this - 1;
            //var day_firstofthisweek = date_today.getDate() - date_today.getDay(); // First day is the day of the month - the day of the week
            //var day_lastofthisweek = day_firstofthisweek + 6; // last day is the first day + 6
            //var date_firstofthisweek = new Date(new Date(date_today).setDate(day_firstofthisweek));
            //var date_lastofthisweek = new Date(new Date(date_today).setDate(day_lastofthisweek));
            //var day_firstoflastweek = day_firstofthisweek - 7;
            //var day_lastoflastweek = day_firstoflastweek + 6;
            //var date_firstoflastweek = new Date(new Date(date_today).setDate(day_firstoflastweek));
            //var date_lastoflastweek = new Date(new Date(date_today).setDate(day_lastoflastweek));
            //var date_lastofthismonth = new Date(date_today.getFullYear(), date_today.getMonth() + 1, 0);
            //var date_firstofthismonth = new Date(new Date(date_lastofthismonth).setDate(1));
            //var date_lastoflastmonth = new Date(date_today.getFullYear(), date_today.getMonth(), 0);
            //var date_firstoflastmonth = new Date(new Date(date_lastoflastmonth).setDate(1));
            //var date_lastofthisquarter = new Date(date_today.getFullYear(), (quarter_this + 1) * 3, 0);
            //var date_firstofthisquarter = new Date(date_today.getFullYear(), quarter_this * 3, 1);
            //var date_lastoflastquarter = new Date(date_today.getFullYear(), quarter_this * 3, 0);
            //var date_firstoflastquarter = new Date(date_today.getFullYear(), (quarter_this - 1) * 3, 1);
            //var date_lastofthisfiscalyear = new Date(date_today.getFullYear(), 9, 0);
            //var date_firstofthisfiscalyear = new Date(date_today.getFullYear() - 1, 9, 1);
            //var date_lastoflastyear = new Date(date_today.getFullYear(), 0, 0);
            //var date_firstoflastyear = new Date(date_today.getFullYear() - 1, 0, 1);

            //var date_from = date_today;
            //var date_to = date_today;

            //if (value == 1 || value == 2) { // this week
            //    date_from = date_firstofthisweek;
            //    date_to = date_lastofthisweek;
            //}
            //else if (value == 3 || value == 4) { // this month
            //    date_from = date_firstofthismonth;
            //    date_to = date_lastofthismonth;
            //}
            //else if (value == 5 || value == 6) { // fiscal quarter
            //    date_from = date_firstofthisquarter;
            //    date_to = date_lastofthisquarter;
            //}
            //else if (value == 7 || value == 8) { // fiscal year
            //    date_from = date_firstofthisfiscalyear;
            //    date_to = date_lastofthisfiscalyear;
            //}
            //else if (value == 9) { // yesterday
            //    date_from = date_yesterday;
            //    date_to = date_yesterday;
            //}
            //else if (value == 10) { // last week
            //    date_from = date_firstoflastweek;
            //    date_to = date_lastoflastweek;
            //}
            //else if (value == 11) { // last month
            //    date_from = date_firstoflastmonth;
            //    date_to = date_lastoflastmonth;
            //}
            //else if (value == 12) { // last quarter
            //    date_from = date_firstoflastquarter;
            //    date_to = date_lastoflastquarter;
            //}
            //else if (value == 13) { // last year
            //    date_from = date_firstoflastyear;
            //    date_to = date_lastoflastyear;
            //} else if (value == 14) {
            //    custom_enabled = true;
            //}

            //if (value == 2 || value == 4 || value == 6 || value == 8) { // anything-to-date, set the "to" date to today
            //    date_to = date_today;
            //}

            //var day_from = date_from.getDate();
            //var month_from = date_from.getMonth() + 1;
            //var year_from = date_from.getFullYear();

            //var day_to = date_to.getDate();
            //var month_to = date_to.getMonth() + 1;
            //var year_to = date_to.getFullYear();

            //year_from = year_from.toString().substr();
            //year_to = year_to.toString().substr();


            switch (parseInt(value)) {
                case 1:
                    firstDay = moment().startOf('isoWeek').toString();
                    lastDay = moment().endOf('isoWeek').toString();
                    break;
                case 2:
                    //code block
                    firstDay = moment().startOf('isoWeek').toString();
                    lastDay = new Date().toString();
                    break;
                case 3:
                    firstDay = moment().subtract(0, 'month').startOf('month').toString();
                    lastDay = moment().subtract(0, 'month').endOf('month').toString();
                    break;
                case 4:
                    //code block
                    firstDay = moment().subtract(0, 'month').startOf('month').toString();
                    lastDay = new Date().toString();
                    break;
                case 5:
                    //code block
                    firstDay = moment().startOf('quarter').toString();
                    lastDay = moment().endOf('quarter').toString();
                    break;
                case 6:
                    //code block
                    firstDay = moment().startOf('quarter').toString();
                    lastDay = new Date().toString();
                    break;
                case 7:
                    //code block
                    firstDay = moment().startOf('year').toString();;
                    lastDay = moment().endOf('year').toString();
                    break;
                case 8:
                    //code block
                    firstDay = moment().startOf('year').toString();
                    lastDay = new Date().toString();
                    break;
                case 9:
                    //code block
                    firstDay = moment().add(-1, 'days').toString();
                    lastDay = moment().add(-1, 'days').toString();
                    break;
                case 10:
                    //code block
                    firstDay = moment().subtract(1, 'week').startOf('week').toString();
                    lastDay = moment().subtract(1, 'week').endOf('week').toString();
                    break;
                case 11:
                    //code block
                    firstDay = moment().subtract(1, 'month').startOf('month').toString();
                    lastDay = moment().subtract(1, 'month').endOf('month').toString();
                    break;
                case 12:
                    //code block
                    firstDay = moment().subtract(1, 'quarter').startOf('quarter').toString();
                    lastDay = moment().subtract(1, 'quarter').endOf('quarter').toString();
                    break;
                case 13:
                    //code block
                    firstDay = moment().subtract(1, 'year').startOf('year').toString();
                    lastDay = moment().subtract(1, 'year').endOf('year').toString();
                    break;
                case 14:
                    custom_enabled = true;
                    //code block
                    $('#dtpfrom').html(moment(firstDay).format('L'));
                    $('#dtpto').html(moment(lastDay).format('L'));
                    break;
                default:
                    //code block
            }

            //$("#dtpfrom").val(month_from + '/' + day_from + '/' + year_from);
            //$("#dtpto").val(month_to + '/' + day_to + '/' + year_to)
            $('#dtpfrom').val(moment(firstDay).format('L'));
            $('#dtpto').val(moment(lastDay).format('L'));

            $(".search-date-field").prop('disabled', !custom_enabled);
        };

        function formatCurrency(total, dollar) {
            dollar = (dollar == true ? true : false);
            var neg = false;
            if (total < 0) {
                neg = true;
                total = Math.abs(total);
            }
            return (neg ? "-" : '') + (dollar ? "$" : "") + parseFloat(total, 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString();
        };


        function getSelectedIds() {
            var Ids = "";
            $('input[rel="mgglchkDetails"][id^=details_]').each(function (item) {
                        if ($(this).is(":checked")) {
                            var mId = $(this).attr('relid');
                            if (Ids != "")
                                Ids = Ids + "," + mId;
                            else
                                Ids = mId;
                        }
                    });

            
            return Ids;
        }

        function getFranchiseeIdChunk(elem) {
            return $(elem).attr("id").split('_')[1];
        }

        function btnOpenInvoiceDetail(id) {

            var sURL = '@Url.Action("InvoiceDetail", "AccountReceivable", new { area = "Portal" })?Id=' + id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#form_invoicedetail').html(data);
                    $("#modal_invoicedetail").modal({ backdrop: 'static' });
                },
                error: function () {
                    alert("Content load failed.");
                }
            });

            
        };
        function btnInvoicePopupClose() {
            $("#modal_invoicedetail").modal('hide');
        }

    </script>
}


