
@{
    ViewBag.Title = "TurnaroundList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section styles{
    <link href="@Url.Content("~/Content/admin/assets/global/plugins/datatables/datatables.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/admin/assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/admin/assets/global/plugins/bootstrap-multiselect/css/bootstrap-multiselect.css")" rel="stylesheet" />

}

<style>
    .topheader {
        font-size: 14px;
        font-weight: bold;
        color: #FFF !important;
        text-transform: uppercase;
        margin-top: 3px;
    }

    .alignRight {
        text-align: right;
    }

    .alignCenter {
        text-align: center;
    }

    .no-padding {
        padding: 0 !important;
    }

    .no-margin {
        margin: 0 !important;
    }

    .padding-tb1 {
        padding-top: 1px;
        padding-bottom: 1px;
    }

    .margin-tb1 {
        margin-top: 1px;
        margin-bottom: 1px;
    }

    .custom-listbox .headerbox {
        padding: 3px 0px 3px 5px;
        font-weight: normal;
    }

    .custom-listbox {
        margin-top: 4px;
        margin-bottom: 0px;
    }

    .row {
        margin: 0;
        padding: 3px 0;
    }

    #btnGenerateReport {
        padding: 4.1px 12px;
        font-size: 11px;
        padding-bottom: 4.4px;
    }

    .btn.multiselect {
        text-align: left;
        padding-top: 4px;
        padding-bottom: 4px;
        font-size: 11px;
        color: #555;
    }

    .multiselect .caret {
        right: 0;
        position: absolute;
        margin-top: 8px;
        margin-right: 8px;
    }

    .multiselect-container.dropdown-menu {
        text-transform: none;
        font-size: 14px;
    }

    #modal_RegionModel .modal-content {
        width: 55% !important;
        margin-left: 30% !important;
    }
</style>

<div class="headerbox">
    <div class="row" style="background-color: #3598DC;color: #fff;">
        <div class="col-md-12 no-padding">
            <div class="alignCenter">
                <div class="col-md-4" style="text-align:left;" >
                    <div id="divsort" style="display:none;">
                        <div class="col-md-1" style="width:75px;">Sort By:</div>
                        <div class="col-md-5">
                            <select class="form-control input-sm" id="ddlSortBy">
                                <option value="none">Default</option>
                                <option value="cNameAsc">Customer Name Ascending</option>
                                <option value="cNameDesc">Customer Name Descending</option>
                                <option value="cNoAsc">Customer No Ascending</option>
                                <option value="cNoDesc">Customer No Descending</option>
                                <option value="cRegionAsc">Region Ascending</option>
                                <option value="cRegionDesc">Region Descending</option>
                            </select>
                        </div>
                    </div>                  
                </div>
                <div class="col-md-4 topheader">
                    CHARGEBACK TURN AROUND PAID LIST
                </div>
                <div class="col-md-4" style="padding-right:5px;">
                    <div class="col-md-7 pull-right no-padding">
                        <div style="display:table-cell;padding-right: 5px;">
                            Region
                        </div>
                        <div style="display:table-cell;width:100%;">
                            @if (ViewBag.regionlist != null)
                            {
                                <select class="form-control input-sm" multiple="multiple" id="regionlist" style="display:none;">
                                    @foreach (var item in (SelectList)ViewBag.regionlist)
                                    {
                                        <option @(item.Selected ? "selected" : "") value="@item.Value">@item.Text</option>
                                    }
                                </select>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="custom-listbox" id="divPaymentProcesslist" style="margin-top:4px;">
    <div class="headerbox">
        <div class="row no-padding">
            <div class="col-sm-1 page-size">
                <select class="form-control input-sm" id="pageSize" style="padding-left:6px;">
                    <option value="-1">All</option>
                    <option value="100" selected>100</option>
                    <option value="50">50</option>
                    <option value="25">25</option>
                </select>
            </div>
            <div class="col-md-3">
                <div class="input-icon">
                    <i class="icon-magnifier icon-align-right" style="margin-top: 8px;"></i>
                    <input id="input_Search" type="text" required name="customernumber" autocomplete="off" placeholder="Search" value="" class="form-control input-sm typeahead" />
                </div>
            </div>

            <div class="col-md-3" style="padding-left: 0px;padding-right: 0px;">
                <div class="input-group">
                    <div class="icheck-inline" style="margin-top: 2px; margin-bottom: 2px">
                        <label class="icheck-inline" style="margin-top: 0px; margin-bottom: 0px; ">
                            <input type="radio" name="isSummaryView" value="1" class="icheck" checked id="chkSummaryView"> Summary View
                        </label>
                        <label class="icheck-inline" style="margin-top: 0px; margin-bottom: 0px; ">
                            <input type="radio" name="isSummaryView" value="2" class="icheck" id="chkDetailView"> Detail View
                        </label>
                    </div>
                </div>
            </div>

            <div class="col-md-5 pull-right no-padding">

                <div class="col-md-10 pull-right no-padding" style="text-align:center;">
                    <div class="col-md-6 no-padding" style="margin-left:30px;">
                        <select id="select_timeduration" class="form-control input-sm">
                            <option value="1">This Week</option>
                            <option value="2">This Week-to-date</option>
                            <option value="3" selected="selected">This Month</option>
                            <option value="4">This Month-to-date</option>
                            <option value="5">This Quarter</option>
                            <option value="6">This Quarter-to-date</option>
                            <option value="7">This Fiscal Year</option>
                            <option value="8">This Fiscal Year-to-date</option>
                            <option value="9">Today</option>
                            <option value="10">Yesterday</option>
                            <option value="11">Last Week</option>
                            <option value="12">Last Month</option>
                            <option value="13">Last Quarter</option>
                            <option value="14">Last Year</option>
                            <option value="15">Custom Date</option>
                            <option value="16">Period</option>
                        </select>
                    </div>
                    <div class="col-md-5 divspandate no-padding" style="margin-top: 3px; margin-left: 0px; display: block; float: right;" id="divspandate">
                        <span id="spnStartDate"></span> - <span id="spnEndtDate"></span>
                    </div>
                    <div class="col-md-3 no-padding" style="margin-left: 3px; width: 70px; display: none;" id="divSD">
                        <input type="text" name="txtStartDate" id="txtStartDate" value="" class="form-control input-sm date-picker RemovePeriodvalidation" style="padding: 3px;" />
                    </div>
                    <div class="col-md-3 no-padding" style="margin-left: 3px; width: 70px; display: none;" id="divED">
                        <input type="text" name="txtEndtDate" id="txtEndtDate" value="" class="form-control input-sm date-picker RemovePeriodvalidation" style="padding: 3px;" />
                    </div>
                    <div class="col-md-3 no-padding" style="margin-left: 3px; width: 70px; display: none;" id="divmonth">
                        <select id="monthlist" class="form-control input-sm">
                            <option value=""></option>
                            <option value="1">Jan</option>
                            <option value="2">Feb</option>
                            <option value="3">Mar</option>
                            <option value="4">Apr</option>
                            <option value="5">May</option>
                            <option value="6">June</option>
                            <option value="7">July</option>
                            <option value="8">Aug</option>
                            <option value="9">Sep</option>
                            <option value="10">Oct</option>
                            <option value="11">Nov</option>
                            <option value="12">Dec</option>
                        </select>
                    </div>
                    <div class="col-md-3 no-padding" style="margin-left: 3px; width: 70px; display: none;" id="divyear">
                        <select class="form-control input-sm" id="yearlist" style="padding-left: 2px;">
                            <option value=""></option>
                            <option value="2018">2018</option>
                            <option value="2017">2017</option>
                            <option value="2016">2016</option>
                            <option value="2015">2015</option>
                            <option value="2014">2014</option>
                            <option value="2013">2013</option>
                            <option value="2012">2012</option>
                            <option value="2011">2011</option>
                            <option value="2010">2010</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="tablebox">
    <div class="table-responsive">
        <table class="table table-striped table-bordered table-hover" id="tableTurnAround" style="margin-top:0 !important;display:none">
            <thead>
                <tr>
                    <th style="width:20px;text-align:center;">
                        Region
                    </th>
                    @*<th style="width:20px;text-align:center;">
                            Franchisee No
                        </th>
                        <th style="width: 164px;text-align:center;">
                            Franchisee Name
                        </th>*@
                    <th style="width: 180px;text-align:center;">
                        Customer Name
                    </th>
                    <th style="text-align:center;width:70px;">
                        Invoice No
                    </th>
                    <th style="text-align:center;width:80px;">
                        Chargeback Date
                    </th>
                    <th style="text-align:center;width:70px;">
                        Chargeback Amount
                    </th>
                    <th style="text-align:center;width:40px;">
                        Payment Date
                    </th>
                    <th style="text-align:center;width:70px;">
                        Payment Amount
                    </th>
                    <th style="text-align:center;width:70px;">
                        Negative Due Amount
                    </th>
                    <th style="text-align:center;width:40px;">
                        TAR/CB Date
                    </th>
                    <th style="text-align:center;width:60px;">
                        Chargeback Pay Amount
                    </th>
                </tr>
            </thead>
            <tbody></tbody>
            @*<tfoot>
                    <tr>
                        <td colspan="6" style="text-align:right;background: #95a5a6;">
                            Total
                        </td>
                        <td style="text-align:right;background: #95a5a6;padding-right:5px"><span id="spnchargebackAmount"></span></td>
                        <td style="text-align:right;background: #95a5a6;padding-right:5px">&nbsp;</td>
                        <td style="text-align:right;background: #95a5a6;padding-right:5px"><span id="spntotalPayment"></span></td>
                        <td style="text-align:right;background: #95a5a6;padding-right:5px"><span id="spnchargebackpayAmount"></span></td>


                    </tr>
                </tfoot>*@
        </table>
    </div>
</div>




<div class="tablebox">
    <div class="table-responsive">
        <table class="table table-striped table-bordered table-hover" id="tableTurnAroundSummary" style="margin-top:0 !important;display:none">
            <thead>
                <tr>
                    <th style="width:20px;text-align:center;">
                        Region
                    </th>
                    <th style="width:20px;text-align:center;">
                        Franchisee No
                    </th>
                    <th style="width: 164px;text-align:center;">
                        Franchisee Name
                    </th>
                    <th style="text-align:center;width:70px;">
                        Chargeback Amount
                    </th>
                    <th style="text-align:center;width:30px;">
                        Payment Amount
                    </th>
                    <th style="text-align:center;width:30px;">
                        Chargeback Pay Amount
                    </th>
                </tr>
            </thead>
            <tbody></tbody>
            <tfoot>
                <tr>
                    <td colspan="3" style="text-align:right;background: #95a5a6;">
                        Total
                    </td>

                    <td style="text-align:right;background: #95a5a6;padding-right:5px"><span id="spnchargebackAmountTA"></span></td>
                    <td style="text-align:right;background: #95a5a6;padding-right:5px"><span id="spntotalPaymentTA"></span></td>
                    <td style="text-align:right;background: #95a5a6;padding-right:5px"><span id="spnchargebackpayAmountTA"></span></td>
                    @*<td style="text-align:right;background: #95a5a6;padding-right:5px">&nbsp;</td>
                        <td style="text-align:right;background: #95a5a6;padding-right:5px">&nbsp;</td>
                        <td style="text-align:right;background: #95a5a6;padding-right:5px">&nbsp;</td>
                        <td style="text-align:right;background: #95a5a6;padding-right:5px">&nbsp;</td>*@
                </tr>
            </tfoot>
        </table>
    </div>
</div>

<div class="modal fade in" id="modal_RegionModel" tabindex="-1" role="basic" aria-hidden="true" style="display: none; padding-right: 17px;">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" style="border-radius: 8px;">
            <div class="modal-header headerbox list" style="padding:0px!important;border-bottom: none;">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true" style="margin-top: 12px !important;margin-right: 12px !important;"></button>
                <h4 class="modal-title text-center" style="margin-top: 0px; margin-bottom: 4px;  padding: 7px!important;font-size: 12px;font-weight: bold;background: #3598DC !important;color: #FFF !important;border: 1px solid #3598DC !important;padding: 0px;text-transform: uppercase;">
                    Select Region
                </h4>
            </div>
            <div class="modal-body form form-horizontal" style="padding-top: 1px;margin-top: -5px;">
                <div class="form-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label class="control-label col-md-12" style="text-align: center;padding: 5px;background-color: #e8e8e8;margin-bottom:5px;font-weight:bold;">Select Region</label>
                                @if (ViewBag.regionlist != null)
                                {
                                    <select class="form-control input-sm" id="selectregionlist">
                                        <option value="">Select Region</option>
                                        @foreach (var item in (SelectList)ViewBag.regionlist)
                                        {
                                            <option @(item.Selected ? "selected" : "") value="@item.Value">@item.Text</option>
                                        }
                                    </select>
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-actions">
                    <div class="col-md-12">
                        <button type="button" name="SaveNew" id="btnRegion" class="btn btn-primary button-next pull-right" onclick="" style="margin-right:0px;">Select Region</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="form-horizontal" id="form_invoicedetail"></div>
@section scripts{
    <script type="text/javascript">
        var turnaroundList;
        var turnaroundListSummary;

        function getTableURL() {

            var _regionId = $("#regionlist").val();
            var _fromDateVal = $('#spnStartDate').text();
            var _toDateVal = $('#spnEndtDate').text();
            var selectedview = $("input[name=isSummaryView]:checked").val();

            var _monthVal = $('#monthlist').val();
            var _yearVal = $('#yearlist').val();
            
            if (_monthVal > 0 && _yearVal > 0) {
                var date = new Date(_monthVal + '/01/' + _yearVal);
                var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);
                var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);
                $('#spnStartDate').html(moment(firstDay).format('L'));
                $('#spnEndtDate').html(moment(lastDay).format('L'));

                _fromDateVal = $('#spnStartDate').text();
                _toDateVal = $('#spnEndtDate').text();
            }

            var _sort = $("#ddlSortBy").val();

            var sURL = '@Url.Action("TurnAroundListResultData", "AccountsPayable", new { area = "Portal" })?regionIds=' + _regionId + '&from=' + _fromDateVal + '&to=' + _toDateVal + '&viewmode=' + selectedview + '&sortby=' + _sort
            return sURL;
        }

        function refreshTable() {
            var url = getTableURL();

            $.blockUI();//$.blockUI({ message: $('#throbberBlock'), theme: true, baseZ: 12000 });

            var selectedview = $("input[name=isSummaryView]:checked").val();


            if (selectedview == 1) {
                turnaroundListSummary.DataTable().ajax.url(url).load(function () { $.unblockUI(); });
                $('#tableTurnAround').hide();
                $('#tableTurnAroundSummary').show();
                $('#divsort').hide();
            }
            else {

                //turnaroundList.DataTable().ajax.url(url).load(function () { $.unblockUI(); });
                $('#tableTurnAround').show();
                $('#tableTurnAroundSummary').hide();
                $('#divsort').show();
                reloadTable();
            }
        }

        var generatedMonths = [];

        $(window).load(function () {
            if ('@ViewBag.selectedRegionId' == 0) {
                $("#modal_RegionModel").modal({ backdrop: 'static' });
            } else {
                refreshTable();
            }
        });

        jQuery(document).ready(function () {
            $("#regionlist").multiselect({
                includeSelectAllOption: true,
                selectAllText: 'Select all',
                buttonWidth: '100%',
                nonSelectedText: 'Select region..',
                dropRight: true,
                numberDisplayed: 2

            });


            $("input[name=isSummaryView]").change(function () {
                refreshTable();
            });


            $("#regionlist").change(function () {
                if ($("#regionlist").val() != null)
                    refreshTable();
            });

            $("#btnRegion").click(function () {
                if ($("#selectregionlist").val() != "") {
                    $("#regionlist option[value='" + $("#selectregionlist").val() + "']").attr("selected", 1);
                    $("#regionlist").multiselect("refresh");
                    refreshTable();
                    $(".close").click();
                }
            });

            $("#pageSize").change(function () {
                setPaging();
            });

            $('#divspandate').show();
            $('#divSD').hide();
            $('#divED').hide();

            firstDay = moment().subtract(0, 'month').startOf('month').toString();
            lastDay = moment().subtract(0, 'month').endOf('month').toString();

            $('#spnStartDate').html(moment(firstDay).format('L'));
            $('#spnEndtDate').html(moment(lastDay).format('L'));

            var ps = $('#pageSize').val();

            turnaroundListSummary = $('#tableTurnAroundSummary').dataTable({
                "bAutoWidth": false,
                cache: false,
                //"order": false,
                "bSort": true,
                "iDisplayLength": ps == '-1' ? 25 : ps,
                "dom": "<'table-responsive't><'bottom'ip><'clear'>",
                "aaSorting": [[0, "desc"]],
                "sAjaxDataProp": "aadata",  // Internationalisation. For more info refer to http://datatables.net/manual/i18n
                "rowCallback": function (nRow, data) {

                },
                "aoColumns": [
                    {
                        "sName": "RegionName",
                        "bSortable": true,
                        "sClass": "alignCenter",
                        "mRender": function (data, type, full) {
                            return full.RegionName;
                        }
                    },
                    {
                        "sName": "FranchiseeNo",
                        "bSortable": true,
                        "sClass": "alignCenter",
                        "mRender": function (data, type, full) {
                            return full.FranchiseeNo;
                        }
                    },
                    {
                        "sName": "FranchiseeName",
                        "bSortable": true,
                        //"sClass": "alignCenter",
                        "mRender": function (data, type, full) {
                            return full.FranchiseeName;
                        }
                    },
                   {
                       "sName": "ChargeBackAmount",
                       data: "ChargeBackAmount",
                       "bSortable": true,
                       "sClass": "alignRight",
                       "mRender": function (data, type, full) {
                           return formatCurrency(full.ChargeBackAmount);
                       }

                   },
                    {
                        "sName": "PaymentAmount",
                        data: "PaymentAmount",
                        "bSortable": true,
                        "sClass": "alignRight",
                        "mRender": function (data, type, full) {
                            return formatCurrency(full.PaymentAmount);
                        }

                    },
                    {
                        "sName": "ChargeBackPayAmount",
                        data: "ChargeBackPayAmount",
                        "bSortable": true,
                        "sClass": "alignRight",
                        "mRender": function (data, type, full) {
                            return formatCurrency(full.ChargeBackPayAmount);
                        }
                    },
                ],
                "footerCallback": function (row, data, start, end, display) {
                    var api = this.api(), data;

                    var _chargebackAmount = 0;
                    var _totalPayment = 0;
                    var _chargebackpayAmount = 0;

                    $.each(data, function (key, value) {

                        _chargebackAmount += value.ChargeBackAmount;
                        _totalPayment += value.PaymentAmount;
                        _chargebackpayAmount += value.ChargeBackPayAmount;
                    });
                    console.log(data)
                    console.log(_chargebackAmount)
                    console.log(_totalPayment)
                    console.log(_chargebackpayAmount)
                    $('#spnchargebackAmountTA').html(formatCurrency(_chargebackAmount));
                    $('#spntotalPaymentTA').html(formatCurrency(_totalPayment));
                    $('#spnchargebackpayAmountTA').html(formatCurrency(_chargebackpayAmount));

                    //// Remove the formatting to get integer data for summation
                    //var intVal = function (i) {
                    //    return typeof i === 'string' ?
                    //        i.replace(/[\$,]/g, '') * 1 :
                    //        typeof i === 'number' ?
                    //        i : 0;
                    //};


                    //var chargebackAmount = api
                    //    .column(4, { page: 'current' })
                    //    .data()
                    //    .reduce(function (a, b) {
                    //        return intVal(a) + intVal(b);
                    //    }, 0);


                    //var totalPayment = api
                    //    .column(5, { page: 'current' })
                    //    .data()
                    //    .reduce(function (a, b) {
                    //        return intVal(a) + intVal(b);
                    //    }, 0);


                    //var chargebackpayAmount = api
                    //    .column(6, { page: 'current' })
                    //    .data()
                    //    .reduce(function (a, b) {
                    //        return intVal(a) + intVal(b);
                    //    }, 0);

                    //$(api.column(4).footer()).html(formatCurrency(chargebackAmount));
                    //$(api.column(5).footer()).html(formatCurrency(totalPayment));
                    //$(api.column(6).footer()).html(formatCurrency(chargebackpayAmount));
                }
            });

            $("#input_Search").keyup(function () {


                var selectedview = $("input[name=isSummaryView]:checked").val();

                if (selectedview == 1) {
                    var table = $("#tableTurnAroundSummary").DataTable();
                    table.search($(this).val()).draw();

                    $('#tableTurnAround').hide();
                    $('#tableTurnAroundSummary').show();
                }
                else {                     
                    if ($(this).val() != "") {
                        $("#tableTurnAround tbody>tr").hide()
                        $("#tableTurnAround tbody>tr[relcusn*='" + $(this).val().toUpperCase() + "']").show()
                        $("#tableTurnAround tbody>tr[relinvc*='" + $(this).val().toUpperCase() + "']").show()

                        var frnid = $("#tableTurnAround tbody>tr[relinvc*='" + $(this).val().toUpperCase() + "']").attr("rel");

                        $("#tableTurnAround tbody>tr").closest(".clstr_" + frnid).show();
                        $('#tableTurnAround').show();
                        $('#tableTurnAroundSummary').hide();
                    }
                    else {
                        $("#tableTurnAround tbody>tr").show()                         
                        $('#tableTurnAround').show();
                        $('#tableTurnAroundSummary').hide();
                    }
                }
            });
            //$("#input_Search").keyup(function () {
            //    var table = $("#tableTurnAround").DataTable();
            //    table.search($(this).val()).draw();
            //});

            $('#tableTurnAround').DataTable({
                //"bProcessing": true,
                cache: false,
                //"order": false,
                "bSort": false,
                "bInfo": false,
                "bServerSide": false,
                "aLengthMenu": [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]],
                "pageLength": 25, // default records per page
                "dom": "<'table-responsive't><'bottom'ip><'clear'>"
            });

            //turnaroundList = $('#tableTurnAround').dataTable({
            //    "bAutoWidth": false,
            //    cache: false,
            //    "order": false,
            //    "iDisplayLength": ps == '-1' ? 25 : ps,
            //    "dom": "<'table-responsive't><'bottom'ip><'clear'>",
            //    "aaSorting": [[0, "desc"]],
            //    "sAjaxDataProp": "aadata",  // Internationalisation. For more info refer to http://datatables.net/manual/i18n
            //    "rowCallback": function (nRow, data) {

            //    },
            //    "aoColumns": [
            //        {
            //            "sName": "RegionName",
            //            "bSortable": true,
            //            "sClass": "alignCenter",
            //            "mRender": function (data, type, full) {
            //                return full.RegionName;
            //            }
            //        },
            //        {
            //            "sName": "FranchiseeNo",
            //            "bSortable": true,
            //            "sClass": "alignCenter",
            //            "mRender": function (data, type, full) {
            //                return full.FranchiseeNo;
            //            }
            //        },
            //        {
            //            "sName": "FranchiseeName",
            //            "bSortable": true,
            //            //"sClass": "alignCenter",
            //            "mRender": function (data, type, full) {
            //                return full.FranchiseeName;
            //            }
            //        },
            //        {
            //            "sName": "CustomerName",
            //            "bSortable": true,
            //            //"sClass": "alignCenter",
            //            "mRender": function (data, type, full) {
            //                return full.CustomerName;
            //            }
            //        },
            //        {
            //            "sName": "InvoiceNo",
            //            "bSortable": true,
            //            "sClass": "alignCenter",
            //            "mRender": function (data, type, full) {
            //                return full.InvoiceNo;
            //            }
            //        },
            //        {
            //            "sName": "ChargeBackDate",
            //            "bSortable": true,
            //            "sClass": "alignCenter",
            //            "mRender": function (data, type, full) {
            //                var date = formatJSONDateUtc(full.PaymentDate);
            //                return date;
            //            }
            //        },
            //        {
            //            "sName": "ChargeBackAmount",
            //            data: "ChargeBackAmount",
            //            "bSortable": true,
            //            "sClass": "alignRight",
            //            "mRender": function (data, type, full) {
            //                return  formatCurrency(parseFloat(full.ChargeBackAmount));
            //            }
            //        },
            //        {
            //            "sName": "PaymentDate",
            //            "bSortable": true,
            //            "sClass": "alignCenter",
            //            "mRender": function (data, type, full) {
            //                var date = formatJSONDateUtc(full.PaymentDate);
            //                return date;
            //            }
            //        },
            //        {
            //            "sName": "PaymentAmount",
            //            data: "PaymentAmount",
            //            "bSortable": true,
            //            "sClass": "alignRight",
            //            "mRender": function (data, type, full) {
            //                return  formatCurrency(parseFloat(full.PaymentAmount));
            //            }

            //        },
            //        {
            //            "sName": "ChargeBackPayAmount",
            //            data: "ChargeBackPayAmount",
            //            "bSortable": true,
            //            "sClass": "alignRight",
            //            "mRender": function (data, type, full) {
            //                return formatCurrency(parseFloat(full.ChargeBackPayAmount));
            //            }
            //        }
            //    ],
            //    "footerCallback": function (row, data, start, end, display) {
            //        var api = this.api(), data;

            //        var _chargebackAmount = 0;
            //        var _totalPayment = 0;
            //        var _chargebackpayAmount = 0;

            //        $.each(data, function (key, value) {

            //            _chargebackAmount += CleanformatCurrency(value.ChargeBackAmount);
            //            _totalPayment += CleanformatCurrency(value.PaymentAmount);
            //            _chargebackpayAmount += CleanformatCurrency(value.ChargeBackPayAmount);
            //        });

            //        $('#spnchargebackAmount').html(formatCurrency(_chargebackAmount));
            //        $('#spntotalPayment').html(formatCurrency(_totalPayment));
            //        $('#spnchargebackpayAmount').html(formatCurrency(_chargebackpayAmount));


            //        //// Remove the formatting to get integer data for summation
            //        //var intVal = function (i) {
            //        //    return typeof i === 'string' ?
            //        //        i.replace(/[\$,]/g, '') * 1 :
            //        //        typeof i === 'number' ?
            //        //        i : 0;
            //        //};

            //        //var chargebackAmount = api
            //        //    .column(6, { page: 'current' })
            //        //    .data()
            //        //    .reduce(function (a, b) {
            //        //        return intVal(a) + intVal(b);
            //        //    }, 0);


            //        //var totalPayment = api
            //        //    .column(8, { page: 'current' })
            //        //    .data()
            //        //    .reduce(function (a, b) {
            //        //        return intVal(a) + intVal(b);
            //        //    }, 0);


            //        //var chargebackpayAmount = api
            //        //    .column(9, { page: 'current' })
            //        //    .data()
            //        //    .reduce(function (a, b) {
            //        //        return intVal(a) + intVal(b);
            //        //    }, 0);

            //        //$(api.column(6).footer()).html(formatCurrency(chargebackAmount));
            //        //$(api.column(8).footer()).html(formatCurrency(totalPayment));
            //        //$(api.column(6).footer()).html(formatCurrency(chargebackpayAmount));
            //    }
            //});

            $("#ddlSortBy").change(function () {
                if ($("#ddlSortBy").val() != "")
                    refreshTable();
            });

        });

        function ToJavaScriptDate(value) {
            var pattern = /Date\(([^)]+)\)/;
            var results = pattern.exec(value);
            var dt = new Date(parseFloat(results[1]));
            return (dt.getMonth() + 1) + "/" + dt.getDate() + "/" + dt.getFullYear();
        }


        function reloadTable() {
            $.blockUI();
            //var table2= $('#tblChargeBackDetailReport').DataTable();
            //table2.clear();

            $('#tableTurnAround tbody').html('');

            $.ajax({
                type: "GET",
                url: getTableURL(),
                success: function (data) {
                    var invNo = "";
                    var sec_invNo = "";
                    var sec_TARDate = "";
                    var frId = 0;
                    var sec_frid = 0;
                    var ChargeBackAmount = 0;
                    var PaymentAmount = 0;
                    var NegativeDueAmount = 0;
                    var ChargeBackPayAmount = 0;
                    for (var i = 0; i <= data.aadata.length; i++) {
                        var lengthdata = data.aadata.length;
                        //data.forEach(function (item) {
                        if (data.aadata[i] != null) {
                            invNo = data.aadata[i].InvoiceNo;
                            frId = data.aadata[i].FranchiseeNo;

                            trInvoicelist = "";
                            if (frId != sec_frid) {
                                if (sec_frid != 0 && sec_frid != frId) {
                                    trInvoicelist += '<tr relcusn="' + data.aadata[i].FranchiseeNo + ' ' + data.aadata[i].FranchiseeName + '" >';
                                    trInvoicelist += '<td style="text-align:center;"colspan="3"></td>';
                                    trInvoicelist += '<td style="text-align:center;background: #bbf7f7;">Total</td>';
                                    trInvoicelist += '<td style="text-align:right;background: #bbf7f7;">' + formatCurrency(parseFloat(ChargeBackAmount)) + '</td>';
                                    trInvoicelist += '<td style="text-align:center;background: #bbf7f7;"></td>';

                                    trInvoicelist += '<td style="text-align:right;background: #bbf7f7;">' + formatCurrency(parseFloat(PaymentAmount)) + '</td>';
                                    trInvoicelist += '<td style="text-align:right;background: #bbf7f7;">' + formatCurrency(parseFloat(NegativeDueAmount)) + '</td>';
                                    trInvoicelist += '<td style="text-align:center;background: #bbf7f7;"></td>';
                                    trInvoicelist += '<td style="text-align:right;background: #bbf7f7;">' + formatCurrency(parseFloat(ChargeBackPayAmount)) + '</td></tr>';
                                    ChargeBackAmount = 0;
                                    PaymentAmount = 0;
                                    NegativeDueAmount = 0;
                                    ChargeBackPayAmount = 0;
                                }
                                trInvoicelist += '<tr relcusn="' + data.aadata[i].FranchiseeNo + ' ' + data.aadata[i].FranchiseeName + '" class="clstr_' + data.aadata[i].FranchiseeNo + '">';
                                trInvoicelist += '<td style="font-size:12px" colspan="10"><b>' + data.aadata[i].FranchiseeNo + '</b>-<span style="color: blue;"> <b>' + data.aadata[i].FranchiseeName + '</b></span></td></tr>';
                                sec_frid = data.aadata[i].FranchiseeNo;
                            }


                            if (invNo != sec_invNo) {
                                trInvoicelist += '<tr relinvc="' + data.aadata[i].InvoiceNo + ' ' + data.aadata[i].FranchiseeNo + ' ' + data.aadata[i].FranchiseeName + '" rel ="' + data.aadata[i].FranchiseeNo + '" >';
                                trInvoicelist += '<td style="text-align:center;">' + data.aadata[i].RegionName + '</td>';
                                trInvoicelist += '<td style="text-align:left;">' + data.aadata[i].CustomerName + '</td>';
                                trInvoicelist += '<td style="text-align:center;"><a onclick="showInvoiceDetail(' + data.aadata[i].InvoiceId + ')">' + data.aadata[i].InvoiceNo + '</a></td>';
                                trInvoicelist += '<td style="text-align:center;">' + formatJSONDate(data.aadata[i].ChargeBackDate) + '</td>';
                                //trInvoicelist += '<td style="text-align:center;">' + formatJSONDate(data.aadata[i].ChargebackDate) + '</td>';
                                //alert(data.aadata[i].ChargebackDate);
                                trInvoicelist += '<td style="text-align:right;">' + formatCurrency(parseFloat(data.aadata[i].ChargeBackAmount), true) + '</td>';
                                trInvoicelist += '<td style="text-align:center;"></td>';
                                trInvoicelist += '<td style="text-align:center;"></td>';
                                trInvoicelist += '<td style="text-align:center;"></td>';
                                trInvoicelist += '<td style="text-align:center;"></td>';
                                trInvoicelist += '<td style="text-align:center;"></td>';
                                trInvoicelist += '</tr>';
                                trInvoicelist += '<tr>';
                                trInvoicelist += '<td style="text-align:center;"></td>';
                                trInvoicelist += '<td style="text-align:center;"></td>';
                                trInvoicelist += '<td style="text-align:center;"></td>';
                                trInvoicelist += '<td style="text-align:center;"></td>';
                                trInvoicelist += '<td style="text-align:center;"></td>';

                                trInvoicelist += '<td style="text-align:center;">' + formatJSONDate(data.aadata[i].PaymentDate) + '</td>';
                                trInvoicelist += '<td style="text-align:right;">' + formatCurrency(parseFloat(data.aadata[i].PaymentAmount), true) + '</td>';
                                trInvoicelist += '<td style="text-align:right;">' + formatCurrency(parseFloat(data.aadata[i].NegativeDueAmount), true) + '</td>';
                                trInvoicelist += '<td style="text-align:center;">' + formatJSONDate(data.aadata[i].TARCBDate) + '</td>';
                                trInvoicelist += '<td style="text-align:right;">' + formatCurrency(parseFloat(data.aadata[i].ChargeBackPayAmount), true) + '</td>';
                                trInvoicelist += '</tr>';

                            }
                            else {

                                trInvoicelist += '<tr>';
                                trInvoicelist += '<td style="text-align:center;"></td>';
                                trInvoicelist += '<td style="text-align:center;"></td>';
                                trInvoicelist += '<td style="text-align:center;"></td>';
                                trInvoicelist += '<td style="text-align:center;"></td>';
                                trInvoicelist += '<td style="text-align:center;"></td>';
                                trInvoicelist += '<td style="text-align:center;">' + data.aadata[i].PaymentDate + '</td>';
                                //trInvoicelist += '<td style="text-align:center;">' + formatJSONDate(data.aadata[i].PaymentDate) + '</td>';
                                trInvoicelist += '<td style="text-align:right;">' + formatCurrency(parseFloat(data.aadata[i].PaymentAmount), true) + '</td>';
                                trInvoicelist += '<td style="text-align:right;">' + formatCurrency(parseFloat(data.aadata[i].NegativeDueAmount), true) + '</td>';

                                if (formatJSONDate(data.aadata[i].TARCBDate) != sec_TARDate) {

                                    //trInvoicelist += '<td style="text-align:center;">' + formatJSONDate(data.aadata[i].TARCBDate) + '</td>';
                                    trInvoicelist += '<td style="text-align:center;">' + data.aadata[i].TARCBDate + '</td>';
                                    trInvoicelist += '<td style="text-align:right;">' + formatCurrency(parseFloat(data.aadata[i].ChargeBackPayAmount), true) + '</td>';
                                } else {
                                    trInvoicelist += '<td style="text-align:center;"></td>';
                                    trInvoicelist += '<td style="text-align:center;"></td>';
                                }


                                trInvoicelist += '</tr>';
                            }


                            trInvoicelist += '</tr>';
                            if (sec_frid == frId) {
                                if (invNo == sec_invNo) {
                                    ChargeBackAmount = data.aadata[i].ChargeBackAmount;
                                    ChargeBackPayAmount = data.aadata[i].ChargeBackPayAmount;
                                } else {
                                    ChargeBackAmount += data.aadata[i].ChargeBackAmount;
                                    ChargeBackPayAmount += data.aadata[i].ChargeBackPayAmount;
                                }

                                PaymentAmount += data.aadata[i].PaymentAmount;
                                NegativeDueAmount += data.aadata[i].NegativeDueAmount;
                            }

                            sec_invNo = data.aadata[i].InvoiceNo;
                            sec_TARDate = formatJSONDate(data.aadata[i].TARCBDate)

                            if (i == lengthdata - 1) {
                                trInvoicelist += '<tr relcusn="' + data.aadata[i].FranchiseeNo + ' ' + data.aadata[i].FranchiseeName + '" class="clstr">';
                                trInvoicelist += '<td style="text-align:center;"colspan="3"></td>';
                                trInvoicelist += '<td style="text-align:center;background: #bbf7f7;">Total</td>';
                                trInvoicelist += '<td style="text-align:right;background: #bbf7f7;">' + formatCurrency(parseFloat(ChargeBackAmount)) + '</td>';
                                trInvoicelist += '<td style="text-align:center;background: #bbf7f7;"></td>';

                                trInvoicelist += '<td style="text-align:right;background: #bbf7f7;">' + formatCurrency(parseFloat(PaymentAmount)) + '</td>';
                                trInvoicelist += '<td style="text-align:right;background: #bbf7f7;">' + formatCurrency(parseFloat(NegativeDueAmount)) + '</td>';
                                trInvoicelist += '<td style="text-align:center;background: #bbf7f7;"></td>';
                                trInvoicelist += '<td style="text-align:right;background: #bbf7f7;">' + formatCurrency(parseFloat(ChargeBackPayAmount)) + '</td></tr>';
                            }


                            $('#tableTurnAround tbody').append(trInvoicelist);
                        }

                    }

                    $.unblockUI();
                },
                error: function () {
                    $.unblockUI();
                    alert("Content load failed");
                }
            });

        }



        function formatJSONDate(jsonDate) {
            if (jsonDate != null) {
                //debugger;
                //var dateString = jsonDate.substr(6);
                var dtstr = jsonDate.substr(6);
                var dateString = dtstr.substring(0, dtstr.length - 2);
                var currentTime = new Date(parseInt(dateString)).toUTCString();
                var date = moment(currentTime).format("MM/DD/YYYY")
                return date;
            }
            return null;
        }



        function setPaging() {
            var z = $("#pageSize").val();
            var table = $("#tableTurnAround").DataTable();
            if (z > 0) {
                table.page.len(z).draw();
            }
            else if (z == -1) {
                table.page.len(table.rows().count()).draw();
            }
            else {
                table.page.page.len(25).draw();
            }
        }

        var date = new Date(), y = date.getFullYear(), m = date.getMonth();
        var firstDay;
        var lastDay;
        Date.prototype.getWeek = function (start) {
            //Calcing the starting point
            start = start || 0;
            var today = new Date(this.setHours(0, 0, 0, 0));
            var day = today.getDay() - start;
            var date = today.getDate() - day;

            // Grabbing Start/End Dates
            var StartDate = new Date(today.setDate(date));
            var EndDate = new Date(today.setDate(date + 6));
            return [StartDate, EndDate];
        }

        $('#txtStartDate').change(function () {
            $('#spnStartDate').html($(this).val());
            if ($('#txtStartDate').val() != '' && $('#txtEndtDate').val() != '')
                refreshTable();
        });
        $('#txtEndtDate').change(function () {
            $('#spnEndtDate').html($(this).val());
            if ($('#txtStartDate').val() != '' && $('#txtEndtDate').val() != '')
                refreshTable();
        });


        $('#monthlist').change(function () {
            $('#spnStartDate').html('');
            if ($('#monthlist').val() != '' && $('#yearlist').val() != '')
                refreshTable();
        });

        $('#yearlist').change(function () {
            $('#spnEndtDate').html('');
            if ($('#monthlist').val() != '' && $('#yearlist').val() != '')
                refreshTable();
        });

        $('#select_timeduration').change(function () {
            //alert($(this).val());
            $('#spnStartDate').html('');
            $('#spnEndtDate').html('');
            $('#divspandate').show();
            $('#divSD').hide();
            $('#divED').hide();
            $('#monthlist').val('');
            $('#yearlist').val('');
            switch (parseInt($(this).val())) {
                case 1:
                    firstDay = moment().startOf('isoWeek').toString();
                    lastDay = moment().endOf('isoWeek').toString();
                    break;
                case 2:
                    //code block
                    firstDay = moment().startOf('isoWeek').toString();
                    lastDay = new Date().toString();
                    break;
                case 3:
                    firstDay = moment().subtract(0, 'month').startOf('month').toString();
                    lastDay = moment().subtract(0, 'month').endOf('month').toString();
                    break;
                case 4:
                    //code block
                    firstDay = moment().subtract(0, 'month').startOf('month').toString();
                    lastDay = new Date().toString();
                    break;
                case 5:
                    //code block
                    firstDay = moment().startOf('quarter').toString();
                    lastDay = moment().endOf('quarter').toString();
                    break;
                case 6:
                    //code block
                    firstDay = moment().startOf('quarter').toString();
                    lastDay = new Date().toString();
                    break;
                case 7:
                    //code block
                    firstDay = moment().startOf('year').toString();;
                    lastDay = moment().endOf('year').toString();
                    break;
                case 8:
                    //code block
                    firstDay = moment().startOf('year').toString();
                    lastDay = new Date().toString();
                    break;
                case 9:
                    //code block
                    firstDay = moment().toString();
                    lastDay = moment().toString();
                    break;
                case 10:
                    //code block
                    firstDay = moment().add(-1, 'days').toString();
                    lastDay = moment().add(-1, 'days').toString();
                    break;
                case 11:
                    //code block
                    firstDay = moment().subtract(1, 'week').startOf('week').toString();
                    lastDay = moment().subtract(1, 'week').endOf('week').toString();
                    break;
                case 12:
                    //code block
                    firstDay = moment().subtract(1, 'month').startOf('month').toString();
                    lastDay = moment().subtract(1, 'month').endOf('month').toString();
                    break;
                case 13:
                    //code block
                    firstDay = moment().subtract(1, 'quarter').startOf('quarter').toString();
                    lastDay = moment().subtract(1, 'quarter').endOf('quarter').toString();
                    break;
                case 14:
                    //code block
                    firstDay = moment().subtract(1, 'year').startOf('year').toString();
                    lastDay = moment().subtract(1, 'year').endOf('year').toString();
                    break;
                case 15:
                    //code block
                    $('#divspandate').hide();
                    $('#divSD').show();
                    $('#divED').show();
                    $('#txtStartDate').val('');
                    $('#txtEndtDate').val('');
                    break;
                case 16:
                    //code block
                    $('#divspandate').hide();
                    $('#divSD').hide();
                    $('#divED').hide();
                    $('#divmonth').show();
                    $('#divyear').show();
                    break;
                default:
                    //code block
            }
            $('#spnStartDate').html(moment(firstDay).format('L'));
            $('#spnEndtDate').html(moment(lastDay).format('L'));

            if (parseInt($(this).val()) != 15)
                refreshTable();
        });

        function formatJSONDateUtc(jsonDate) {
            if (jsonDate != null) {
                var dtstr = jsonDate.substr(6);
                var dateString = dtstr.substring(0, dtstr.length - 2);
                var currentTime = new Date(parseInt(dateString)).toUTCString();
                var date = moment.utc(currentTime).format("MM/DD/YYYY");
                return date;
            }
            return null;
        }

        function formatCurrency(total) {
            var neg = false;
            if (total < 0) {
                neg = true;
                total = Math.abs(total);
            }
            return (neg ? "-$" : '$') + parseFloat(total, 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString();
        }

        function CleanformatCurrency(total) {

            return parseFloat(total.toString().replace('$', '').replace(',', ''));
        }
        function showInvoiceDetail(id) {
            var sURL = '@Url.Action("InvoiceDetail", "AccountReceivable", new { area = "Portal" })?Id=' + id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#form_invoicedetail').html(data);
                    $("#modal_invoicedetail").modal({ backdrop: 'static' });
                },
                error: function () {
                    alert("Content load failed.");
                }
            });
        }
        function btnInvoicePopupClose() {
            $("#modal_invoicedetail").modal('hide');
        }
    </script>
}



