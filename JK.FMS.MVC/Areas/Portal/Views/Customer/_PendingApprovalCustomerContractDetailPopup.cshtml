@model JKViewModels.Customer.FullCustomerViewModel

@{
    if (Model.Contract == null)
    {
        Model.Contract = new JKViewModels.Customer.ContractViewModel();
    }
 }



<div class="custom-form portlet light" id="">
    <div class="portlet-body">
        @using (Html.BeginForm("SavePendingApprovalCustomerContractDetails", "Customer", FormMethod.Post, new { @id = "SaveCustomerContractform_wizard_1", @role = "form", @class = "form form-horizontal" }))
            {
            @Html.HiddenFor(one => one.ContractDetail.ContractId)
            @Html.HiddenFor(one => one.Contract.ContractId)
            @Html.HiddenFor(one => one.ContractDetail.ContractDetailId)
            @Html.HiddenFor(one => one.ButtonType)
            @Html.HiddenFor(one => one.CustomerViewModel.CustomerId)
            @Html.HiddenFor(one => one.CustomerViewModel.CreatedBy)
            @Html.HiddenFor(one => one.CustomerViewModel.CreatedDate)
            @Html.HiddenFor(one => one.CustomerViewModel.CustomerNo)
            @Html.HiddenFor(one => one.MainContact.ContactId)
            @Html.HiddenFor(one => one.MainContact.IsActive)
            @Html.HiddenFor(one => one.MainContact.CreatedBy)
            @Html.HiddenFor(one => one.MainContact.CreatedDate)
            @Html.HiddenFor(one => one.MainAddress.AddressId)
            @Html.HiddenFor(one => one.MainAddress.IsActive)
            @Html.HiddenFor(one => one.MainAddress.CreatedBy)
            @Html.HiddenFor(one => one.MainAddress.CreatedDate)
            @Html.HiddenFor(one => one.MainEmail.EmailId)
            @Html.HiddenFor(one => one.MainEmail.IsActive)
            @Html.HiddenFor(one => one.MainEmail.CreatedBy)
            @Html.HiddenFor(one => one.MainEmail.CreatedDate)
            @Html.HiddenFor(one => one.MainPhone.PhoneId)
            @Html.HiddenFor(one => one.MainPhone.IsActive)
            @Html.HiddenFor(one => one.MainPhone.CreatedBy)
            @Html.HiddenFor(one => one.MainPhone.CreatedDate)

            @Html.HiddenFor(one => one.BillingContact.ContactId)
            @Html.HiddenFor(one => one.BillingContact.IsActive)
            @Html.HiddenFor(one => one.BillingContact.CreatedBy)
            @Html.HiddenFor(one => one.BillingContact.CreatedDate)
            @Html.HiddenFor(one => one.BillingAddress.AddressId)
            @Html.HiddenFor(one => one.BillingAddress.IsActive)
            @Html.HiddenFor(one => one.BillingAddress.CreatedBy)
            @Html.HiddenFor(one => one.BillingAddress.CreatedDate)

            @Html.HiddenFor(one => one.ContactInformation.ContactId)
            @Html.HiddenFor(one => one.ContactInformation.IsActive)
            @Html.HiddenFor(one => one.ContactInformation.CreatedDate)

            @Html.HiddenFor(one => one.ContactInformationAddress.AddressId)
            @Html.HiddenFor(one => one.ContactInformationAddress.CreatedBy)
            @Html.HiddenFor(one => one.ContactInformationAddress.CreatedDate)

            @Html.HiddenFor(one => one.ContactInformationEmail.EmailId)
            @Html.HiddenFor(one => one.ContactInformationEmail.IsActive)
            @Html.HiddenFor(one => one.ContactInformationEmail.CreatedBy)
            @Html.HiddenFor(one => one.ContactInformationEmail.CreatedDate)
            @Html.HiddenFor(one => one.ContactInformationPhone.PhoneId)
            @Html.HiddenFor(one => one.ContactInformationPhone.IsActive)
            @Html.HiddenFor(one => one.ContactInformationPhone.CreatedBy)
            @Html.HiddenFor(one => one.ContactInformationPhone.CreatedDate)
            @Html.HiddenFor(one => one.BillingInformation.IsActive)
            @Html.HiddenFor(one => one.BillingInformation.CreatedBy)
            @Html.HiddenFor(one => one.BillingInformation.CreatedDate)
            @Html.HiddenFor(one => one.BillingInformationAddress.AddressId)
            @Html.HiddenFor(one => one.BillingInformationAddress.IsActive)
            @Html.HiddenFor(one => one.BillingInformationAddress.CreatedBy)
            @Html.HiddenFor(one => one.BillingInformationAddress.CreatedDate)
            @Html.HiddenFor(one => one.BillingInformationEmail.EmailId)
            @Html.HiddenFor(one => one.BillingInformationEmail.IsActive)
            @Html.HiddenFor(one => one.BillingInformationEmail.CreatedBy)
            @Html.HiddenFor(one => one.BillingInformationEmail.CreatedDate)
            @Html.HiddenFor(one => one.BillingInformationPhone.PhoneId)
            @Html.HiddenFor(one => one.BillingInformationPhone.IsActive)
            @Html.HiddenFor(one => one.BillingInformationPhone.CreatedBy)
            @Html.HiddenFor(one => one.BillingInformationPhone.CreatedDate)


            @Html.HiddenFor(one => one.BillSetting.CustomerId)
            @Html.HiddenFor(one => one.BillSetting.BillSettingsId)

            @Html.HiddenFor(one => one.Contract.CustomerId)
            @Html.HiddenFor(one => one.Contract.ContractId)


            <button type="button" class="close" data-dismiss="modal" aria-hidden="true" style="margin-top: 12px !important;margin-right: 12px !important;"></button>
            <h4 class="blocktop" style="margin-top:-23px">Customer Contract</h4>
                <div class="row">
                    <div class="col-md-12">
                        <label class="control-label col-md-2" style="font-weight:600;">
                            Customer No.
                        </label>
                        <div class="col-md-4">
                            <label class="control-label col-md-4" style="width:auto;">
                                @Html.DisplayFor(one => one.CustomerViewModel.CustomerNo)
                            </label>
                        </div>
                        <div class="col-md-1 col-md-offset-1">
                            <label class="control-label" style="font-weight:600;padding-left:15px;">
                                Address
                            </label>
                        </div>
                        <div class="col-md-4">
                            <label class="control-label" style="width:auto;">
                                @Html.Raw(ViewBag.Address)
                            </label>
                        </div>
                    </div>
                </div>
                    <div class="row">
                        <div class="col-md-12">
                            <label class="control-label col-md-2" style="font-weight:600;">
                                Customer Name
                            </label>
                            <div class="col-md-4">
                                <label class="control-label col-md-4" style="width:auto;">
                                    @Html.DisplayFor(one => one.CustomerViewModel.Name)
                                </label>
                            </div>
                            <div class="col-md-1 col-md-offset-1">
                                <label class="control-label" style="font-weight:600;">
                                </label>
                            </div>
                            <div class="col-md-4">
                                <label class="control-label" style="width:auto;">
                                    @Html.Raw(ViewBag.Address2)
                                </label>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-12">
                        <hr style="margin-top: 2px;margin-bottom: 1px;" />
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Agreement Type<span class="required"> * </span>
                        </label>
                        <div class="col-md-3">
                            @Html.DropDownList("AgreementTypeList", null, "Select", new { @class = "form-control input-sm", @readonly = "readonly", @id = "AgreementTypeList", required = "required" })
                            <input type="hidden" id="hdnAgreementTypeCPI" value="@((Convert.ToBoolean(ViewBag.AgreementTypeCPI)==true ? 1:0))" />
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            PO Number
                        </label>
                        <div class="col-md-3">
                            @Html.TextBoxFor(one => one.Contract.PurchaseOrderNo, new { @class = "form-control input-sm", id = "Contract_PurchaseOrderNo" })
                            @*@Html.ValidationMessageFor(one => one.Contract.PurchaseOrderNo, "", new { @class = "text-danger" })*@
                        </div>
                    </div>
                        <div class="form-group"  style="display:none;">
                            <label class="control-label col-md-3">
                                Agreement Used
                            </label>
                            <div class="col-md-2" style="padding-top: 7px;">
                                <label class="mt-checkbox">
                                    @Html.CheckBoxFor(one => one.Contract.Qualified, new { @class = "i-checks", @checked = "true", id = "Contract_Qualified" }) Qualified
                                    <span></span>
                                </label>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">
                                Account Type
                            </label>
                            <div class="col-md-3">
                                @Html.DropDownList("AccountTypeList", null, new { @class = "form-control input-sm", required = "required", @id = "AccountTypeList" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">
                                Contract Type
                            </label>
                            <div class="col-md-3">
                                @Html.DropDownList("ContractTypeList", null, new { @class = "form-control input-sm", @readonly = "readonly", @id = "ContractTypeList", required = "required" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-3">
                                Sign Date
                            </label>
                            <div class="col-md-3">
                                <div class="input-group date" data-date-format="mm/dd/yyyy">
                                    @Html.TextBoxFor(one => one.Contract.SignDate, new { @class = "form-control input-sm date date-picker", id = "Contract_SignDate" })
                                    <span class="input-group-btn cal-btn">
                                        <button class="btn default cal-btn" type="button">
                                            <i class="fa fa-calendar"></i>
                                        </button>
                                    </span>
                                </div>
                            </div>

                            <label class="control-label col-md-2">
                                Start Date
                            </label>
                            <div class="col-md-3">
                                <div class="input-group date" data-date-format="mm/dd/yyyy">
                                    @Html.TextBoxFor(one => one.Contract.StartDate, new { @class = "form-control input-sm date date-picker", id = "Contract_StartDate" })
                                    <span class="input-group-btn cal-btn">
                                        <button class="btn default cal-btn" type="button">
                                            <i class="fa fa-calendar"></i>
                                        </button>
                                    </span>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">
                                Term Month's
                            </label>
                            <div class="col-md-2">
                                @*@Html.TextBoxFor(one => one.Contract.ContractTermListId, new { @class = "form-control input-sm", id = "Contract_ContractTermListId", style = "width: 41px;float:left;" })<span style="float:left;padding: 7px 4px;">Year's</span>*@
                                @Html.TextBoxFor(one => one.Contract.ContractTermMonth, new { @class = "form-control input-sm", id = "Contract_ContractTermMonth", style = "width: 35px;float:left;",maxlength = "3" })<span style="float:left;padding:7px 4px;"></span>
                            </div>

                            <label class="control-label col-md-3">
                                Expiration Date
                            </label>
                            <div class="col-md-2">
                                <div class="input-group">
                                    @Html.TextBoxFor(one => one.Contract.ExpirationDate, new { @class = "form-control input-sm", id = "Contract_ExpirationDate", @readonly = "readonly" })
                                    @*<span class="input-group-btn cal-btn">
                                            <button class="btn default cal-btn" type="button">
                                                <i class="fa fa-calendar"></i>
                                            </button>
                                        </span>*@
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">
                                Amount
                            </label>
                            <div class="col-md-2">
                                @Html.TextBoxFor(one => one.Contract.Amount, new { @class = "form-control input-sm", id = "Contract_Amount", style = "text-align:right;" })
                            </div>
                            <input type="hidden" id="hdnAmount" value="@(Model.Contract.Amount.HasValue ?Model.Contract.Amount.Value : 0)" />
                            <span id="errmsg" style="color:red;display:none;">Contract amount not should be less then to contract detail total amount!</span>

                            @*<label class="control-label col-md-3">
                                    Amount Subject To Fee
                                </label>
                                <div class="col-md-2">
                                    @Html.TextBoxFor(one => one.Contract.AmountSubjectToFee, new { @class = "form-control ", id = "Contract_AmountSubjectToFee", style = "text-align:right;" })
                                </div>*@
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">
                                Description
                            </label>
                            <div class="col-md-7">
                                @Html.TextAreaFor(one => one.Contract.ContractDescription, new { @class = "form-control input-sm", @cols = "35", @rows = "3", id = "Contract_ContractDescription" })
                            </div>
                        </div>
                        @*<div class="form-group">
                                <label class="control-label col-md-3">
                                    Contract Status
                                </label>
                                <div class="col-md-1">
                                    <select class="form-control input-sm" style="padding: 4px 8px;"><option>Active</option><option>InActive</option></select>
                                </div>
                                <label class="control-label col-md-1">
                                    Status Date
                                </label>
                                <div class="col-md-2">
                                    <div class="input-group date" data-date-format="mm/dd/yyyy">
                                        @Html.TextBoxFor(one => one.Contract.StatusDate, new { @class = "form-control input-sm date date-picker", id = "Contract_StatusDate" })
                                        <span class="input-group-btn cal-btn">
                                            <button class="btn default cal-btn" type="button">
                                                <i class="fa fa-calendar"></i>
                                            </button>
                                        </span>
                                    </div>
                                </div>
                                <label class="control-label col-md-1">
                                    Resume Date
                                </label>
                                <div class="col-md-2">
                                    <div class="input-group date" data-date-format="mm/dd/yyyy">
                                        @Html.TextBoxFor(one => one.Contract.ResumeDate, new { @class = "form-control input-sm date date-picker", id = "Contract_ResumeDate" })
                                        <span class="input-group-btn cal-btn">
                                            <button class="btn default cal-btn" type="button">
                                                <i class="fa fa-calendar"></i>
                                            </button>
                                        </span>
                                    </div>
                                </div>

                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-3">
                                    Status Notes
                                </label>
                                <div class="col-md-7">
                                    @Html.TextAreaFor(one => one.Contract.StatusNotes, new { @class = "form-control col-md-3 input-sm", @cols = "35", @rows = "3", id = "Contract_StatusNotes" })
                                </div>
                            </div>
                        *@


                        <div class="form-actions">
                            <button type="button" class="btn btn-primary button-next pull-right" id="btnContractDetailCancel" style="margin-right: 30px;" data-dismiss="modal">
                                Cancel
                                <i class="fa fa-angle-right"></i>
                            </button>
                            <button type="button" class="btn btn-primary  pull-right" id="btnContractDetailSave" style="margin-right: 22px;">
                                Save
                                <i class="fa fa-check"></i>
                            </button>                            
                        </div>
                        <h4 class="block">Contract Detail</h4>

                        <div id="tblContractDescriptionData">
                            @if (Model != null && Model._ContractDetail != null)
                            {
                                @Html.Partial("~/Areas/Portal/Views/Customer/_ContractDetailDescription.cshtml", Model._ContractDetail)
                            }

                        </div>


                        <div class="form-actions">
                            <div class="col-md-12" style="padding-right: 28px;">

                                <div class="col-md-12" style="padding-right: 28px;">
                                    <button type="button" class="btn btn-primary  pull-right" id="btnSubmit" style="margin-left: 10px;display:none;">
                                        Submit
                                        <i class="fa fa-check"></i>
                                    </button>&nbsp;&nbsp;&nbsp;&nbsp;
                                    @*<button type="button" class="btn btn-primary button-next  pull-right" id="btnBack" style="margin-left: 10px;display:none;">
                                            Back
                                            <i class="fa fa-angle-right"></i>
                                        </button>*@
                                </div>


                            </div>
                        </div>
        }
        <div class="modal fade custom-model custom-form-design" id="modalDataCusContractPopup" tabindex="-1" role="basic" aria-hidden="true" style="display: none;"></div>
    </div>
</div>

<script type="text/javascript">
    $("#Contract_ContractTermMonth").keypress(function (e) {
        if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
            return false;
        }
    });
    $("#ContractAddress_PostalCode").keypress(function (e) {
        if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
            return false;
        }
    });
    $(document).ready(function () {
        $('.date-picker').datepicker({ autoclose: true, dateFormat: 'mm/dd/yy' });
        $('.date-picker').attr("placeholder", "mm/dd/yyyy");
        var dateFormat = "mm/dd/yyyy",
              from = $("#Contract_SignDate")
                .datepicker({
                    changeMonth: true,
                    numberOfMonths: 1
                })
                .on("change", function () {
                    to.datepicker("option", "minDate", getDate(this));
                }),
              to = $("#Contract_StartDate").datepicker({
                  changeMonth: true,
                  numberOfMonths: 1
              })
              .on("change", function () {
                  from.datepicker("option", "maxDate", getDate(this));
              });
        function getDate(element) {
            var date;
            try {
                date = $.datepicker.parseDate(dateFormat, element.value);
            } catch (error) {
                date = null;
            }
            return date;
        }

        if ($('#Contract_ContractId').val() != null && $('#Contract_ContractId').val() != "") {
            loadOwners($('#Contract_ContractId').val());
        }
        $("#AgreementTypeList").change(function (e) {
            var AgreementTypeListId = $("#AgreementTypeList").val();
            if (AgreementTypeListId != null && AgreementTypeListId != "") {
                var url = "@Url.Action("GetAgreementTypeDetailWithId", "Customer", new { area = "Portal" })" + "?Id=" + AgreementTypeListId;
                $.get(url, function (data) {
                    $('#hdnAgreementTypeCPI').val(data);
                })
            }
        })
        $('#btnContractDetailSave').click(function () {
             
            var isvalid = true;

            //if ($('#Contract_PurchaseOrderNo').val() == '') { $('#Contract_PurchaseOrderNo').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#Contract_PurchaseOrderNo').css('border-color', ''); }
            if ($('#AccountTypeList').val() == '') { $('#AccountTypeList').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#AccountTypeList').css('border-color', ''); }

            if ($('#AgreementTypeList').val() == '') { $('#AgreementTypeList').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#AgreementTypeList').css('border-color', ''); }

            if ($('#Contract_SignDate').val() == '') { $('#Contract_SignDate').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#Contract_SignDate').css('border-color', ''); }
            if ($('#Contract_StartDate').val() == '') { $('#Contract_StartDate').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#Contract_StartDate').css('border-color', ''); }

            //if ($('#Contract_ContractTermListId').val() == '') { $('#Contract_ContractTermListId').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#Contract_ContractTermListId').css('border-color', ''); }
            if ($('#Contract_ContractTermMonth').val() == '') { $('#Contract_ContractTermMonth').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#Contract_ContractTermMonth').css('border-color', ''); }
            if ($('#Contract_ExpirationDate').val() == '') { $('#Contract_ExpirationDate').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#Contract_ExpirationDate').css('border-color', ''); }

            if ($('#Contract_Amount').val() == '') { $('#Contract_Amount').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#Contract_Amount').css('border-color', ''); }
            if ($('#Contract_AmountSubjectToFee').val() == '') { $('#Contract_AmountSubjectToFee').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#Contract_AmountSubjectToFee').css('border-color', ''); }

            if ($('#Contract_StatusDate').val() == '') { $('#Contract_StatusDate').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#Contract_StatusDate').css('border-color', ''); }
            if ($('#Contract_ResumeDate').val() == '') { $('#Contract_ResumeDate').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#Contract_ResumeDate').css('border-color', ''); }
            if ($('#Contract_AmountSubjectToFee').val() == '') { $('#Contract_AmountSubjectToFee').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#Contract_AmountSubjectToFee').css('border-color', ''); }

            if (parseFloat($("#Contract_Amount").val()).toFixed(2) < parseFloat($("#hdnTotAmount").val()).toFixed(2)) {
                $('#Contract_Amount').css('border-color', 'red');
                $('.clsamt').css('border-color', 'red');
                $('.clsamt').css('border-left', '2px solid red');
                $('.clsamt').css('border-right', '2px solid red');
                $("#errmsg").show();
                isvalid = false;
            }
            else {

                $('#Contract_Amount').css('border-color', '');
                $('.clsamt').css('border-color', '');
                $("#errmsg").hide();
            }

            if (isvalid == true) {
                // $("#SaveCustomerContractform_wizard_1").submit();

                $.ajax({
                    url: '@Url.Action("SavePendingApprovalCustomerContractDetails", "Customer",new { area = "Portal" })',
                    type: "POST",
                    data: $('#SaveCustomerContractform_wizard_1').serialize(),
                    success: function (data) {
                         
                        $('#modal_CustomerContractPopup').modal('hide');                        
                    },
                    error: function () { }
                });
            }
        });


    });


    $(function () {
        // AddContractDetailDescription = function (ContractId, ContractDetailId) {
        window.AddContractDetailDescription = function (ContractDetailId) {
            $.blockUI({
                //baseZ: 99999,
                //message: '<center><img height: src="/Images/loading_icon.gif" /><h3> <b>Processing....</br> Please wait! and do not refresh page.</b></h3></center>',
                //css: { backgroundColor: 'rgb{0,0,0}', border: '0', color: '#fff', "z-index": 99999 }
            });
            var ContractId = 0;
            if ($('#ContractDetail_ContractId').val() != "") {
                ContractId = $('#ContractDetail_ContractId').val();
            }
            if ($('#Contract_ContractId').val() != 0) {
                ContractId = $('#Contract_ContractId').val();
            }
            else {
                swal(
                    'Oops...',
                    'Save Customer Contract First, Before add Contract Detail!',
                    'warning'
                )
            }

            if (ContractId > 0 && ContractDetailId > 0) {
                var url = '/Portal/Customer/AddCustomerContractPopupDetail/?ContractId=' + ContractId + '&ContractDetailId=' + ContractDetailId

                $.get(url, function (data) {
                    $('#modalDataCusContractPopup').html(data);
                    $('#modalDataCusContractPopup').modal();


                })
            }
            else if (ContractId > 0) {
                var url = '/Portal/Customer/AddCustomerContractPopupDetail/?ContractId=' + ContractId + '&ContractDetailId=' + ContractDetailId
                $.get(url, function (data) {
                    $('#modalDataCusContractPopup').html(data);
                    $('#modalDataCusContractPopup').modal();
                })
                //Reset();
            }
            $.unblockUI();
        }

    });
    $(document).ready(function () {
        
    });

    function RemoveContractDetail(ContractDetailId, ContractId) {
        $.blockUI({
            baseZ: 99999,
            message: '<center><img height: src="/Images/loading_icon.gif" /><h3> <b>Processing....</br> Please wait! and do not refresh page.</b></h3></center>',
            css: { backgroundColor: 'rgb{0,0,0}', border: '0', color: '#fff', "z-index": 99999 }
        });
        $.ajax({
            type: "post",
            url: '@Url.Action("RemoveContractDetail", "Customer")',
            ajaxasync: true,
            data: { ContractDetailId: ContractDetailId, ContarctId: ContractId },
            success: function (response) {
                loadOwners(response.id);

                $.unblockUI();
            },
            error: function (data) {
                $.unblockUI();
            }
        })
        $.unblockUI();
    }
    function loadOwners(id) {
        $.blockUI({
            baseZ: 99999,
            message: '<center><img height: src="/Images/loading_icon.gif" /><h3> <b>Processing....</br> Please wait! and do not refresh page.</b></h3></center>',
            css: { backgroundColor: 'rgb{0,0,0}', border: '0', color: '#fff', "z-index": 99999 }
        });

        $.ajax({
            type: "GET",
            url: '@Url.Action("GetContractDetail", "Customer", new { @area = "Portal" })?id=' + id,
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (response) {
                $('#tblContractDescriptionData').html(response);
                $.unblockUI();
            },
            error: function (xhr, textStatus, error) {
                if (typeof console == "object") {

                    $('#tblContractDescriptionData').html(xhr.responseText);
                    console.log(xhr.status + "," + xhr.responseText + "," + textStatus + "," + error);
                }
                $.unblockUI();
            }
        });

        $.unblockUI();
    }

    $("#Contract_ContractTermMonth").change(function () {

        var monthadd = $("#Contract_ContractTermMonth").val();
        var startdate = $("#Contract_StartDate").val();
        var contractstartdate = new Date(startdate);

        if (monthadd == "")
            monthadd = 0;

        contractstartdate.setMonth(contractstartdate.getMonth() + parseInt(monthadd));
        var c = (contractstartdate.getMonth() + 1)+ '/' + contractstartdate.getDate() + '/' + contractstartdate.getFullYear()
        $("#Contract_ExpirationDate").val(c);

    });
    $("#Contract_StartDate").change(function () {

        var monthadd = $("#Contract_ContractTermMonth").val();
        var startdate = $("#Contract_StartDate").val();
        var contractstartdate = new Date(startdate);

        if (monthadd == "")
            monthadd = 0;

        contractstartdate.setMonth(contractstartdate.getMonth() + parseInt(monthadd));
        var c = (contractstartdate.getMonth() + 1) + '/' + contractstartdate.getDate() + '/' + contractstartdate.getFullYear()
        $("#Contract_ExpirationDate").val(c);

    });



</script>
