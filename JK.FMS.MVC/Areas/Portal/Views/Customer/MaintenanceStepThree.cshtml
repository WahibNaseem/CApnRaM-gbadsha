@model JKViewModels.Customer.FullCustomerViewModel
@{
    ViewBag.Title = "MaintenanceStepThree";
    Layout = "~/Views/Shared/_Layout.cshtml";
    if (Model.Contract == null)
    {
        Model.Contract = new JKViewModels.Customer.ContractViewModel();
    }

}
@section styles{

    <style type="text/css">
        .close {
            background-image: url(/Content/admin/assets/global/img/stick_close.png) !important;
            height: 12px !important;
            width: 12px !important;
            margin-top: 0px !important;
        }
    </style>
}
<div class="col-md-12 page-custom-header"><h5>Franchise Maintenance</h5></div>

<div class="custom-form portlet light" id="">
    <div class="portlet-body">
        @using (Html.BeginForm("MaintenanceStepThree", "Customer", FormMethod.Post, new { @id = "form_wizard_1", @role = "form", @class = "form form-horizontal" }))
        {
            @Html.HiddenFor(one => one.ContractDetail.ContractId)
            @Html.HiddenFor(one => one.Contract.ContractId)
            @Html.HiddenFor(one => one.ContractDetail.ContractDetailId)
            @Html.HiddenFor(one => one.ButtonType)
            @Html.HiddenFor(one => one.CustomerViewModel.CustomerId)
            @Html.HiddenFor(one => one.CustomerViewModel.CreatedBy)
            @Html.HiddenFor(one => one.CustomerViewModel.CreatedDate)
            @Html.HiddenFor(one => one.CustomerViewModel.CustomerNo)
            @Html.HiddenFor(one => one.CustomerViewModel.StatusId)
            @Html.HiddenFor(one => one.CustomerViewModel.StatusListId)

            @Html.HiddenFor(one => one.MainContact.ContactId)
            @Html.HiddenFor(one => one.MainContact.IsActive)
            @Html.HiddenFor(one => one.MainContact.CreatedBy)
            @Html.HiddenFor(one => one.MainContact.CreatedDate)
            @Html.HiddenFor(one => one.MainAddress.AddressId)
            @Html.HiddenFor(one => one.MainAddress.IsActive)
            @Html.HiddenFor(one => one.MainAddress.CreatedBy)
            @Html.HiddenFor(one => one.MainAddress.CreatedDate)

            @Html.HiddenFor(one => one.MainAddress.Address1)
            @Html.HiddenFor(one => one.MainAddress.Address2)
            @Html.HiddenFor(one => one.MainAddress.City)
            @Html.HiddenFor(one => one.MainAddress.StateListId)
            @Html.HiddenFor(one => one.MainAddress.PostalCode)


            @Html.HiddenFor(one => one.MainEmail.EmailId)
            @Html.HiddenFor(one => one.MainEmail.IsActive)
            @Html.HiddenFor(one => one.MainEmail.CreatedBy)
            @Html.HiddenFor(one => one.MainEmail.CreatedDate)
            @Html.HiddenFor(one => one.MainPhone.PhoneId)
            @Html.HiddenFor(one => one.MainPhone.IsActive)
            @Html.HiddenFor(one => one.MainPhone.CreatedBy)
            @Html.HiddenFor(one => one.MainPhone.CreatedDate)

            @Html.HiddenFor(one => one.BillingContact.ContactId)
            @Html.HiddenFor(one => one.BillingContact.IsActive)
            @Html.HiddenFor(one => one.BillingContact.CreatedBy)
            @Html.HiddenFor(one => one.BillingContact.CreatedDate)
            @Html.HiddenFor(one => one.BillingAddress.AddressId)
            @Html.HiddenFor(one => one.BillingAddress.IsActive)
            @Html.HiddenFor(one => one.BillingAddress.CreatedBy)
            @Html.HiddenFor(one => one.BillingAddress.CreatedDate)

            @Html.HiddenFor(one => one.ContactInformation.ContactId)
            @Html.HiddenFor(one => one.ContactInformation.IsActive)
            @Html.HiddenFor(one => one.ContactInformation.CreatedDate)

            @Html.HiddenFor(one => one.ContactInformationAddress.AddressId)
            @Html.HiddenFor(one => one.ContactInformationAddress.CreatedBy)
            @Html.HiddenFor(one => one.ContactInformationAddress.CreatedDate)

            @Html.HiddenFor(one => one.ContactInformationEmail.EmailId)
            @Html.HiddenFor(one => one.ContactInformationEmail.IsActive)
            @Html.HiddenFor(one => one.ContactInformationEmail.CreatedBy)
            @Html.HiddenFor(one => one.ContactInformationEmail.CreatedDate)
            @Html.HiddenFor(one => one.ContactInformationPhone.PhoneId)
            @Html.HiddenFor(one => one.ContactInformationPhone.IsActive)
            @Html.HiddenFor(one => one.ContactInformationPhone.CreatedBy)
            @Html.HiddenFor(one => one.ContactInformationPhone.CreatedDate)
            @Html.HiddenFor(one => one.BillingInformation.IsActive)
            @Html.HiddenFor(one => one.BillingInformation.CreatedBy)
            @Html.HiddenFor(one => one.BillingInformation.CreatedDate)
            @Html.HiddenFor(one => one.BillingInformationAddress.AddressId)
            @Html.HiddenFor(one => one.BillingInformationAddress.IsActive)
            @Html.HiddenFor(one => one.BillingInformationAddress.CreatedBy)
            @Html.HiddenFor(one => one.BillingInformationAddress.CreatedDate)
            @Html.HiddenFor(one => one.BillingInformationEmail.EmailId)
            @Html.HiddenFor(one => one.BillingInformationEmail.IsActive)
            @Html.HiddenFor(one => one.BillingInformationEmail.CreatedBy)
            @Html.HiddenFor(one => one.BillingInformationEmail.CreatedDate)
            @Html.HiddenFor(one => one.BillingInformationPhone.PhoneId)
            @Html.HiddenFor(one => one.BillingInformationPhone.IsActive)
            @Html.HiddenFor(one => one.BillingInformationPhone.CreatedBy)
            @Html.HiddenFor(one => one.BillingInformationPhone.CreatedDate)


            @Html.HiddenFor(one => one.BillSetting.CustomerId)
            @Html.HiddenFor(one => one.BillSetting.BillSettingsId)

            @Html.HiddenFor(one => one.Contract.CustomerId)
            @Html.HiddenFor(one => one.Contract.ContractId)
            @Html.HiddenFor(one => one.Contract.StatusId)
            @Html.HiddenFor(one => one.Contract.StatusListId)

            @Html.HiddenFor(one => one.ContractAddress.AddressId)
            @Html.HiddenFor(one => one.ContractAddress.IsActive)
            @Html.HiddenFor(one => one.ContractAddress.CreatedBy)
            @Html.HiddenFor(one => one.ContractAddress.CreatedDate)

            <div class="tab-pane" id="tb_fr_page3">
                <h4 class="blocktop">Customer Contract</h4>
                <div class="row">
                    <div class="col-md-12">
                        <label class="control-label col-md-2" style="font-weight:600;">
                            Customer No.
                        </label>
                        <div class="col-md-4">
                            <label class="control-label col-md-4" style="width:auto;">
                                @Html.DisplayFor(one => one.CustomerViewModel.CustomerNo)
                            </label>
                        </div>
                        <div class="col-md-1 col-md-offset-1">
                            <label class="control-label" style="font-weight:600;padding-left:40px;">
                                Address
                            </label>
                        </div>
                        <div class="col-md-4">
                            <label class="control-label" style="width:auto;">
                                @Html.DisplayFor(one => one.CustomerViewModel.Name)
                            </label>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <label class="control-label col-md-2" style="font-weight:600;">
                            Customer Name
                        </label>
                        <div class="col-md-4">
                            <label class="control-label col-md-4" style="width:auto;">
                                @Html.DisplayFor(one => one.CustomerViewModel.Name)
                            </label>
                        </div>
                        <div class="col-md-1 col-md-offset-1">
                            <label class="control-label" style="font-weight:600;">
                            </label>
                        </div>
                        <div class="col-md-4">
                            <label class="control-label" style="width:auto;">
                                @Html.Raw(ViewBag.Address)
                            </label>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <label class="control-label col-md-2" style="font-weight:600;">

                        </label>
                        <div class="col-md-4">
                            <label class="control-label col-md-4" style="width:auto;">

                            </label>
                        </div>
                        <div class="col-md-1 col-md-offset-1">
                            <label class="control-label" style="font-weight:600;">
                            </label>
                        </div>
                        <div class="col-md-4">
                            <label class="control-label" style="width:auto;">
                                @Html.Raw(ViewBag.Address2)
                            </label>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <hr style="margin-top: 2px;margin-bottom: 1px;" />
                    </div>
                </div>
                @*@if (ViewBag.IsSave == 1)
                    {
                        <div class="row">
                            <div class="col-md-2">
                            </div>
                            <div class="col-md-6">
                                <div id="errmsg" style="color:green;" class="col-md-12"><label><b style="font-size:14px;">Contract Information save successfully.</b></label></div>
                            </div>
                        </div>
                    }*@
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            <b>Service Location</b>
                        </label>
                        <div class="col-md-7">
                            <label class="mt-checkbox">
                                <input type="checkbox" id="chkcopyaddresstoContract" class="editmain1">Same as Main Address
                                <span></span>
                            </label>
                        </div>
                        <div class="col-md-2">
                            @if (Model.Contract != null && Model.Contract.ContractId > 0)
                            {
                                <a class="btn btn-primary  pull-right editmain1" id="EditCancel" style="margin-right:18px;width:85px;" onclick="OnEditCancel()"> Cancel</a>
                                <a class="btn btn-primary  pull-right EditContract" id="EditContract" style="margin-right:18px;width:85px;" onclick="OnEditClick()"> Edit</a>
                            }
                            else
                            {
                                <a class="btn btn-primary  pull-right editmain1" id="EditCancel" style="margin-right:18px;width:85px;" onclick="OnEditCancel()"> Cancel</a>
                                <a class="btn btn-primary  pull-right EditContract" id="EditContract" style="margin-right:18px;width:85px;" disabled onclick="OnEditClick()"> Edit</a>
                            }
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            Address
                            <span class="required"> * </span>
                        </label>
                        <div class="col-md-3">
                            @Html.TextBoxFor(one => one.ContractAddress.Address1, new { @class = "form-control input-sm editmain1", placeholder = "Required", required = "required" })
                        </div>
                        <label class="control-label col-md-1">
                            Address2
                        </label>
                        <div class="col-md-3">
                            @Html.TextBoxFor(one => one.ContractAddress.Address2, new { @class = "form-control input-sm editmain1", placeholder = "" })
                        </div>
                    </div>
                </div>
                <div>
                    <div class="form-group">
                        <label class="control-label col-md-3">
                            City
                            <span class="required"> * </span>
                        </label>
                        <div class="col-md-2">
                            @Html.TextBoxFor(one => one.ContractAddress.City, new { @class = "form-control input-sm editmain1", required = "required", placeholder = "Required" })
                        </div>
                        <label class="control-label col-md-1">
                            State
                            <span class="required"> * </span>
                        </label>
                        <div class="col-md-2">
                            @Html.DropDownList("ContractStatesList", null, "Select", new { @class = "form-control input-sm editmain1", required = "required", @id = "ContractStatesList" })
                        </div>
                        <label class="control-label col-md-1">
                            Zip
                            <span class="required"> * </span>
                        </label>
                        <div class="col-md-2">
                            @Html.TextBoxFor(one => one.ContractAddress.PostalCode, new { @class = "form-control input-sm editmain1", required = "required", placeholder = "Required", maxlength = "5" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <hr style="margin-top: 2px;margin-bottom: 1px;" />
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-3">
                        Account Type<span class="required"> * </span>
                    </label>
                    <div class="col-md-3">
                        @Html.DropDownList("AccountTypeList", null, "Select", new { @class = "form-control input-sm editmain1", @id = "AccountTypeList", required = "required" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-3">
                        Contract Type
                    </label>
                    <div class="col-md-3">
                        @Html.DropDownList("ContractTypeList", null, new { @class = "form-control input-sm editmain1",  @id = "ContractTypeList", required = "required" })
                    </div>
                </div>

                <div id="divContractTypeHide">
                   
                            <div class="form-group">
                                <label class="control-label col-md-3">
                                    Agreement Type<span class="required"> * </span>
                                </label>
                                <div class="col-md-3">
                                    @Html.DropDownList("AgreementTypeList", null, "Select", new { @class = "form-control input-sm editmain1", @id = "AgreementTypeList", required = "required" })
                                    <input type="hidden" id="hdnAgreementTypeCPI" value="@((Convert.ToBoolean(ViewBag.AgreementTypeCPI) == true ? 1 : 0))" />
                                </div>
                                <label class="control-label col-md-1">
                                    Acct Exec:
                                </label>
                                <div class="col-md-3">
                                    @Html.DropDownListFor(x => x.Contract.SoldById, (IEnumerable<SelectListItem>)ViewBag.userList, new { @class = "form-control input-sm editmain1" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-3">
                                    PO Number
                                </label>
                                <div class="col-md-3">
                                    @Html.TextBoxFor(one => one.Contract.PurchaseOrderNo, new { @class = "form-control input-sm editmain1", id = "Contract_PurchaseOrderNo" })
                                </div>
                            </div>
                            <div class="form-group" style="display:none;">
                                <label class="control-label col-md-3">
                                    Agreement Used
                                </label>
                                <div class="col-md-2" style="padding-top: 7px;">
                                    <label class="mt-checkbox">
                                        @Html.CheckBoxFor(one => one.Contract.Qualified, new { @class = "i-checks editmain1", @checked = "false", id = "Contract_Qualified" }) Qualified
                                        <span></span>
                                    </label>
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-3">
                                    Sign Date<span class="required"> * </span>
                                </label>
                                <div class="col-md-2">
                                    <div class="input-group date" data-date-format="mm/dd/yyyy">
                                        @Html.TextBoxFor(one => one.Contract.SignDate, new { @class = "form-control input-sm date editmain1 RemovePeriodvalidation", id = "Contract_SignDate", required = "required" })
                                        <span class="input-group-btn cal-btn">
                                            <button class="btn default cal-btn" type="button">
                                                <i class="fa fa-calendar"></i>
                                            </button>
                                        </span>
                                    </div>
                                </div>

                                <label class="control-label col-md-3">
                                    Start Date<span class="required"> * </span>
                                </label>
                                <div class="col-md-2">
                                    <div class="input-group date" data-date-format="mm/dd/yyyy">
                                        @Html.TextBoxFor(one => one.Contract.StartDate, new { @class = "form-control input-sm date editmain1 RemovePeriodvalidation", id = "Contract_StartDate", required = "required" })
                                        <span class="input-group-btn cal-btn">
                                            <button class="btn default cal-btn" type="button">
                                                <i class="fa fa-calendar"></i>
                                            </button>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-3">
                                    Term Month's<span class="required"> * </span>
                                </label>
                                <div class="col-md-2">
                                    @*@Html.TextBoxFor(one => one.Contract.ContractTermListId, new { @class = "form-control input-sm", id = "Contract_ContractTermListId" ,style= "width: 41px;float:left;" })<span style="float:left;padding: 7px 4px;">Year's</span>*@
                                    @Html.TextBoxFor(one => one.Contract.ContractTermMonth, new { @class = "form-control input-sm editmain1", id = "Contract_ContractTermMonth", required = "required", style = "width: 43px;float:left;", maxlength = "3" })<span style="float:left;padding:7px 4px;"></span>
                                </div>

                                <label class="control-label col-md-3">
                                    Expiration Date<span class="required"> * </span>
                                </label>
                                <div class="col-md-2">
                                    <div class="input-group">
                                        @Html.TextBoxFor(one => one.Contract.ExpirationDate, new { @class = "form-control input-sm editmain1", id = "Contract_ExpirationDate", required = "required"})
                                        @*<span class="input-group-btn cal-btn">
                                                <button class="btn default cal-btn" type="button">
                                                    <i class="fa fa-calendar"></i>
                                                </button>
                                            </span>*@

                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-3">
                                    Amount<span class="required"> * </span>
                                </label>
                                <div class="col-md-2">
                                    @Html.TextBoxFor(one => one.Contract.Amount, new { @class = "form-control input-sm editmain1", id = "Contract_Amount", style = "text-align:right;", required = "required" })
                                </div>
                                <input type="hidden" id="hdnAmount" value="@(Model.Contract.Amount.HasValue ? Model.Contract.Amount.Value : 0)" />

                                @*<label class="control-label col-md-3">
                                        Amount Subject To Fee
                                    </label>
                                    <div class="col-md-2">
                                        @Html.TextBoxFor(one => one.Contract.AmountSubjectToFee, new { @class = "form-control input-sm", id = "Contract_AmountSubjectToFee", style = "text-align:right;" })
                                    </div>*@
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-3">
                                    Description
                                </label>
                                <div class="col-md-7">
                                    @Html.TextAreaFor(one => one.Contract.ContractDescription, new { @class = "form-control input-sm editmain1", @cols = "35", @rows = "3", id = "Contract_ContractDescription" })
                                </div>
                            </div>
                            <div class="form-group">
                                @*<label class="control-label col-md-3">
                                        Contract Status
                                    </label>
                                    <div class="col-md-1">
                                        <select class="form-control input-sm" style="padding: 4px 8px;"><option>Active</option><option>InActive</option></select>
                                    </div>*@
                                <label class="control-label col-md-1" style="display:none;">
                                    Status Date
                                </label>
                                <div class="col-md-2" style="display:none;">
                                    <div class="input-group date" data-date-format="mm/dd/yyyy">
                                        @Html.TextBoxFor(one => one.Contract.StatusDate, new { @class = "form-control input-sm date date-picker editmain1", id = "Contract_StatusDate" })
                                        <span class="input-group-btn cal-btn">
                                            <button class="btn default cal-btn" type="button">
                                                <i class="fa fa-calendar"></i>
                                            </button>
                                        </span>
                                    </div>
                                </div>
                                <label class="control-label col-md-1" style="display:none;">
                                    Resume Date
                                </label>
                                <div class="col-md-2" style="display:none;">
                                    <div class="input-group date" data-date-format="mm/dd/yyyy">
                                        @Html.TextBoxFor(one => one.Contract.ResumeDate, new { @class = "form-control input-sm date date-picker ", id = "Contract_ResumeDate" })
                                        <span class="input-group-btn cal-btn">
                                            <button class="btn default cal-btn" type="button">
                                                <i class="fa fa-calendar"></i>
                                            </button>
                                        </span>
                                    </div>
                                </div>

                            </div>
                            <div class="form-group" style="display:none;">
                                <label class="control-label col-md-3">
                                    Status Notes
                                </label>
                                <div class="col-md-7">
                                    @Html.TextAreaFor(one => one.Contract.StatusNotes, new { @class = "form-control col-md-3 input-sm ", @cols = "35", @rows = "3", id = "Contract_StatusNotes" })
                                </div>
                            </div>

                            <div class="form-actions">
                                @*<button type="submit" class="btn btn-primary  pull-right" id="btnContinue" style="margin-left: 10px;">
                                        Save & Continue
                                        <i class="fa fa-angle-right"></i>
                                    </button>*@
                                @if (Model.Contract != null && Model.Contract.ContractId > 0)
                                {
                                    <button type="button" class="btn btn-primary  pull-right col-md-1 editmain1" id="btnSave" style="margin-right: 10px;width:90px;">
                                        Save
                                        <i class="fa fa-check"></i>
                                    </button>
                                }
                                else
                                {
                                    <button type="button" class="btn btn-primary  pull-right col-md-1 editmain1" id="btnSave" style="margin-right: 10px;width:90px;">
                                        Save
                                        <i class="fa fa-check"></i>
                                    </button>
                                }
                            </div>
                            <h4 class="block">Contract Detail</h4>
                            <input type="hidden" id="hdncallfrom" name="hdncallfrom" value="-1" />
                            <div id="tblContractDescriptionData">
                                @if (Model != null && Model._ContractDetail != null)
                                {
                                    @Html.Partial("~/Areas/Portal/Views/Customer/_ContractDetailDescription.cshtml", Model._ContractDetail)
                                }

                            </div>
                        </div>
                    
                

            </div>
            <div class="form-actions">
                <div class="col-md-12">

                    <div class="col-md-12">
                        @*<button type="submit" class="btn btn-primary  pull-right" id="btnContinue" style="margin-left: 10px;">
                                Save & Continue
                                <i class="fa fa-check"></i>
                            </button>*@
                        @*&nbsp;&nbsp;&nbsp;&nbsp;
                            <button type="button" class="btn btn-primary button-next  pull-right" id="btnBack" style="margin-left: 10px;">
                                Back
                                <i class="fa fa-angle-right"></i>
                            </button>*@

                        <button type="submit" class="btn btn-primary  pull-right" id="btnContinue" style="margin-left: 10px;">
                            Save & Continue
                            <i class="fa fa-angle-right"></i>
                        </button>

                    </div>

                </div>
            </div>
            <div class="modal fade custom-model custom-form-design" id="modalData" tabindex="-1" role="basic" aria-hidden="true" style="display: none;"></div>
        }
    </div>
</div>


@section pageplugins{

    <script src="@Url.Content("~/Content/admin/assets/global/plugins/select2/js/select2.full.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/jquery-validation/js/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/jquery-validation/js/additional-methods.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/bootstrap-wizard/jquery.bootstrap.wizard.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/scripts/datatable.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/datatables/datatables.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/scripts/app.min.js")" type="text/javascript" )"></script>
    <script src="@Url.Content("~/Content/admin/assets/pages/scripts/table-datatables-managed.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/jquery-inputmask/jquery.inputmask.bundle.min.js")" type="text/javascript"></script>


}
@section scripts{

    <script>

        $("#Contract_ContractTermMonth").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                return false;
            }
        });

        $("#ContractAddress_PostalCode").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                return false;
            }
        });
        //else
        //          {
        //              $('#modalData').modal();
        //      $('#modalData').modal("show");
        //  }
        //       }

        //});
        var MaintenanceFormWizard = function () {
            return {
                //main function to initiate the module
                init: function () {
                    if (!jQuery().bootstrapWizard) {
                    }

                    function format(state) {
                        if (!state.id) return state.text; // optgroup
                        return "<img class='flag' src='../../assets/global/img/flags/" + state.id.toLowerCase() + ".png'/>&nbsp;&nbsp;" + state.text;
                    }


                    var form = $('#submit_form');
                    var error = $('.alert-danger', form);
                    var success = $('.alert-success', form);

                    form.validate({
                        doNotHideMessage: true, //this option enables to show the error/success messages on tab switch.
                        errorElement: 'span', //default input error message container
                        errorClass: 'help-block help-block-error', // default input error message class
                        focusInvalid: false, // do not focus the last invalid input
                        rules: {},
                        messages: { // custom messages for radio buttons and checkboxes
                            'payment[]': {
                                required: "Please select at least one option",
                                minlength: jQuery.validator.format("Please select at least one option")
                            }
                        },

                        errorPlacement: function (error, element) { // render error placement for each input type
                        },

                        invalidHandler: function (event, validator) { //display error alert on form submit
                            success.hide();
                            error.show();
                            App.scrollTo(error, -200);
                        },

                        highlight: function (element) { // hightlight error inputs
                            $(element)
                                .closest('.form-group').removeClass('has-success').addClass('has-error'); // set error class to the control group
                        },

                        unhighlight: function (element) { // revert the change done by hightlight
                            $(element)
                                .closest('.form-group').removeClass('has-error'); // set error class to the control group
                        },

                        success: function (label) {
                            if (label.attr("for") == "gender" || label.attr("for") == "payment[]") { // for checkboxes and radio buttons, no need to show OK icon
                                label
                                    .closest('.form-group').removeClass('has-error').addClass('has-success');
                                label.remove(); // remove error label here
                            } else { // display success icon for other inputs
                                label
                                    .addClass('valid') // mark the current input as valid and display OK icon
                                .closest('.form-group').removeClass('has-error').addClass('has-success'); // set success class to the control group
                            }
                        },

                        submitHandler: function (form) {
                            success.show();
                            error.hide();
                            form[0].submit();
                            //add here some ajax code to submit your form or just call form.submit() if you want to submit the form without ajax
                        }

                    });

                    $('#divachsubsection').hide();

                    function saveFranchiseeData(inputData) {
                       
                        var sURL = '@Url.Action("Maintenance", "Franchise", new { area = "Portal" })'
                        var dataString = new FormData(formData);
                        $.ajax({
                            type: "POST",
                            url: sURL,
                            data: $("form").serialize(),
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (data, status) {
                                alert(data);
                            },
                            error: function (e) {
                                alert(e);
                            }
                        });
                    }
                }
            };
        }();

        jQuery(document).ready(function () {
            if ($("#ContractTypeList").val() == 2)
            {
                $("#divContractTypeHide").hide();
            }
            else {
                $("#divContractTypeHide").show();
            }
            $("#ContractTypeList").change(function (e) {
                if (this.value == 2)
                    $("#divContractTypeHide").hide();
                else
                    $("#divContractTypeHide").show();
            });
            if(@ViewBag.IsSave == "1")
            {
                swal('congrats!', 'Contract Information save successfully.', 'info');
            }
            $(".input-group-btn").click(function () {
                $(this).prev().trigger("focus");
                $(this).prev().trigger("focus");
            });
            //$("#Contract_ExpirationDate").datepicker();
            MaintenanceFormWizard.init();
            //  MaintenanceFormWizardOwner.init();
            //$('.date-picker').datepicker({ autoclose: true ,dateFormat: 'mm/dd/yyyy'});
            //$('.date-picker').attr("placeholder","mm/dd/yyyy");
            //$('#Contract_StartDate').inputmask("mm/dd/yyyy", {});
            //$('#Contract_StartDate').inputmask("mm/dd/yyyy", {});
            ////$('#Contract_SignDate').inputmask("mm/dd/yyyy");
            //$('#Contract_StatusDate').inputmask("mm/dd/yyyy", {});
            //$('#Contract_ExpirationDate').inputmask("mm/dd/yyyy", {});
            //$('#Contract_ResumeDate').inputmask("mm/dd/yyyy", {});


            $("#btnSubmit").click(function (e) {
                var ContractId = $('#Contract_ContractId').val();
                if (ContractId == "")
                    window.location.href = '@Url.Content("~/Portal/Customer/SearchList/")';
                else
                    window.location.href = '@Url.Content("~/Portal/Customer/CustomerDetail/"+ViewBag.Id)';
            });

            if ($('#Contract_ContractId').val() != null && $('#Contract_ContractId').val() != "" && $('#Contract_ContractId').val() != 0)
            {
                $(".editmain1").attr("disabled", "disabled");
                $(".editmain1").attr("readonly", "readonly");
                loadOwners($('#Contract_ContractId').val());

                if($.trim($('#ContractAddress_Address1').val().toLowerCase()) == $.trim($('#MainAddress_Address1').val().toLowerCase()) &&
                    $.trim($('#ContractAddress_Address2').val().toLowerCase()) == $.trim($('#MainAddress_Address2').val().toLowerCase()) &&
                    $.trim($('#ContractAddress_City').val().toLowerCase()) == $.trim($('#MainAddress_City').val().toLowerCase()) &&
                    $.trim($('#ContractStatesList').val().toLowerCase()) == $.trim($('#MainAddress_StateListId').val().toLowerCase()) &&
                    $.trim($('#ContractAddress_PostalCode').val().toLowerCase()) == $.trim($('#MainAddress_PostalCode').val().toLowerCase()))
                {
                    $("#chkcopyaddresstoContract").attr("checked",true);

                }
            }
            else
            {
                $("#EditCancel").hide();
                $("#EditContract").hide();
            }

            $("#AgreementTypeList").change(function (e) {
                var AgreementTypeListId = $("#AgreementTypeList").val();
                if (AgreementTypeListId != null && AgreementTypeListId != "") {
                    var url = "@Url.Action("GetAgreementTypeDetailWithId", "Customer", new { area = "Portal" })" + "?Id=" + AgreementTypeListId;
                    $.get(url, function (data) {
                        $('#hdnAgreementTypeCPI').val(data);
                    })
                }
            });




            $("#Contract_SignDate").datepicker({
                numberOfMonths: 1,
                onSelect: function (selected) {
                    var dt = new Date(selected);
                    dt.setDate(dt.getDate() + 1);
                    $("#Contract_StartDate").datepicker("option", "minDate", dt);
                }
            });

            $("#Contract_StartDate").datepicker({
                numberOfMonths: 1,
                onSelect: function (selected) {
                    var dt = new Date(selected);
                    dt.setDate(dt.getDate() - 1);
                    $("#Contract_SignDate").datepicker("option", "maxDate", dt);
                    var monthadd = $("#Contract_ContractTermMonth").val();
                    if (monthadd != null) {
                        var startdate = $("#Contract_StartDate").val();
                        var contractstartdate = new Date(startdate);

                        if (monthadd == "")
                            monthadd = 0;

                        contractstartdate.setMonth(contractstartdate.getMonth() + parseInt(monthadd));
                        var c = (contractstartdate.getMonth() + 1) + '/' + contractstartdate.getDate() + '/' + contractstartdate.getFullYear()

                        $("#Contract_ExpirationDate").val(c);
                    }
                }
            });

            //var dateFormat = "mm/dd/yyyy",
            //  from = $( "#Contract_SignDate" )
            //    .datepicker({
            //        changeMonth: true,
            //        numberOfMonths: 1
            //    })
            //    .on( "change", function() {
            //        to.datepicker( "option", "minDate", getDate( this ) );
            //    }),
            //  to = $( "#Contract_StartDate" ).datepicker({
            //      changeMonth: true,
            //      numberOfMonths: 1
            //  })
            //  .on( "change", function() {
            //      from.datepicker( "option", "maxDate", getDate( this ) );
            //  });

            function getDate(element) {
                var date;
                try {
                    date = $.datepicker.parseDate( dateFormat, element.value );
                } catch(error) {
                    date = null;
                }
                return date;
            };


            //$("#Contract_ContractTermListId").change(function () {
            //    var yearadd = $("#Contract_ContractTermListId").val();
            //    var monthadd = $("#Contract_ContractTermMonth").val();
            //    var startdate = new Date($("#Contract_StartDate").val());
            //    if (yearadd == "")
            //        yearadd = 0;
            //    var year = startdate.getFullYear() + parseInt(yearadd);
            //    if (monthadd == "")
            //        monthadd = 0;
            //    var month = startdate.getMonth() + 1 + parseInt(monthadd);
            //    var day = startdate.getDate();
            //    var c = new Date(month + '/' + day + '/' + year);
            //    year = year.toString().substr();
            //    c = month + "/" + day + "/" + year;
            //    $("#Contract_ExpirationDate").val(c);
            //});


            $("#Contract_ContractTermMonth").change(function () {

                var monthadd = $("#Contract_ContractTermMonth").val();
                var startdate = $("#Contract_StartDate").val();
                var contractstartdate = new Date(startdate);

                if (monthadd == "")
                    monthadd = 0;

                contractstartdate.setMonth(contractstartdate.getMonth() + parseInt(monthadd));
                var c = (contractstartdate.getMonth() + 1) + '/' + contractstartdate.getDate() + '/' + contractstartdate.getFullYear()
                if (startdate == "")
                    $("#Contract_ExpirationDate").val("");
                else
                $("#Contract_ExpirationDate").val(c);
            });

            $("#Contract_StartDate").change(function () {
                var monthadd = $("#Contract_ContractTermMonth").val();
                var startdate = $("#Contract_StartDate").val();
                var contractstartdate = new Date(startdate);

                if (monthadd == "")
                    monthadd = 0;

                contractstartdate.setMonth(contractstartdate.getMonth() + parseInt(monthadd));
                var c = (contractstartdate.getMonth() + 1) + '/' + contractstartdate.getDate() + '/' + contractstartdate.getFullYear()
                if (startdate == "")
                    $("#Contract_ExpirationDate").val("");
                else
                    $("#Contract_ExpirationDate").val(c);
                //$("#Contract_ExpirationDate").val(c);
            });

            $("#Contract_Amount").inputmask("numeric", {
                decimal: ".",
                negative: false,
                scale: 2,
                groupSeparator: ",",
                digits: 2,
                autoGroup: true,
                prefix: "$",
                rightAlign: false,
                autoUnmask: true,
                removeMaskOnSubmit: true,
            });

            $("#Contract_AmountSubjectToFee").inputmask("numeric", {
                decimal: ".",
                negative: false,
                scale: 2,
                groupSeparator: ",",
                digits: 2,
                autoGroup: true,
                prefix: "$",
                rightAlign: false,
                autoUnmask: true,
                removeMaskOnSubmit: true,
            });

            $('#generalCustomerList').DataTable({
                "paging": true,
                "ordering": false,
                "info": false,
                "bProcessing": true,
                "pageLength": 25,
                "dom": "<'table-responsive't><'bottom'ip><'clear'>"
            });

            $('#chkcopyaddresstoContract').change(function () {

                var ContractAddress_Address1 = $('#ContractAddress_Address1');
                var ContractAddress_Address2 = $('#ContractAddress_Address2');
                var ContractAddress_City = $('#ContractAddress_City');
                var ContractStatesList = $('#ContractStatesList');
                var ContractAddress_PostalCode = $('#ContractAddress_PostalCode');


                if ($(this).prop('checked')) {
                    ContractAddress_Address1.val($('#MainAddress_Address1').val());
                    ContractAddress_Address2.val($('#MainAddress_Address2').val());
                    ContractAddress_City.val($('#MainAddress_City').val());
                    ContractStatesList.val($('#MainAddress_StateListId').val());
                    ContractAddress_PostalCode.val($('#MainAddress_PostalCode').val());

                    ContractAddress_Address1.attr("readonly", "readonly");
                    ContractAddress_Address2.attr("readonly", "readonly");
                    ContractAddress_City.attr("readonly", "readonly");
                    ContractStatesList.attr("readonly", "readonly");
                    ContractStatesList.attr("style", "pointer-events: none;")
                    ContractAddress_PostalCode.attr("readonly", "readonly");
                }
                else {
                    ContractAddress_Address1.val('');
                    ContractAddress_Address2.val('');
                    ContractAddress_City.val('');
                    ContractStatesList.val('');
                    ContractAddress_PostalCode.val('');

                    ContractAddress_Address1.removeAttr("readonly");
                    ContractAddress_Address2.removeAttr("readonly");
                    ContractAddress_City.removeAttr("readonly");
                    ContractStatesList.removeAttr("readonly");
                    ContractStatesList.removeAttr("style", "pointer-events");
                    ContractAddress_PostalCode.removeAttr("readonly");
                }
            });

        });

        // Prevent the form to be submitted on ENTER
        $('#form_wizard_1').submit(function (e) {
            e.preventDefault();
            //  validateOnSubmit();
        });

        // Controll data
        $('#btnContinue').click(function () {
            if ($("#ContractTypeList").val() != 2) {
                if ($("#hdnContractCount").val() == "" || $("#hdnContractCount").val() == "0") {
                    swal('Oops...', 'please add at least one Contract Detail!', 'warning');
                    //alert('please add at least one contract detail');
                    return false;
                }
                else {
                    if (parseFloat($("#hdnAmount").val()).toFixed(2) == parseFloat($("#hdnTotAmount").val()).toFixed(2)) {
                        $('#Contract_Amount').css('border-color', '');
                        $('.clsamt').css('border-color', '');

                        var btnCount = @Convert.ToInt32(JKApi.Business.Enumeration.ButtonType.Continue)
                            $("#ButtonType").val(btnCount);
                        checkMandatoryFields(btnCount);
                    }
                    else {
                        $('#Contract_Amount').css('border-color', 'red');
                        $('.clsamt').css('border-color', 'red');
                        $('.clsamt').css('border-left', '2px solid red');
                        $('.clsamt').css('border-right', '2px solid red');
                        swal('Oops...', 'Contract detail total amount not should be less then to contract amount!', 'warning');
                        return false;
                    }
                }
            }
            else {
                $('#Contract_Amount').css('border-color', '');
                var btnCount = @Convert.ToInt32(JKApi.Business.Enumeration.ButtonType.Submit);
                $("#ButtonType").val(btnCount);
                //$("#form_wizard_1").submit();
                
                if ($("#AccountTypeList").val() == "") {
                    $('#AccountTypeList').css('border-color', 'red');
                }
                else {
                    $('#AccountTypeList').css('border-color', '');
                    $('#form_wizard_1')[0].submit();
                }
            }
        });

        // Controll data
        $('#btnSave').click(function () {

            var btnCount = @Convert.ToInt32(JKApi.Business.Enumeration.ButtonType.Save)

            $("#ButtonType").val(btnCount);
            checkMandatoryFields(btnCount);
        });

        // Controll data
        $('#btnBack').click(function () {
            
            var btnCount = @Convert.ToInt32(JKApi.Business.Enumeration.ButtonType.Back)

            $("#ButtonType").val(btnCount);
            checkMandatoryFields(btnCount);
        });


        function Reset() {
            $("#AccountTypeList").val("");
            $("#FrequencyTypeList").val("");
            $("#ContractDetail_CleanTimes").val("");
            $("#ContractDetail_Amount").val("");
            $("#ContractDetail_SquareFootage").val("");
        };


        // Check mandatory fields before subitting:
        function checkMandatoryFields(count) {
            var form = $('#form_wizard_1');
            var error = $('.alert-danger', form);
            var success = $('.alert-success', form);
            form.validate({
                doNotHideMessage: true, //this option enables to show the error/success messages on tab switch.
                errorElement: 'span', //default input error message container
                errorClass: 'help-block help-block-error', // default input error message class
                focusInvalid: false, // do not focus the last invalid input
                rules: {},
                messages: { // custom messages for radio buttons and checkboxes
                    'payment[]': {
                        required: "Please select at least one option",
                        minlength: jQuery.validator.format("Please select at least one option")
                    }
                },

                errorPlacement: function (error, element) { // render error placement for each input type
                },

                invalidHandler: function (event, validator) { //display error alert on form submit
                    success.hide();
                    error.show();
                    App.scrollTo(error, -200);
                },

                highlight: function (element) { // hightlight error inputs
                    $(element)
                        .closest('.form-group').removeClass('has-success').addClass('has-error'); // set error class to the control group
                },

                unhighlight: function (element) { // revert the change done by hightlight
                    $(element)
                        .closest('.form-group').removeClass('has-error'); // set error class to the control group
                },

                success: function (label) {
                    if (label.attr("for") == "gender" || label.attr("for") == "payment[]") { // for checkboxes and radio buttons, no need to show OK icon
                        label
                            .closest('.form-group').removeClass('has-error').addClass('has-success');
                        label.remove(); // remove error label here
                    } else { // display success icon for other inputs
                        label
                            .addClass('valid') // mark the current input as valid and display OK icon
                        .closest('.form-group').removeClass('has-error').addClass('has-success'); // set success class to the control group
                    }
                },

                submitHandler: function (form) {
                    success.show();
                    error.hide();
                    // form[0].submit();
                    if (count > 0) {
                        var isvalid = true;
                        if ($('#ContractAddress_PostalCode').val() == '' || $('#ContractAddress_PostalCode').val().length != 5) { $('#ContractAddress_PostalCode').css('border-color', '#a94442'); if (isvalid == true) { isvalid = false; } } else { $('#ContractAddress_PostalCode').css('border-color', ''); }
                        if (isvalid == true) {
                            $.blockUI();
                            $("#btnSave").hide();
                            $('#form_wizard_1')[0].submit();
                            //$('#form_wizard_1').submit();
                        }
                    }
                    //add here some ajax code to submit your form or just call form.submit() if you want to submit the form without ajax
                }
            });
        };


        function RemoveContractDetail(ContractDetailId, ContractId) {
            $.blockUI({
                baseZ: 99999,
                message: '<center><img height: src="/Images/loading_icon.gif" /><h3> <b>Processing....</br> Please wait! and do not refresh page.</b></h3></center>',
                css: { backgroundColor: 'rgb{0,0,0}', border: '0', color: '#fff', "z-index": 99999 }
            });
            $.ajax({
                type: "post",
                url: "@Url.Action("RemoveContractDetail", "Customer")",
                ajaxasync: true,
                data: { ContractDetailId: ContractDetailId, ContarctId: ContractId },
                success: function (response) {
                    loadOwners(response.id);

                    $.unblockUI();
                },
                error: function (data) {
                    $.unblockUI();
                }
            })
            $.unblockUI();
        }

        function loadOwners(id) {
            $.blockUI({
                baseZ: 99999,
                message: '<center><img height: src="/Images/loading_icon.gif" /><h3> <b>Processing....</br> Please wait! and do not refresh page.</b></h3></center>',
                css: { backgroundColor: 'rgb{0,0,0}', border: '0', color: '#fff', "z-index": 99999 }
            });

            $.ajax({
                type: "GET",
                url: '@Url.Action("GetContractDetail", "Customer", new { @area = "Portal" })?id=' + id,
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                    $('#tblContractDescriptionData').html(response);
                    $.unblockUI();
                },
                error: function (xhr, textStatus, error) {
                    if (typeof console == "object") {

                        $('#tblContractDescriptionData').html(xhr.responseText);
                        console.log(xhr.status + "," + xhr.responseText + "," + textStatus + "," + error);
                    }
                    $.unblockUI();
                }
            });

            $.unblockUI();
        }
    </script>
    <script>
        $(function () {
            // AddContractDetailDescription = function (ContractId, ContractDetailId) {
            window.AddContractDetailDescription = function (ContractDetailId) {
                $.blockUI({
                    //baseZ: 99999,
                    //message: '<center><img height: src="/Images/loading_icon.gif" /><h3> <b>Processing....</br> Please wait! and do not refresh page.</b></h3></center>',
                    //css: { backgroundColor: 'rgb{0,0,0}', border: '0', color: '#fff', "z-index": 99999 }
                });
                var ContractId = 0;
                if ($('#ContractDetail_ContractId').val() != "") {
                    ContractId = $('#ContractDetail_ContractId').val();
                }
                if ($('#Contract_ContractId').val() != 0) {
                    ContractId = $('#Contract_ContractId').val();
                }
                else {
                    swal(
                        'Oops...',
                        'Save Customer Contract First, Before add Contract Detail!',
                        'warning'
                    )
                }

                if (ContractId > 0 && ContractDetailId > 0) {
                    var url = '/Portal/Customer/AddEditContractDetail/?ContractId=' + ContractId + '&ContractDetailId=' + ContractDetailId

                    $.get(url, function (data) {
                        $('#modalData').html(data);
                        $('#modalData').modal();

                    })
                }
                else if (ContractId > 0) {
                    var url = '/Portal/Customer/AddEditContractDetail/?ContractId=' + ContractId + '&ContractDetailId=' + ContractDetailId
                    $.get(url, function (data) {
                        $('#modalData').html(data);
                        $('#modalData').modal();
                    })
                    //Reset();
                }
                $.unblockUI();
            }
        });

        function OnEditClick() {
            $(".EditContract").attr("disabled", "disabled");
            $(".EditContract").attr("readonly", "readonly")
            $(".editmain1").removeAttr("disabled").removeAttr("readonly");

            if ($("#chkcopyaddresstoContract").prop('checked')) {
                $("#ContractAddress_Address1").attr("readonly", "readonly");
                $("#ContractAddress_Address2").attr("readonly", "readonly");
                $("#ContractAddress_City").attr("readonly", "readonly");
                $("#ContractStatesList").attr("readonly", "readonly");
                $("#ContractStatesList").attr("style", "pointer-events: none;")
                $("#ContractAddress_PostalCode").attr("readonly", "readonly");
            }

        }
        function OnEditCancel() {
            $(".EditContract").removeAttr("disabled").removeAttr("readonly");
            $(".editmain1").attr("disabled", "disabled");
            $(".editmain1").attr("readonly", "readonly");
        }

        $(document).ready(function () {

        });

        $("#btnSave").click(function (e) {
          
            e.preventDefault();
            //$.blockUI();
            $("#form_wizard_1").submit();
            //$.UnblockUI();
        });

    </script>

}

