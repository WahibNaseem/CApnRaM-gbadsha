@model JKViewModels.Customer.CustomerSearchResultViewModelListModel
@{
    ViewBag.Title = "Customer SearchList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section styles{
    <link href='@Url.Content("~/Content/admin/assets/global/plugins/datatables/datatables.min.css")' rel="stylesheet" type="text/css" />
    <link href='@Url.Content("~/Content/admin/assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.css")' rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/admin/assets/global/plugins/bootstrap-multiselect/css/bootstrap-multiselect.css")" rel="stylesheet" type="text/css" />
}

<style>
    .close {
        background-image: url(/Content/admin/assets/global/img/stick_close.png) !important;
        height: 12px !important;
        width: 12px !important;
        margin-top: 0px !important;
    }

    .btn.multiselect {
        text-align: left;
    }

    .multiselect .caret {
        right: 0;
        position: absolute;
        margin-top: 8px;
        margin-right: 8px;
    }

    .row {
        margin: 0;
        padding: 3px 0;
    }

    .page-size {
        padding-left: 0;
        padding-right: 0;
        width: 62px;
    }

    .topheader {
        font-size: 14px;
        font-weight: bold;
        color: #FFF !important;
        text-transform: uppercase;
        margin-top: 3px;
    }

    .alignRight {
        text-align: right;
    }

    .alignCenter {
        text-align: center;
    }

    #CustomerList th {
        vertical-align: middle;
    }

    .no-padding {
        padding: 0;
    }

    .no-margin {
        margin: 0;
    }

    .padding-tb1 {
        padding-top: 1px;
        padding-bottom: 1px;
    }

    .margin-tb1 {
        margin-top: 1px;
        margin-bottom: 1px;
    }

    .custom-listbox .headerbox {
        padding: 3px 0px 3px 5px;
    }

    .custom-listbox {
        margin-top: 4px;
        margin-bottom: 0px;
    }

    .btn.multiselect {
        text-align: left;
        padding-top: 4px;
        padding-bottom: 4px;
        font-size: 11px;
        color: #555;
    }

    .multiselect .caret {
        right: 0;
        position: absolute;
        margin-top: 8px;
        margin-right: 8px;
    }

    .multiselect-container.dropdown-menu {
        text-transform: none;
        font-size: 14px;
    }

    .contract {
        text-align: right;
    }

    .tablebox .table-responsive {
        min-height: 600px;
    }

    .CMList {
        margin-top: -12px;
    }
</style>

<style>
    #modal_RegionModel .modal-content {
        width: 55% !important;
        margin-left: 30% !important;
    }
</style>

<div class="headerbox">
    <div class="row" style="background-color: #3598DC;color: #fff;">
        <div class="col-md-12 no-padding">
            <div class="alignCenter">
                <div class="col-md-4" style="text-align:right;">
                </div>
                <div class="col-md-4 topheader">
                    CUSTOMER LIST
                </div>
                <div class="col-md-4" style="padding-right:5px;">
                    <div class="col-md-7 pull-right no-padding">
                        <div style="display:table-cell;padding-right: 5px;">
                            Region
                        </div>
                        <div style="display:table-cell;width:100%;">
                            @if (ViewBag.regionlist != null)
                            {
                                <select class="form-control input-sm" id="regionlist" multiple="multiple" style="display:none;">
                                    @foreach (var item in (SelectList)ViewBag.regionlist)
                                    {
                                        <option @(item.Selected ? "selected" : "") value="@item.Value">@item.Text</option>
                                    }
                                </select>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="custom-listbox">
    <div class="headerbox">
        <div class="row no-padding">
            <div class="col-md-1 page-size">
                <select class="form-control input-sm" id="pageSize" style="padding-left:6px;">
                    <option value="-1">All</option>
                    <option value="100" selected>100</option>
                    <option value="50">50</option>
                    <option value="25">25</option>
                </select>
            </div>
            <div class="col-md-3">
                <div class="input-icon">
                    <i class="icon-magnifier icon-align-right" style="margin-top: 8px;"></i>
                    <input id="input_Search" type="text" required name="customernumber" autocomplete="off" placeholder="Search..." value="" class="form-control input-sm typeahead" />
                </div>
            </div>
            <div class="col-md-4"></div>
            <div class="col-md-4 pull-right" style="padding-right:5px;">
                @if (ViewBag.StatusList != null)
                {
                    <div class="col-md-12 pull-right no-padding">
                        <div class="col-md-6 no-padding" style="text-transform:none;font-weight:normal;text-align: right;margin-top: 3px;">
                            Customer Status
                        </div>
                        <div class="col-md-6 no-padding" style="padding-left: 6px;">
                            <select id="ddlCStatus" multiple="multiple" style="display:none;">
                                @foreach (var item in (MultiSelectList)ViewBag.StatusList)
                                {
                                    <option @(item.Selected ? "selected" : "") value="@item.Value">@item.Text</option>
                                }
                            </select>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<div class="tablebox">
    <div class="table-responsive" id="divcustomerList" style="display:none;">
        <table class="table table-striped table-bordered table-hover order-column" id="CustomerList" style="display:none;margin-top:0 !important;">
            <thead>
                <tr>
                    <th style="width:30px;text-align:center;">
                        Region
                    </th>
                    <th style="width:7px;text-align:center;">
                        Customer ID
                    </th>
                    <th style="text-align:center;width:160px;">
                        Customer Name
                    </th>
                    <th style="text-align:center;width:220px;">
                        Full Address
                    </th>
                    <th style="text-align:center;width:40px;">
                        Phone
                    </th>
                    <th style="text-align:center;width:70px;">
                        Account Type
                    </th>
                    <th style="text-align:center;width:10px;">
                        Status
                    </th>
                    <th style="text-align:center;width:10px;">
                        Contract Amount
                    </th>
                    <th style="text-align:center;width:4px;">

                    </th>
                    <th style="text-align:center;width:4px;">

                    </th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>

<div class="modal fade custom-model custom-form-design" id="ModalCustomerDistributionPopup" tabindex="-1" role="basic" aria-hidden="true" style="display: none;">
    <div class="modal-dialog" style="width:645px">
        <div class="modal-content" style="border-radius: 8px;" id="RenderCustomerDistribution">
        </div>
    </div>
</div>

<!--Customer Contract Modal-->
<div class="modal fade custom-model custom-form-design" id="modal_CustomerContractPopup" tabindex="-1" role="basic" aria-hidden="true" style="display: none;">
    <div class="modal-dialog" style="width:1120px">
        <div class="modal-content" style="border-radius: 8px;" id="RenderCustomerContractDetails">

        </div>
    </div>
</div>

<!--Customer Service log-->
<div class="modal fade in" id="modal_ServiceCallLog" tabindex="-1" role="basic" aria-hidden="true" style="display: none; padding-right: 17px;">
    <div class="modal-dialog modal-lg" id="Render_ServiceCallLogDetails">
    </div>
</div>

<!--Collection Call log-->
<div class="modal fade in" id="modal_CollectionCallLog" tabindex="-1" role="basic" aria-hidden="true" style="display: none; padding-right: 17px;">
    <div class="modal-dialog modal-lg" id="Render_CollectionCallLogDetails">
    </div>
</div>

<!--Maintenance-->
<div class="modal fade custom-model custom-form-design" id="modal_customermaintenanceDetail" tabindex="-1" role="basic" aria-hidden="true" style="display: none;">
    <div class="modal-dialog modal-sm" style="width: 900px;">
        <div class="modal-content" style="border-radius: 8px;">
            <div class="modal-header headerbox list" style="padding:0px!important;border-bottom: none;">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true" style="margin-top: 12px !important;margin-right: 12px !important;"></button>
                <h4 class="modal-title text-center" style="margin-top: 0px; margin-bottom: 4px;  padding: 7px!important;font-size: 12px;font-weight: bold;background: #3598DC !important;color: #FFF !important;border: 1px solid #3598DC !important;padding: 0px;text-transform: uppercase;">
                    Customer Maintenance
                </h4>
            </div>
            <div class="modal-body" style="padding-top: 1px;margin-top: -5px;" id="form_customermaintenancem">

            </div>
        </div>

    </div>
</div>

<div id="divfinderfeelist"></div>

@*MANUAL INVOICE Modal *@


<!--Region Modal-->
<div class="modal fade in" id="modal_RegionModel" tabindex="-1" role="basic" aria-hidden="true" style="display: none; padding-right: 17px;">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" style="border-radius: 8px;">
            <div class="modal-header headerbox list" style="padding:0px!important;border-bottom: none;">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true" style="margin-top: 12px !important;margin-right: 12px !important;"></button>
                <h4 class="modal-title text-center" style="margin-top: 0px; margin-bottom: 4px;  padding: 7px!important;font-size: 12px;font-weight: bold;background: #3598DC !important;color: #FFF !important;border: 1px solid #3598DC !important;padding: 0px;text-transform: uppercase;">
                    Select Region
                </h4>
            </div>
            <div class="modal-body form form-horizontal" style="padding-top: 1px;margin-top: -5px;">
                <div class="form-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label class="control-label col-md-12" style="text-align: center;padding: 5px;background-color: #e8e8e8;margin-bottom:5px;font-weight:bold;">Select Region</label>
                                @if (ViewBag.regionlist != null)
                                {
                                    <select class="form-control input-sm" id="selectregionlist">
                                        <option value="">Select Region</option>
                                        @foreach (var item in (SelectList)ViewBag.regionlist)
                                        {
                                            <option @(item.Selected ? "selected" : "") value="@item.Value">@item.Text</option>
                                        }
                                    </select>
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-actions">
                    <div class="col-md-12">
                        <button type="button" name="SaveNew" id="btnRegion" class="btn btn-primary button-next pull-right" onclick="" style="margin-right:0px;">Select Region</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade custom-model custom-form custom-form-design" id="modal_applypaymentprompt" tabindex="-1" style="display: none;">
    <div class="modal-dialog" style="width:500px">
        <div class="modal-content" style="border-radius: 8px; font-size: 16px">
            <div class="headerbox">
                <div class="row">
                    &nbsp;
                </div>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12" style="padding: 20px 100px 40px 100px;">
                        Do you want to apply partial payment against Invoice No. <span id="lblPromptInvoiceNo">&nbsp;</span>?
                    </div>
                    <div class="col-md-12">
                        <div class="col-md-6"></div>
                        <div class="col-md-3">
                            <button id="btnSaveAndClose" type="button" class="btn green btn-block" onclick="onClickYesApplyPayment()">Yes</button>
                        </div>

                        <div class="col-md-3">
                            <button id="btnSaveAndNew" type="button" class="btn green btn-block" onclick="onClickNoApplyPayment()">No</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<!--Credit Transaction-->
<div class="modal fade in" id="modal_CreditTransaction" tabindex="-1" role="basic" aria-hidden="true" style="display: none; padding-right: 17px;">
    <div class="modal-dialog modal-lg" id="Render_CustomerTransaction">
    </div>
</div>

<div class="modal fade custom-model custom-form custom-form-design" id="modal_InfoBox" tabindex="-1" style="display: none;">
    <div class="modal-dialog" style="width: 550px;padding: 30px;">
        <div class="modal-content" style="border-radius: 8px;">
            <div class="modal-header headerbox list" style="padding:0px!important;border-bottom: none;">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true" style="margin-top: 12px !important;margin-right: 12px !important;"></button>
            </div>
            <div class="row">
                <input type="hidden" id="hdnKillSessionId" value="0" />
                <div class="col-md-12" style="padding: 25px;">
                    <i class="fa fa-bell blinkcolor blink"></i> <span id="spmMsg" style="font-size:17px"></span> <i class="fa fa-bell blinkcolor blink"></i> 
                </div>
            </div>
        </div>

    </div>
</div>

@*Manual Payment Modal *@
<div id="divmodal_ManualPayment"></div>


@section pageplugins{

    <script src="@Url.Content("~/Content/admin/assets/global/plugins/jquery-ui/jquery-ui.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/jquery-validation/js/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/jquery-inputmask/jquery.inputmask.bundle.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/scripts/datatable.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/datatables/datatables.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/pages/scripts/table-datatables-managed.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/moment.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/bootstrap-typeahead/bootstrap3-typeahead.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/bootstrap-multiselect/js/bootstrap-multiselect.js")" type="text/javascript"></script>
    @*<link rel="stylesheet" type="text/css" href="@Url.Content("~/Content/chosen.css")" />
        <script src="@Url.Content("~/Scripts/chosen.jquery.min.js")" type="text/javascript"></script>
        <script src="~/Scripts/jquery.uniform.min.js"></script>*@
    @if (Request.IsSecureConnection)
    {
        <script src="https://cdn.datatables.net/1.10.16/js/jquery.dataTables.min.js" type="text/javascript"></script>
    }
    else
    {
        <script src="http://cdn.datatables.net/1.10.16/js/jquery.dataTables.min.js" type="text/javascript"></script>
    }
}

@section scripts{
    <script src="@Url.Content("~/Content/admin/assets/pages/scripts/components-date-time-pickers.min.js")" type="text/javascript"></script>


    <script>
        function getCurrentUrl() {
            var s = $("#ddlCStatus").val();
            var r = $('#regionlist').val();

            return '@Url.Action("CustomerSearchList", "Customer", new { area = "Portal" })?status=' + (s == null ? '0' : s) + '&rgId=' + (r == null ? '' : r);

        }


        function refreshCreditTransaction(id) {
            var sURL = getTableURL(id);
            console.log(sURL);
            invoiceList.ajax.url(sURL).load();
        }

        function setCTSearchTime(value) {
            value = parseInt(value);
            $("#select_dateRangeCT").val(value.toString());
            var custom_enabled = false;
            var firstDay;
            var lastDay;

            switch (parseInt(value)) {
                case 1:
                    firstDay = moment().startOf('isoWeek').toString();
                    lastDay = moment().endOf('isoWeek').toString();
                    break;
                case 2:
                    //code block
                    firstDay = moment().startOf('isoWeek').toString();
                    lastDay = new Date().toString();
                    break;
                case 3:
                    firstDay = moment().subtract(0, 'month').startOf('month').toString();
                    lastDay = moment().subtract(0, 'month').endOf('month').toString();
                    break;
                case 4:
                    //code block
                    firstDay = moment().subtract(0, 'month').startOf('month').toString();
                    lastDay = new Date().toString();
                    break;
                case 5:
                    //code block
                    firstDay = moment().startOf('quarter').toString();
                    lastDay = moment().endOf('quarter').toString();
                    break;
                case 6:
                    //code block
                    firstDay = moment().startOf('quarter').toString();
                    lastDay = new Date().toString();
                    break;
                case 7:
                    //code block
                    firstDay = moment().startOf('year').toString();;
                    lastDay = moment().endOf('year').toString();
                    break;
                case 8:
                    //code block
                    firstDay = moment().startOf('year').toString();
                    lastDay = new Date().toString();
                    break;
                case 9:
                    //code block
                    firstDay = moment().add(-1, 'days').toString();
                    lastDay = moment().add(-1, 'days').toString();
                    break;
                case 10:
                    //code block
                    firstDay = moment().subtract(1, 'week').startOf('week').toString();
                    lastDay = moment().subtract(1, 'week').endOf('week').toString();
                    break;
                case 11:
                    //code block
                    firstDay = moment().subtract(1, 'month').startOf('month').toString();
                    lastDay = moment().subtract(1, 'month').endOf('month').toString();
                    break;
                case 12:
                    //code block
                    firstDay = moment().subtract(1, 'quarter').startOf('quarter').toString();
                    lastDay = moment().subtract(1, 'quarter').endOf('quarter').toString();
                    break;
                case 13:
                    //code block
                    firstDay = moment().subtract(1, 'year').startOf('year').toString();
                    lastDay = moment().subtract(1, 'year').endOf('year').toString();
                    break;
                case 14:
                    custom_enabled = true;
                    //code block
                    $('#dtpfromCT').html(moment(firstDay).format('L'));
                    $('#dtptoCT').html(moment(lastDay).format('L'));
                    break;
                default:
                    //code block
            }
            $('#dtpfromCT').val(moment(firstDay).format('L'));
            $('#dtptoCT').val(moment(lastDay).format('L'));

            $(".search-date-field").prop('disabled', !custom_enabled);
        };

        $(document).ready(function () {

            //Credit Transaction Date Change
            $("#select_dateRangeCT").change(function () {
                var value = this.value;
                setCTSearchTime(value);
                // refreshCreditTransaction($("#CTMC").val());
            });

            //Credit Transaction
            setCTSearchTime(3);


            $("#btnRegion").click(function () {
                if ($("#selectregionlist").val() != "") {
                    $("#regionlist option[value='" + $("#selectregionlist").val() + "']").attr("selected", 1);
                    $("#regionlist").multiselect("refresh");
                    initTable();
                    $(".close").click();
                }
            });

            $("#ddlCStatus").multiselect({
                includeSelectAllOption: true,
                selectAllText: 'Select all',
                buttonWidth: '100%',
                nonSelectedText: 'Select status..',
                dropRight: true,
                numberDisplayed: 2,
                onChange: initTable,
                onSelectAll: initTable,
                onDeselectAll: initTable
            });

            $("#regionlist").multiselect({
                includeSelectAllOption: false,
                selectAllText: 'Select all',
                buttonWidth: '100%',
                nonSelectedText: 'Select region..',
                dropRight: true,
                numberDisplayed: 2,
                onChange: initTable,
                onSelectAll: initTable,
                onDeselectAll: initTable
            });

            function GetDataByRegion() {
                var customerList = $('#CustomerList').DataTable();

                $.ajax({
                    url: getCurrentUrl(), success: function (result) {


                        for (var i = 0; i < result.aadata.length; i++) {

                            customerList.row.add({
                                "RegionName": result.aadata[i].RegionName,
                                "CustomerNo": result.aadata[i].CustomerNo,
                                "CustomerName": result.aadata[i].CustomerName,
                                "Address": result.aadata[i].Address,
                                "City": result.aadata[i].City,
                                "StateName": result.aadata[i].StateName,
                                "Phone": result.aadata[i].Phone,
                                "PostalCode": result.aadata[i].PostalCode,
                                "AccountTypeListName": result.aadata[i].AccountTypeListName,
                                "StatusName": result.aadata[i].StatusName,
                                "Amount": result.aadata[i].Amount,
                                "CustomerId": result.aadata[i].CustomerId
                            }).draw();
                        }
                    }
                });
            }
            $.fn.dataTableExt.afnFiltering.push(function (oSettings, aData, iDataIndex) {
                //var checked = $('#chkActive').is(':checked');
                //var Inchecked = $('#chkInActive').is(':checked');

                //if (checked && aData[3] == "Active") {
                //    return true;
                //}
                //else if (Inchecked && aData[3] == "X") {
                //    return true;
                //}
                //else if (Inchecked && checked) {
                //    return true;
                //}
                // return false;
                return true;
            });

            $(document).on('init.dt', function (e, settings) {
                var api = new $.fn.dataTable.Api(settings);
                if ($(api.table().node()).attr('id') == 'CustomerList') {
                    setPaging();
                }
            });
            function initTable() {

                var ps = $('#pageSize').val();
                var dtable = $('#CustomerList').dataTable({
                    "bAutoWidth": false,
                    cache: true,
                    "iDisplayLength": ps == '-1' ? 25 : ps,
                    "bDestroy": true,
                    "aLengthMenu": [[5, 7, 10, 25, 50, -1], [5, 7, 10, 25, 50, "All"]],
                    //"dom": "<'headerbox list'<'row'<'col-md-1'l><'col-md-4'f><'#divrightckbox.col-md-5 pull-right text-center'>>><'table-responsive't><'bottom'ip><'clear'>",
                    "dom": "<'table-responsive't><'bottom'ip><'clear'>",
                    "aaSorting": [[0, "desc"]],
                    "sAjaxSource": getCurrentUrl(),
                    "sAjaxDataProp": "aadata",  // Internationalisation. For more info refer to http://datatables.net/manual/i18n
                    "rowCallback": function (nRow, data) {
                    },
                    "aoColumns": [
                        {
                            "sName": "RegionName",
                            "bSortable": true,
                            "mRender": function (data, type, full) {
                                return '<span>' + full.RegionName + '</span>';
                            }
                        },
                        {
                            "sName": "CustomerNo",
                            "bSortable": true,
                            "mRender": function (data, type, full) {
                                return '<span>' + full.CustomerNo + '</span>';
                            }
                        },
                        {
                            "sName": "CustomerName",
                            "bSortable": true,
                            "mRender": function (data, type, full) {
                                return "<a href='@Url.Action("CustomerDetail", "Customer", new { @area = "Portal" })?id=" + full.CustomerId + "'  style='color:#0c9cff' id=" + full.CustomerId + ">" + full.CustomerName + "</a>";
                            }
                        },
                        {
                            "sName": "Address",
                            "bSortable": true,
                            "mRender": function (data, type, full) {
                                var add = '<span>' + full.Address + ',&nbsp;</span><span>' + full.City + ',&nbsp;</span><span>' + full.StateName + '&nbsp;</span>' +
                                    '<span>' + full.PostalCode + '</span>';
                                return add;
                            }
                        },
                        {
                            "sName": "Phone",
                            "bSortable": true,
                            "mRender": function (data, type, full) {
                                return formatPhone(full.Phone);
                            }
                        },
                        {
                            "sName": "AccountTypeListName",
                            "bSortable": true,
                            "mRender": function (data, type, full) {
                                return full.AccountTypeListName;
                            }
                        },
                        {
                            "sName": "StatusName",
                            "bSortable": true,
                            "mRender": function (data, type, full) {
                                return full.StatusName;
                            }
                        },
                        {
                            "sName": "Amount",
                            "bSortable": true,
                            "sClass": "right contract",
                            "mRender": function (data, type, full) {
                                //return full.DistributionAmount;
                                var _amt = '$' + full.Amount.toFixed(2).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,");
                                return "<a onclick='OpenCustomerDistributionPopup(" + full.CustomerId + ")' target='_blank' style='color:#0c9cff' id=" + full.CustomerId + ">" + _amt + "</a>";
                            }
                        },
                        {
                            "sName": "Action",
                            "bSortable": true,
                            "sClass": "personlink alignCenter",
                            "mRender": function (data, type, full) {
                                var action = "<div class='btn-group dropdown'>";
                                action += "<a target='_blank'  dropdown-toggle' data-toggle='dropdown'>";
                                action += "<i class='fa fa-hand-o-right' aria-hidden='true'></i>";
                                action += "</a>";
                                action += "<ul class='dropdown-menu pull-right'>";
                                action += "<li><a href='#' onclick='showManualPayment(" + full.CustomerId + ")'><i class='fa fa-plus'></i> Manual Payment </a></li>";
                                action += "<li><a href='#' onclick='showServiceLog(" + full.CustomerId + ")'><i class='fa fa-plus'></i> Customer Service log </a></li>";
                                action += "<li><a href='#' onclick='showCollectionLog(" + full.CustomerId + ")'><i class='fa fa-plus'></i> Collection Call Log </a></li>";
                                action += "<li><a href='#' onclick='showManualInvoice(" + full.CustomerId + ")'><i class='fa fa-external-link-square'></i> Manual Invoice </a></li>";
                                action += "<li><a href='#' onclick='showCreditTransaction(" + full.CustomerId + ")'><i class='fa fa-external-link-square'></i> Credit Transaction </a></li>";
                                action += "<li><a href='#' onclick='showFeeFinderList(" + full.CustomerId + ")'><i class='fa fa-plus'></i> Finder Fees </a></li>";
                                action += "<li><a href='#' onclick='showCustomerMaintenance(" + full.CustomerId + ")'><i class='fa fa-plus'></i> Maintenance </a></li>";
                                action += "</ul></div>";
                                return action;
                            }
                        }
                        ,
                        {
                            "sName": "LogMessage",
                            "bSortable": true,
                            "sClass": "personlink alignCenter",
                            "mRender": function (data, type, full) {
                                var action = "";
                                if (full.LogMessage != "") {
                                    action = "<span id='spnLog_" + full.CustomerId + "' style='display:none'>" + full.LogMessage + "</span> <a href='#' onclick='OpenLogMessage(" + full.CustomerId + ")' ><i class='fa fa-bell blinkcolor blink' style='font-size: 12px;'></i> Log</a>";
                                }
                                return action;
                            }
                        }
                    ]
                });
            }
            $("#input_Search").keyup(function () {
                var table = $("#CustomerList").DataTable();
                table.search($(this).val()).draw();
            });

            $("#pageSize").change(function () {
                setPaging();
            })

            $("#regionlist").change(function () {
                // initTable();
                //var customerList = $('#CustomerList').DataTable();
                //customerList.draw();
            })

            //$('#chkActive').on("click", function (e) {
            //    console.log('click');
            //    oTable.draw();
            //});
            //$('#chkInActive').on("click", function (e) {
            //    console.log('click');
            //    oTable.draw();
            //});


            if ('@ViewBag.selectedRegionId' > 0) {

                $("#regionlist option[value='" + '@ViewBag.selectedRegionId' + "']").attr("selected", 1);
                $("#regionlist").multiselect("refresh");
            }
            initTable();


            $('.modal-dialog').draggable();
            $('#CustomerList').show();
            $('#divcustomerList').show();
        });


        

        function OpenLogMessage(id) {
            $("#spmMsg").text($("#spnLog_" + id).text());
            $("#modal_InfoBox").modal({ backdrop: 'static' });
            //$("#modal_InfoBox").show();
        }

        function setPaging() {
            var z = $("#pageSize").val();
            var table = $("#CustomerList").DataTable();
            if (z > 0) {
                table.page.len(z).draw();
            }
            else if (z == -1) {
                table.page.len(table.rows().count()).draw();
            }
            else {
                table.page.page.len(25).draw();
            }
        }
        function OpenCustomerDistributionPopup(Id) {
            var sURL = '@Url.Action("RenderCustomerDistributionDetailPopup", "Customer", new { area = "Portal" })?id=' + Id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#RenderCustomerDistribution').html(data);
                    $("#ModalCustomerDistributionPopup").modal({ resizable: true, draggable: true });


                },
                error: function () {
                    alert("Content load failed.");
                }
            });
            //$("#modal_CustomerContractPopup").modal({ backdrop: 'static' });
        }

        /* Show Service Log in Modal*/
        var showServiceLog = function (id) {
            var CustomerLink = '@Url.Action("CustomerServiceCallLogPopup", "Customer", new { area = "Portal" })?id=' + id;
            $.ajax({
                type: "GET",
                url: CustomerLink,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    console.log(data);
                    $('#Render_ServiceCallLogDetails').html(data);
                    $('#modal_ServiceCallLog').modal({ backdrop: 'static' });
                },
                error: function () {
                    alert("Content load failed.");
                }
            });


            if (id != null) {
                var CurrentLink = '@Url.Action("GetServiceLog", "Customer", new { area = "Portal" })?id=' + id;
                var dtable = $('#tblServiceCall').dataTable({
                    "bAutoWidth": false,
                    cache: false,
                    "order": false,
                    "bDestroy": true,
                    "bLengthMenu": false,
                    "bPaginate": false,
                    "bLengthChange": false,
                    "aaSorting": [[0, "desc"]],
                    "sAjaxSource": CurrentLink,
                    "sAjaxDataProp": "aadata",  // Internationalisation. For more info refer to http://datatables.net/manual/i18n
                    "rowCallback": function (nRow, data) {
                    },

                    "aoColumns": [
                        {
                            "sName": "Date/Time",
                            "bSortable": true,
                            "sClass": "alignCenter",
                            "mRender": function (data, type, full) {
                                var datetime = "<span>" + full.CallDate + "<br />" + formatJSONTime(full.CallTime) + "</span>";
                                return datetime;
                            }
                        },
                        {
                            "sName": "Status",
                            "bSortable": true,
                            "sClass": "alignCenter",
                            "mRender": function (data, type, full) {
                                var status = getstatus(full.Status);
                                return full.Status;
                            }
                        },
                        {
                            "sName": "SpokeWith",
                            "bSortable": true,
                            "sClass": "alignCenter",
                            "mRender": function (data, type, full) {
                                return full.SpokeWith;
                            }
                        },
                        {
                            "sName": "Action",
                            "bSortable": true,
                            "sClass": "alignCenter",
                            "mRender": function (data, type, full) {
                                return full.Action;
                            }
                        },
                        {
                            "sName": "CallBack",
                            "bSortable": true,
                            "mRender": function (data, type, full) {
                                var date = formatJSONDate(full.CallBack);
                                return date;
                            }
                        },
                        {
                            "sName": "Comments",
                            "bSortable": true,
                            "sClass": "alignleft",
                            "mRender": function (data, type, full) {
                                return full.Comments;
                            }
                        },
                    ],
                });
            }


            $("#modal_ServiceCallLog").modal({ backdrop: 'static' });
        }

        /*Show Collection Call log */
        function showCollectionLog(Id) {
            var sURL = '@Url.Action("CustomerCollectionLogPopup", "Customer", new { area = "Portal" })?id=' + Id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#Render_CollectionCallLogDetails').html(data);
                    $("#modal_CollectionCallLog").modal({ backdrop: 'static' });
                },
                error: function () {
                    alert("Content load failed.");
                }
            });
        }

        function showCustomerMaintenance(id) {

            var sURL = '@Url.Action("CustomerMaintenancePartial", "customer", new { area = "Portal" })?id=' + id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#form_customermaintenancem').html(data);

                    $('#form_customermaintenance').validate({ // initialize the plugin
                        // your rules and options,
                        errorPlacement: function () {
                            return false;  // suppresses error message text
                        }
                    });
                    $("#manediv").hide();
                    $("#divresumedate").hide();
                    $('#divlastservicedate').hide();
                    $("#divtable").hide();

                    $("#ddlStatus").prop('required', true);
                    $("#StatusDate").prop('required', true);

                    if ($("#ddlStatus").val() > 0) {

                        bindCustomerMaintenanceLoad_popup($("#ddlStatus").val());
                    }
                    $(".date-picker").datepicker();

                    $('#tblMaintance').dataTable({
                        "bProcessing": true,
                        "aLengthMenu": [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]],
                        "pageLength": 200, // default records per page
                        "dom": "<'table-responsive't>"
                    });
                    $("#modal_customermaintenanceDetail").modal({ backdrop: 'static' });
                },
                error: function () {
                    alert("Content load failed.");
                }
            });
        }

        function bindCustomerMaintenanceLoad_popup(id) {
            var value = id;
            if (value == 1 || value == 4 || value == 0) {
                $("#manediv").hide();

                $("#ResumeDate").prop('required', false);
                $("#LastServiceDate").prop('required', false);
                $("#ddlReason").prop('required', false);
                $("#StatusNotes").prop('required', false);
            }
            else if (value == 3) {
                $("#manediv").show();
                $("#divtable").hide();
                $('#divlastservicedate').hide();
                $("#divresumedate").show();

                $("#ResumeDate").prop('required', true);
                $("#LastServiceDate").prop('required', false);
                $("#ddlReason").prop('required', true);
                $("#StatusNotes").prop('required', true);
            }
            else if (value == 2) {
                $("#manediv").show();
                $("#divresumedate").hide();
                $('#divlastservicedate').show();
                $("#divtable").show();

                $("#ResumeDate").prop('required', false);
                $("#LastServiceDate").prop('required', true);
                $("#ddlReason").prop('required', true);
                $("#StatusNotes").prop('required', true);
            }
        }



        function saveCustomerMaintenance() {
            var isValid = $('#form_customermaintenance').valid();
            if (!isValid || parseInt($('#hdfCustomerId').val()) == 0) {
                e.preventDefault(); //prevent the default action
            }
            else {
                $.ajax({
                    url: '@Url.Action("CustomerMaintenancePartial", "Customer",new { area = "Portal" })',
                    type: "POST",
                    data: $('#form_customermaintenance').serialize(),
                    success: function (res) {
                        $('#modal_customermaintenanceDetail').modal('hide');
                    },
                    error: function () { }
                });
            }
        }



        function bindCustomerMaintenanceLoad_popup(id) {
            var value = id;
            if (value == 1 || value == 4 || value == 0) {
                $("#manediv").hide();

                $("#ResumeDate").prop('required', false);
                $("#LastServiceDate").prop('required', false);
                $("#ddlReason").prop('required', false);
                $("#StatusNotes").prop('required', false);
            }
            else if (value == 3) {
                $("#manediv").show();
                $("#divtable").hide();
                $('#divlastservicedate').hide();
                $("#divresumedate").show();

                $("#ResumeDate").prop('required', true);
                $("#LastServiceDate").prop('required', false);
                $("#ddlReason").prop('required', true);
                $("#StatusNotes").prop('required', true);
            }
            else if (value == 2) {
                $("#manediv").show();
                $("#divresumedate").hide();
                $('#divlastservicedate').show();
                $("#divtable").show();

                $("#ResumeDate").prop('required', false);
                $("#LastServiceDate").prop('required', true);
                $("#ddlReason").prop('required', true);
                $("#StatusNotes").prop('required', true);
            }
        }



        function showFeeFinderList(id) {
            $('#divfinderfeelist').html('');
            var sURL = '@Url.Action("GetFeeFinderList", "Customer", new { area = "Portal" })?id=' + id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#divfinderfeelist').html(data);
                    $("#modal_CustomerFinderFeeDetailPopup").modal({ backdrop: 'static' });
                },
                error: function () {
                    alert("Content load failed.");
                }
            });
            //
        }

        var lstContractDetailServiceTypeList = [];
        var lineNo = 0;
        var flineNo = 0;

        var app = {};

        (function (app) {

            var _id;

            app.init = function (id) {
                if (id != '') {
                    _id = id; 5
                    $("#hdfCustomerId").val(_id);
                    bindcustomerdetail(_id);
                }
            }

        })(app);

        @*function bindcustomerdetail(customerid) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("CustomerDetaildata", "AccountReceivable", new { area = "Portal" })',
                data: 'customerid=' + customerid,
                success: function (data) {
                    $("#spncustomerno").text($.trim(data.CustomerNo));
                    $("#spncustomername").text($.trim(data.Name));
                    $("#spncustomeraddress").text($.trim(data.Address1));
                    $("#spncustomercity").text($.trim(data.City))
                    $("#spncustomerstate").text($.trim(data.StateName));
                    $("#spncustomerpincode").text($.trim(data.PostalCode));


                    $("#spncustomerbname").text($.trim(data.BName));
                    $("#spncustomerbattname").text($.trim(data.Attention));
                    $("#spncustomeraddress1").text($.trim(data.BAddress1));
                    $("#spncustomercity1").text($.trim(data.BCity))
                    $("#spncustomerstate1").text($.trim(data.BStateName));
                    $("#spncustomerpincode1").text($.trim(data.PostalCode));

                    $("#hdfTaxRateId").val(data.TaxRateId);
                    $("#hdfContractTaxRate").val(data.ContractTaxRate);
                    $("#hdfLeaseTaxRate").val(data.LeaseTaxRate);
                    $("#hdfSupplyTaxRate").val(data.SupplyTaxRate);

                }
            });
        }*@

        function bindcustomerdetail(customerid) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("CustomerDetaildata", "AccountReceivable", new { area = "Portal" })',
                data: 'customerid=' + customerid,
                success: function (data) {
                    $("#spncustomerno").text($.trim(data.CustomerNo));
                    $("#spncustomername").text($.trim(data.Name));
                    $("#spncustomeraddress").text($.trim(data.Address1));
                    $("#spncustomercity").text($.trim(data.City))
                    $("#spncustomerstate").text($.trim(data.StateName));
                    $("#spncustomerpincode").text($.trim(data.PostalCode));


                    $("#spncustomerbname").text($.trim(data.BName));
                    $("#spncustomerbattname").text($.trim(data.Attention));
                    $("#spncustomeraddress1").text($.trim(data.BAddress1));
                    $("#spncustomercity1").text($.trim(data.BCity))
                    $("#spncustomerstate1").text($.trim(data.BStateName));
                    $("#spncustomerpincode1").text($.trim(data.PostalCode));

                    $("#hdfTaxRateId").val(data.TaxRateId);
                    $("#hdfContractTaxRate").val(data.ContractTaxRate);
                    $("#hdfLeaseTaxRate").val(data.LeaseTaxRate);
                    $("#hdfSupplyTaxRate").val(data.SupplyTaxRate);

                }
            });
        }

        @*function showManualInvoice(id) {
          //  app.init('@ViewContext.RouteData.Values["id"]');

            onlyDecimal("#txtCommissionAmount");
            bindcustomerdetail(id);
            $("#hdftotallineno").val(lineNo);
            $("#hdfftotallineno").val(flineNo);
            $('#txtInvoicedate').inputmask("mm/dd/yyyy", {});
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetContractDetailServiceTypeList", "AccountReceivable", new { area = "Portal" })',
                success: function (data) {
                    lstContractDetailServiceTypeList = data;
                    addNewEntry();
                }
            })

            $("#modal_ManualInvoice").modal('show');
        }*@

        function showManualInvoice(id) {
            lstContractDetailServiceTypeList = [];
            lineNo = 0;
            flineNo = 0;
            var sURL = '@Url.Action("RenderCustomerDetailManualInvoicePopup", "Customer", new { area = "Portal" })?id=' + id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#form_modal_customermanualinvoice').html(data);
                    onlyDecimal("#txtCommissionAmount");
                    bindcustomerdetail(id);
                    $("#hdftotallineno").val(lineNo);
                    $("#hdfftotallineno").val(flineNo);
                    $('#txtInvoicedate').inputmask("mm/dd/yyyy", {});
                    $.ajax({
                        type: "GET",
                        url: '@Url.Action("GetContractDetailServiceTypeList", "AccountReceivable", new { area = "Portal" })',
                        success: function (data) {
                            lstContractDetailServiceTypeList = data;
                            addNewEntry();
                        }
                    })


                    $("#modal_CustomerManualInvoice").modal({ backdrop: 'static' });
                },
                error: function () {
                    alert("Content load failed.");
                }
            });
        }



        function bindfranchiseedetailUpdated(franchiseeid, franchiseeno, franchiseename) {

            flineNo++;



            var linenumber = 0;
            var txttotal = ''
            var lineTotalAmount = 0;

            var tempRow = '<tr id=row_' + flineNo + '><td>'
            tempRow = tempRow + '<input relLine="' + flineNo + '" type="hidden" id="hdfFrenchiseeId' + flineNo + '" name="hdfFrenchiseeId' + flineNo + '" value="' + franchiseeid + '" />'
            tempRow = tempRow + '<select relLine="' + flineNo + '"  relddldetaillinenum="ddldetaillinenumber" class="form-control input-sm ddldetaillinenumber" style="border-radius: 0px;" id="ddldetaillinenumber' + flineNo + '" name="ddldetaillinenumber' + flineNo + '"></select>';
            tempRow = tempRow + '</td>'
            tempRow = tempRow + '<td><input type="text" required relLine="' + flineNo + '" id="frfranchiseeno' + flineNo + '" name="frfranchiseeno' + flineNo + '" value="' + $.trim(franchiseeno) + '" readonly class="form-control input-sm cnumeric" style="padding: 5px;border-radius: 0px;" /></td>'
            tempRow = tempRow + '<td><input type="text" required relLine="' + flineNo + '" id="frfranchiseename' + flineNo + '" name="frfranchiseename' + flineNo + '" value="' + $.trim(franchiseename) + '" readonly class="form-control input-sm cnumeric" style="padding: 5px;border-radius: 0px;" /></td>'
            tempRow = tempRow + '<td><input type="text" relLine="' + flineNo + '" id="frfranchiseeamount' + flineNo + '" name="frfranchiseeamount' + flineNo + '" value="' + txttotal + '" class="form-control input-sm cnumeric requiredValidation frfranchiseeamount" style="padding: 5px;border-radius: 0px;" /></td>';
            tempRow = tempRow + '<td><a style="font-size: 16px;padding: 3px;color: mediumvioletred;" href="javascript:deleteFrenchisee(' + flineNo + ');"><i class="fa fa-trash" aria-hidden="true"></i></a></td></tr>';


            $('#frdestributionTable tbody').append(tempRow);
            applyMaskCurrency('#frfranchiseeamount' + flineNo);
            $("#hdfftotallineno").val(flineNo);

            var lineitems = []; lineitems.push("<option value=''>Select</option>");
            for (var i = 1; i <= lineNo; i++) { lineitems.push("<option value=" + i + ">" + i + "</option>"); }
            if (flineNo == 1) {
                lineitems.push("<option value='-1'>All</option>");
            } else if (flineNo > 1 && $('#ddldetaillinenumber1').val() == '-1') {

                $('#ddldetaillinenumber' + 1).html('');
                $('#ddldetaillinenumber' + 1).html(lineitems.join(' '));
                $("#frfranchiseeamount" + 1).val(0);
            }

            $('#ddldetaillinenumber' + flineNo).html('');
            $('#ddldetaillinenumber' + flineNo).html(lineitems.join(' '));


            $('#ddldetaillinenumber' + flineNo).change(function (event) {
                var _valAMT = $(this).val();
                var fln = $(this).attr("relLine");
                if ($(this).attr("relLine") != "Select") {

                    $('#frfranchiseeamount' + fln).prop("required", true);
                }
                else {
                    $('#frfranchiseeamount' + fln).prop("required", false);
                }
                if (_valAMT == "-1") {
                    UnitData = $("#txtsubtotal").val();
                    $("#frfranchiseeamount" + fln).val(UnitData);
                }
                else if ($("#frfranchiseeamount" + fln).val() != "" && $("txtExtendedPrice" + fln).val() != "") {
                    var UnitData;
                    var FrData;
                    //if ($("#txtExtendedPrice" + fln).val().indexOf(",") > 0)
                    //    UnitData = $("#txtExtendedPrice" + fln).val().replace("$ ", "").replace(",", "");
                    //else
                    UnitData = $("#txtExtendedPrice" + fln).val();
                    $("#frfranchiseeamount" + fln).val(UnitData);

                    if ($("#frfranchiseeamount" + fln).val().indexOf(",") > 0)
                        FrData = $("#frfranchiseeamount" + fln).val().replace("$ ", "").replace(",", "");
                    else
                        FrData = $("#frfranchiseeamount" + fln).val().replace("$ ", "");


                    if (parseFloat(FrData) > parseFloat(UnitData)) {
                        {
                            alert("Franchisee amount should not be greater than Extended Price.");
                            $("#frfranchiseeamount" + fln).focus();
                            $("#frfranchiseeamount" + fln).select();
                        }
                    }
                }
                else if ($("#frfranchiseeamount" + fln).val() == "" && $("txtExtendedPrice" + fln).val() != "") {
                    UnitData = $("#txtExtendedPrice" + fln).val();
                    $("#frfranchiseeamount" + fln).val(UnitData);
                }

            });
            $("#frfranchiseeamount" + flineNo).change(function () {
                var ddlLine = $(this).parent().parent().find("td")[0];
                var Line_No = $(ddlLine).find("select option:selected").val();
                if ($("#txtExtendedPrice" + Line_No).val() != "" && $(this).val() != "") {
                    var UnitData;
                    var FrData;
                    //if ($("#txtExtendedPrice" + Line_No).val().indexOf(",") > 0)
                    //    UnitData = $("#txtExtendedPrice" + Line_No).val().replace("$ ", "").replace(",", "");
                    //else
                    UnitData = $("#txtExtendedPrice" + Line_No).val();
                    if ($(this).val().indexOf(",") > 0)
                        FrData = $(this).val().replace("$ ", "").replace(",", "");
                    else
                        FrData = $(this).val().replace("$ ", "");
                    if (parseFloat(UnitData) < parseFloat(FrData)) {
                        alert("Frenchisee amount should not grater than Extended Price.");
                        $(this).focus();
                        $(this).select();
                    }
                }
            });

            setTimeout(function () {
                $("#hdfFrenchiseeId").val(0);
                $('#fsearch-box').val('');
            }, 500);

        }
        function bindcCustomerDistributionDetailFranchiseedetail(customerid) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("CustomerDistributionDetailFranchiseedata", "AccountReceivable", new { area = "Portal" })',
                data: 'customerid=' + customerid,
                success: function (data) {
                    $.each(data, function () {
                        bindfranchiseedetailUpdated(this.FranchiseeId, this.FranchiseeNo, this.Name);
                    });

                }
            });
        }
        function onlyDecimal(id) {
            $(id).keydown(function (event) {
                if (event.shiftKey == true) { event.preventDefault(); }
                if ((event.keyCode >= 48 && event.keyCode <= 57) || (event.keyCode >= 96 && event.keyCode <= 105) || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 37 || event.keyCode == 39 || event.keyCode == 46 || event.keyCode == 190 || event.keyCode == 110) { }
                else { event.preventDefault(); }
                if ($(this).val().indexOf('.') !== -1 && (event.keyCode == 190 || event.keyCode == 110)) event.preventDefault();
            });
        }
        function OnlyNumber(id) {
            $(id).keydown(function (event) {
                if (event.shiftKey == true) { event.preventDefault(); }
                if ((event.keyCode >= 48 && event.keyCode <= 57) || (event.keyCode >= 96 && event.keyCode <= 105) || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 37 || event.keyCode == 39 || event.keyCode == 46) { }
                else { event.preventDefault(); }
            });
        }
        function addNewEntry() {
            lineNo++;

            var tr = "";
            tr = tr + '<tr relline="S' + lineNo + '" style="background-color:#eef1f5;border-right: 1px solid #eef1f5;">';
            tr = tr + '<td colspan="9" style="padding:0!important;">';
            tr = tr + '<table class="col-md-12" style="margin: 0px!important;">';
            tr = tr + '<tr class="theadRow">';
            tr = tr + '<td style="width:72px;padding: 0px !important;text-align:center;">Line No</td>';
            tr = tr + '<td></td>';
            tr = tr + '<td style="width: 110px;"><input type="checkbox" id="chkCommission' + lineNo + '" name="chkCommission' + lineNo + '"><label>Commission</label></td>';
            tr = tr + '<td style="width: 110px;padding: 0 0px !important;"><input type="text" id="txtCommissionAmount' + lineNo + '" name="txtCommissionAmount' + lineNo + '" value="0" maxlength="10" class="form-control input-sm" /></td>';
            tr = tr + '<td style="width: 105px;"><input type="checkbox" id="chkExtraWork' + lineNo + '" name="chkExtraWork' + lineNo + '"><label for="chkExtraWork' + lineNo + '" style="padding-left: 0px;">Extra Work</label></td>';
            tr = tr + '<td style="width: 115px;"><input type="checkbox" id="chkTaxExcempt' + lineNo + '" name="chkTaxExcempt' + lineNo + '"><label for="chkTaxExcempt' + lineNo + '" style="padding-left: 0px;">Tax Exempt</label></td>';
            tr = tr + '<td style="width: 105px;"><input type="checkbox" id="chkBPPAdmin' + lineNo + '" name="chkBPPAdmin' + lineNo + '"><label for="chkBPPAdmin' + lineNo + '" style="padding-left: 0px;">BPP Admin</label></td>';
            tr = tr + '<td style="width: 115px;"><input type="checkbox" id="chkAcctRebate' + lineNo + '" name="chkAcctRebate' + lineNo + '" /><label for="chkAcctRebate' + lineNo + '" style="padding-left: 0px;">Acct Rebate</label></td>';
            tr = tr + '</tr>';
            tr = tr + '</table>';
            tr = tr + '</td>';
            tr = tr + '</tr>';


            $('#tblcontractdetailrows>tbody').append(tr);
            tr = "";
            tr = tr + '<tr relline="S' + lineNo + '" class="theadRowH" style="background-color:#eef1f5;">';
            tr = tr + '<td style="text-align:center;width:60px;padding: 0px !important;"><input type="text" readonly="" id="txtlinenumber' + lineNo + '" name="txtlinenumber' + lineNo + '" value="' + lineNo + '" class="form-control input-sm cnumeric" style="text-align:center;"></td>';
            tr = tr + '<td style="text-align:center;width:150px;">Service</td>';
            tr = tr + '<td style="text-align:center;">Detail Description</td>';
            tr = tr + '<td style="width:60px;text-align:center;">MarkUp</td>';
            tr = tr + '<td style="width:60px;text-align:center;">Qty</td>';
            tr = tr + '<td style="width:100px;text-align:center;">Unit Price</td>';
            tr = tr + '<td style="width:100px;text-align:center;">Extended Price</td>';
            tr = tr + '<td style="width:50px;text-align:center;">Tax</td>';
            tr = tr + '<td style="width:100px;text-align:center;">Total</td>';
            tr = tr + '</tr>';


            $('#tblcontractdetailrows>tbody').append(tr);
            tr = "";
            tr = tr + '<tr relline="S' + lineNo + '" class="theadRowH remove-padding">';
            tr = tr + '<td style="background-color:#eef1f5;"></td>';
            tr = tr + '<td><select class="form-control input-sm" id="ContractDetailServiceTypeList' + lineNo + '" name="ContractDetailServiceTypeList' + lineNo + '" ></select></td>';
            tr = tr + '<td><textarea required="" id="txtdescription' + lineNo + '" name="txtdescription' + lineNo + '" class="form-control input-sm" row="1" style="padding: 5px;border-radius: 0px;resize:vertical;max-height:100px;min-height:30px;"></textarea></td>';

            tr = tr + '<td><input type="text" required="" onchange="CalculateAmount(' + lineNo + ')" id="txtmarkup' + lineNo + '" name="txtmarkup' + lineNo + '" value="0" class="form-control input-sm" style="padding: 5px;border-radius: 0px;" ></td>';
            tr = tr + '<td><input type="text" required="" onchange="CalculateAmount(' + lineNo + ')" id="txtqty' + lineNo + '" name="txtqty' + lineNo + '" value="1" class="form-control input-sm" style="padding: 5px;border-radius: 0px;"></td>';
            tr = tr + '<td><input type="hidden" id="hdfunitprice' + lineNo + '" name="hdfunitprice' + lineNo + '"/>'
            tr = tr + '<input type="text" required="" onblur="CalculateAmount(' + lineNo + ')" id="txtunitprice' + lineNo + '" name="txtunitprice' + lineNo + '" value="" class="form-control input-sm" style="padding: 5px;border-radius: 0px;"></td>';
            tr = tr + '<td><input type="text" required="" readonly="" onchange="CalculateAmount(' + lineNo + ')" id="txtExtendedPrice' + lineNo + '" name="txtExtendedPrice' + lineNo + '" value="" class="form-control input-sm" style="padding: 5px;border-radius: 0px;"></td>';
            tr = tr + '<td><input type="text" required="" readonly="" onchange="CalculateAmount(' + lineNo + ')" id="txttax' + lineNo + '" name="txttax' + lineNo + '" value="" class="form-control input-sm" style="padding: 5px;border-radius: 0px;"></td>';
            tr = tr + '<td><input type="text" required="" readonly="" onchange="CalculateAmount(' + lineNo + ')" id="txttotal' + lineNo + '" name="txttotal' + lineNo + '" value="" class="form-control input-sm" style="padding: 5px;border-radius: 0px;"></td>';
            tr = tr + '</tr>';

            $('#tblcontractdetailrows>tbody').append(tr);
            applyMaskCurrency('#txtunitprice' + lineNo);
            applyMaskCurrency('#txttax' + lineNo);
            applyMaskCurrency('#txttotal' + lineNo);
            applyTaxExcempt(lineNo)
            applyCommission(lineNo)

            var items = [];
            items.push("<option>Select</option>");
            $.each(lstContractDetailServiceTypeList, function () {
                items.push("<option value=" + this.ContractDetailServiceTypeListId + ">" + this.Name + "</option>");
            });
            $('#ContractDetailServiceTypeList' + lineNo).html(items.join(' '));


            ContractDetailServiceTypeListOnChange('ContractDetailServiceTypeList' + lineNo, lineNo);

            $('#txtunitprice' + lineNo).keyup(function () {
                $('#hdfunitprice' + lineNo).val($('#txtunitprice' + lineNo).val());
            });


            $('#ddldetaillinenumber').html('');
            var lineitems = []; lineitems.push("<option>Select</option>");
            for (var i = 1; i <= lineNo; i++) { lineitems.push("<option value=" + i + ">" + i + "</option>"); }
            $('#ddldetaillinenumber').html(lineitems.join(' '));

            $("#hdftotallineno").val(lineNo);
            OnlyNumber('#txtmarkup' + lineNo)
            OnlyNumber('#txtqtycc' + lineNo)
            onlyDecimal('#txtunitprice' + lineNo)
        }
        function DeleteEntry() {
            lineNo;
            if (lineNo > 1) {
                $("#tblcontractdetailrows tbody tr[relline='S" + lineNo + "']").remove();
                lineNo--;

                CalculateAmount(lineNo);

                $('.unitPrice').keyup(function () {
                    var fieldId = $(this).attr('id');
                    fieldId = fieldId.replace('txtunitprice', '');
                    //unitPrice
                    $('#hdfunitprice' + fieldId).val($('#txtunitprice' + fieldId).val());
                });


                $('#ddldetaillinenumber').html('');
                var lineitems = []; lineitems.push("<option value=''>Select</option>");
                for (var i = 1; i <= lineNo; i++) { lineitems.push("<option value=" + i + ">" + i + "</option>"); }
                //$('#ddldetaillinenumber').html(lineitems.join(' '));


                $('select[relddldetaillinenum="ddldetaillinenumber" ]').each(function (item) {

                    $(this).html('');
                    $(this).html(lineitems.join(' '));

                });
            }
        }
        function applyMaskCurrency(id) {
            $(id).inputmask("currency", {
                alias: 'currency',
                prefix: '$ ',
                digits: 2,
                autoUnmask: true,
                removeMaskOnSubmit: true,
                unmaskAsNumber: true,
                allowPlus: false,
                allowMinus: false,
                autoGroup: true,
                groupSeparator: ",",
            });
        }
        function applyTaxExcempt(id) {
            $('#chkTaxExcempt' + id).change(function () { CalculateAmount(id); });
        }
        function applyCommission(id) {
            $('#txtCommissionAmount' + id).hide();
            $('#chkCommission' + id).change(function () {
                if ($(this).is(":checked")) {
                    $('#txtCommissionAmount' + id).show();
                }
                else {
                    $('#txtCommissionAmount' + id).val("0");
                    $('#txtCommissionAmount' + id).hide();
                }
            });
        }

        function getTableURL(id) {

            var _fromDateVal = $('#dtpfrom').val();
            var _toDateVal = $('#dtpto').val();
            var _searchtextVal = "";
            var _incClosed = $('#chkIncludeClosed').prop("checked");
            var _consolidated = $('#chkConsolidated').prop("checked");
            var sURL = '@Url.Action("GetCreditResultData", "Customer", new { area = "Portal" })?CustomerId=' + id

            return sURL;
        }

        function ContractDetailServiceTypeListOnChange(id, line) {
            $('#' + id).change(function () {

                if (this.value == 5) {
                    $('#txtmarkup' + line).prop("readonly", false);
                    $('#txtmarkup' + line).val(0);
                }
                else {
                    $('#txtmarkup' + line).prop("readonly", true);
                    $('#txtmarkup' + line).val(0);
                }
                CalculateAmount(line);
            });
        }

        function CalculateAmount(ln) {
            if ($("#hdfContractTaxRate").val() == undefined)
                $("#hdfContractTaxRate").val("0.0");
            var temptax = parseFloat($("#hdfContractTaxRate").val());

            var txtmarkup = parseFloat($('#txtmarkup' + ln).val() == '' ? 0 : $('#txtmarkup' + ln).val())

            var txtunitpriceT = parseFloat($('#hdfunitprice' + ln).inputmask('unmaskedvalue').replace('$', '').replace(' ', '').replace(',', '') == '' ? 0 : $('#hdfunitprice' + ln).inputmask('unmaskedvalue').replace('$', '').replace(' ', '').replace(',', ''));

            var txtqty = parseFloat($('#txtqty' + ln).val() == '' ? 0 : $('#txtqty' + ln).val())
            var txtunitprice = (txtunitpriceT + (txtunitpriceT * txtmarkup / 100));
            var txttax = $('#txttax' + ln)
            var txttotal = $('#txttotal' + ln)
            var txtExtetotal = 0;

            $('#txtunitprice' + ln).val(txtunitprice);
            txtExtetotal = (txtunitprice * txtqty);
            //txtExtetotal = ((txtunitprice + (txtunitprice * txtmarkup / 100)) * txtqty);
            $('#txtExtendedPrice' + ln).val(txtExtetotal);
            if ($('#chkTaxExcempt' + ln).is(":checked")) {
                txttax.val(0);
            }
            else {
                txttax.val((txtunitprice * txtqty) * temptax / 100)
            }

            txttotal.val((txtqty * txtunitprice) + parseFloat(txttax.inputmask('unmaskedvalue')))

            var toAmt = 0;
            var toTaxAmt = 0;
            for (var i = 1; i <= lineNo; i++) {

                toTaxAmt = toTaxAmt + parseFloat($('#txttax' + i).inputmask('unmaskedvalue') == '' ? 0 : $('#txttax' + i).inputmask('unmaskedvalue'));
                toAmt = toAmt + parseFloat($('#txttotal' + i).inputmask('unmaskedvalue') == '' ? 0 : $('#txttotal' + i).inputmask('unmaskedvalue'));
            }
            $('#txtsubtotal').val(toAmt - toTaxAmt)
            $('#txttaxamount').val(toTaxAmt)
            $('#txttotalamount').val(toAmt)

            applyMaskCurrency('#txtsubtotal');
            applyMaskCurrency('#txttaxamount');
            applyMaskCurrency('#txttotalamount');
        };
        function showCreditTransaction(id) {

            var currenturl = '@Url.Action("CreditTransactionPopup", "Customer",new { area="Portal" })?id=' + id;
            $.ajax({
                type: "GET",
                url: currenturl,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#Render_CustomerTransaction').html(data);
                    $('#modal_CreditTransaction').modal({ backdrop: 'static' });
                },
                error: function () {
                    alert("Content load failed.");
                }
            });
        }

        function getManualPaymentTableURL(id) {

            var _fromDateVal = $('#dtpfromMP').val();
            var _toDateVal = $('#dtptoMP').val();
            var _searchtextVal = "";
            var _incClosed = "false";
            var _consolidated = $('#chkConsolidatedMP').prop("checked");
            var sURL = '@Url.Action("InvoicesSearchForPaymentResultData", "Customer", new { area = "Portal" })?customerId=' + id

            return sURL;
        }

        function showManualPayment(id) {

            var currenturl = '@Url.Action("ManualPaymentPopup", "Customer",new { area="Portal" })?id=' + id;
            $.ajax({
                type: "GET",
                url: currenturl,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#divmodal_ManualPayment').html(data);
                    manualPaymentInIt();
                    $('#modal_ManualPayment').modal('show');
                },
                error: function () {
                    alert("Content load failed.");
                }
            });
        }

        function btnOpenApplyCreditForm(id) {

            var sURL = '@Url.Action("ApplyCreditForm", "Customer", new { area = "Portal" })?Id=' + id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#form_applycreditform').html(data);
                    $(".date-picker").datepicker();
                    $("#modal_applycreditform").modal({ backdrop: 'static' });
                    initCreditForm();
                },
                error: function () {
                    alert("Content load failed.");
                }
            });
        };

        function onClickSaveAndCloseMP() {
            $("#modal_ManualPayment").modal("hide");
            $("#SaveMethod").val("SaveClose");
            continueSaveProcessfrm();
            // go back to customer page?
        }

        function onClickSaveAndNewMP() {
            $("#modal_ManualPayment").modal("hide");
            $("#SaveMethod").val("SaveNew");
            continueSaveProcessfrm();
            // refresh to allow new payment entry?
        }

        function continueSaveProcessfrm() {

            saveInProgress = true;
            isLastPrompt = true;
            var nextPrompt = "";

            $("[id$=totalPayment]").each(function () {

                if (!isLastPrompt)
                    return;

                var inv = getInvoiceIdChunk(this);
                var invId = inv.substr(3);

                if (promptedInvoices.indexOf(invId) == -1) { // invoice not checked yet

                    var invPrefix = getInvoicePrefix(inv);

                    var isChecked = $("#" + invPrefix + "chk").prop("checked");
                    var newInvBalance = parseFloat($("#" + invPrefix + "balance").val());
                    var shouldPrompt = $.isNumeric(newInvBalance) && newInvBalance > 0 && isChecked;

                    if (shouldPrompt) { // invoice needs to be prompted
                        if (nextPrompt != "") {
                            isLastPrompt = false;
                            return;
                        }
                        else {
                            nextPrompt = invId;
                        }
                    }
                }
            });

            if (nextPrompt != "")
                promptApplyPaymentFormMP(nextPrompt);
            else
                finishSaveProcessfrm();
        }

        function finishSaveProcessfrm() {

            // disable fields for non-selected invoice to keep them out of the POST

            $(".payment-checkbox").each(function () {
                if (!$(this).prop("checked")) { // invoice checkbox is not checked, so disable fields
                    var inv = getInvoiceIdChunk(this);
                    var invFilter = getInvoiceFilter(inv);
                    $(invFilter).attr("disabled", "disabled");
                }
            });

            $("#form_applypayment").submit();
        }

        $('#modal_applypaymentprompt').on('hidden.bs.modal', function () {
            if (saveInProgress) {
                var invId = currentPromptedInvoice;
                var inv = "inv" + invId;
                var invPrefix = getInvoicePrefix(inv);
                var hasMultipleItems = $("#" + invPrefix + "hasMultipleItems").val() == "true";

                if (hasMultipleItems)
                    openApplyPaymentForm(currentPromptedInvoice);
                else
                    continueToNextInvoice(invId);
            }
        });
        function promptApplyPaymentFormMP(invId) {
            currentPromptedInvoice = invId;

            var inv = "inv" + invId;
            var invPrefix = getInvoicePrefix(inv);

            var invoiceNo = $("#" + invPrefix + "invoiceNo").val();

            $("#lblPromptInvoiceNo").text(invoiceNo.trim());
            $("#modal_applypaymentprompt").modal({ backdrop: 'static' });
        }

        function getInvoiceIdChunk(elem) {
            return $(elem).attr("id").split('_')[0];
        }

        function getInvoiceFilter(inv) {
            return "[id^=" + getInvoicePrefix(inv) + "]";
        }

        function getInvoicePrefix(inv) {
            return inv + "_";
        }



        $(window).load(function () {
            if ('@ViewBag.selectedRegionId' == 0) {
                $("#modal_RegionModel").modal({ backdrop: 'static' });
            }

        });

    </script>
}


@*<script>
        $(window).load(function () {

            $(".chosen-select").chosen({ no_results_text: "Oops, nothing found!" });

            $('#ddlRegionIds').chosen();
        });
    </script>>*@
