@model JKViewModels.Customer.FullCustomerViewModel

@{
    if (Model.Contract == null)
    {
        Model.Contract = new JKViewModels.Customer.ContractViewModel();
    }
}

<div class="custom-form portlet light" id="">
    <div class="portlet-body">
        @using (Html.BeginForm("SaveCustomerContractDetails", "Customer", FormMethod.Post, new { @id = "SaveCustomerContractform_wizard_1", @role = "form", @class = "form form-horizontal", style = "margin: 0px;" }))
        {
        @Html.HiddenFor(one => one.Contract.ContractId)
        @Html.HiddenFor(one => one.ButtonType)
        @Html.HiddenFor(one => one.CustomerViewModel.CustomerId)
        @Html.HiddenFor(one => one.CustomerViewModel.CreatedBy)
        @Html.HiddenFor(one => one.CustomerViewModel.CreatedDate)
        @Html.HiddenFor(one => one.CustomerViewModel.CustomerNo)
        @Html.HiddenFor(one => one.MainContact.ContactId)
        @Html.HiddenFor(one => one.MainContact.IsActive)
        @Html.HiddenFor(one => one.MainContact.CreatedBy)
        @Html.HiddenFor(one => one.MainContact.CreatedDate)
        @Html.HiddenFor(one => one.MainAddress.AddressId)
        @Html.HiddenFor(one => one.MainAddress.IsActive)
        @Html.HiddenFor(one => one.MainAddress.CreatedBy)
        @Html.HiddenFor(one => one.MainAddress.CreatedDate)

        @Html.HiddenFor(one => one.MainAddress.Address1)
        @Html.HiddenFor(one => one.MainAddress.Address2)
        @Html.HiddenFor(one => one.MainAddress.City)
        @Html.HiddenFor(one => one.MainAddress.StateListId)
        @Html.HiddenFor(one => one.MainAddress.PostalCode)

        @Html.HiddenFor(one => one.MainEmail.EmailId)
        @Html.HiddenFor(one => one.MainEmail.IsActive)
        @Html.HiddenFor(one => one.MainEmail.CreatedBy)
        @Html.HiddenFor(one => one.MainEmail.CreatedDate)
        @Html.HiddenFor(one => one.MainPhone.PhoneId)
        @Html.HiddenFor(one => one.MainPhone.IsActive)
        @Html.HiddenFor(one => one.MainPhone.CreatedBy)
        @Html.HiddenFor(one => one.MainPhone.CreatedDate)

        @Html.HiddenFor(one => one.BillingContact.ContactId)
        @Html.HiddenFor(one => one.BillingContact.IsActive)
        @Html.HiddenFor(one => one.BillingContact.CreatedBy)
        @Html.HiddenFor(one => one.BillingContact.CreatedDate)
        @Html.HiddenFor(one => one.BillingAddress.AddressId)
        @Html.HiddenFor(one => one.BillingAddress.IsActive)
        @Html.HiddenFor(one => one.BillingAddress.CreatedBy)
        @Html.HiddenFor(one => one.BillingAddress.CreatedDate)

        @Html.HiddenFor(one => one.ContactInformation.ContactId)
        @Html.HiddenFor(one => one.ContactInformation.IsActive)
        @Html.HiddenFor(one => one.ContactInformation.CreatedDate)

        @Html.HiddenFor(one => one.ContactInformationAddress.AddressId)
        @Html.HiddenFor(one => one.ContactInformationAddress.CreatedBy)
        @Html.HiddenFor(one => one.ContactInformationAddress.CreatedDate)

        @Html.HiddenFor(one => one.ContactInformationEmail.EmailId)
        @Html.HiddenFor(one => one.ContactInformationEmail.IsActive)
        @Html.HiddenFor(one => one.ContactInformationEmail.CreatedBy)
        @Html.HiddenFor(one => one.ContactInformationEmail.CreatedDate)
        @Html.HiddenFor(one => one.ContactInformationPhone.PhoneId)
        @Html.HiddenFor(one => one.ContactInformationPhone.IsActive)
        @Html.HiddenFor(one => one.ContactInformationPhone.CreatedBy)
        @Html.HiddenFor(one => one.ContactInformationPhone.CreatedDate)
        @Html.HiddenFor(one => one.BillingInformation.IsActive)
        @Html.HiddenFor(one => one.BillingInformation.CreatedBy)
        @Html.HiddenFor(one => one.BillingInformation.CreatedDate)
        @Html.HiddenFor(one => one.BillingInformationAddress.AddressId)
        @Html.HiddenFor(one => one.BillingInformationAddress.IsActive)
        @Html.HiddenFor(one => one.BillingInformationAddress.CreatedBy)
        @Html.HiddenFor(one => one.BillingInformationAddress.CreatedDate)
        @Html.HiddenFor(one => one.BillingInformationEmail.EmailId)
        @Html.HiddenFor(one => one.BillingInformationEmail.IsActive)
        @Html.HiddenFor(one => one.BillingInformationEmail.CreatedBy)
        @Html.HiddenFor(one => one.BillingInformationEmail.CreatedDate)
        @Html.HiddenFor(one => one.BillingInformationPhone.PhoneId)
        @Html.HiddenFor(one => one.BillingInformationPhone.IsActive)
        @Html.HiddenFor(one => one.BillingInformationPhone.CreatedBy)
        @Html.HiddenFor(one => one.BillingInformationPhone.CreatedDate)


        @Html.HiddenFor(one => one.BillSetting.CustomerId)
        @Html.HiddenFor(one => one.BillSetting.BillSettingsId)

        @Html.HiddenFor(one => one.Contract.CustomerId)
        @Html.HiddenFor(one => one.Contract.ContractId)
        @Html.HiddenFor(one => one.Contract.StatusId)
        @Html.HiddenFor(one => one.Contract.StatusListId)

        @Html.HiddenFor(one => one.ContractAddress.AddressId)
        @Html.HiddenFor(one => one.ContractAddress.IsActive)
        @Html.HiddenFor(one => one.ContractAddress.CreatedBy)
        @Html.HiddenFor(one => one.ContractAddress.CreatedDate)
        @Html.HiddenFor(one => one.Contract.ContractTypeListId)
        <input type="hidden" id="hdnStatuslistId" name="hdnStatuslistId" value="@Model.CustomerViewModel.StatusListId" />
        <input type="hidden" id="hdncallfrom" name="hdncallfrom" value="@ViewBag.callfrom" />
        <input type="hidden" id="hdnContractTypeListId" name="hdnContractTypeListId" value="@Model.Contract.ContractTypeListId" />
        <input type="hidden" id="hdnRedirect" name="hdnRedirect" value="" />
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true" style="margin-top: 12px !important;margin-right: 12px !important;"></button>
        <h4 class="blocktop" style="margin-top:-23px">Customer Contract</h4>
        <div class="row">
            <div class="col-md-12">
                <label class="control-label col-md-2" style="font-weight:600;">
                    Customer No.
                </label>
                <div class="col-md-4">
                    <label class="control-label col-md-4" style="width:auto;">
                        @Html.DisplayFor(one => one.CustomerViewModel.CustomerNo)
                    </label>
                </div>
                <div class="col-md-1 col-md-offset-1">
                    <label class="control-label" style="font-weight:600;padding-left:15px;">
                        Address
                    </label>
                </div>
                <div class="col-md-4">
                    <label class="control-label" style="width:auto;">
                        @Html.Raw(ViewBag.Address)
                    </label>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <label class="control-label col-md-2" style="font-weight:600;">
                    Customer Name
                </label>
                <div class="col-md-4">
                    <label class="control-label col-md-4" style="width:auto;">
                        @Html.DisplayFor(one => one.CustomerViewModel.Name)
                    </label>
                </div>
                <div class="col-md-1 col-md-offset-1">
                    <label class="control-label" style="font-weight:600;">
                    </label>
                </div>
                <div class="col-md-4">
                    <label class="control-label" style="width:auto;">
                        @Html.Raw(ViewBag.Address2)
                    </label>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <hr style="margin-top: 2px;margin-bottom: 1px;" />
            </div>
        </div>
        <div class="row">
            <div class="form-group">
                <label class="control-label col-md-3">
                    <b>Service Location</b>
                </label>
                <div class="col-md-8">
                    <label class="mt-checkbox">
                        <input type="checkbox" id="chkcopyaddresstoContract" class="clsContractview">Same as Main Address
                        <span></span>
                    </label>
                </div>
            </div>
        </div>
        <input type="hidden" id="hdnIsAddressChange" name="hdnIsAddressChange" value="0" />
        <input type="hidden" id="hdnAddress1" name="hdnAddress1" value="@(Model.ContractAddress != null ? Model.ContractAddress.Address1 : string.Empty)" />
        <input type="hidden" id="hdnAddress2" name="hdnAddress2" value="@(Model.ContractAddress != null ? Model.ContractAddress.Address2:string.Empty)" />
        <input type="hidden" id="hdnCity" name="hdnCity" value="@(Model.ContractAddress != null ? Model.ContractAddress.City:string.Empty)" />
        <input type="hidden" id="hdnStateListId" name="hdnStateListId" value="@(Model.ContractAddress != null ? Model.ContractAddress.StateListId.ToString():string.Empty)" />
        <input type="hidden" id="hdnPostalCode" name="hdnPostalCode" value="@(Model.ContractAddress != null ? Model.ContractAddress.PostalCode :string.Empty)" />
        <div class="row">
            <div class="form-group">
                <label class="control-label col-md-3">
                    Address
                    <span class="required"> * </span>
                </label>
                <div class="col-md-3">
                    @Html.TextBoxFor(one => one.ContractAddress.Address1, new { @class = "form-control input-sm clsContractview", placeholder = "Required", required = "required" })
                </div>
                <label class="control-label col-md-1">
                    Address2
                </label>
                <div class="col-md-3">
                    @Html.TextBoxFor(one => one.ContractAddress.Address2, new { @class = "form-control input-sm clsContractview", placeholder = "" })
                </div>
            </div>
        </div>
        <div>
            <div class="form-group">
                <label class="control-label col-md-3">
                    City
                    <span class="required"> * </span>
                </label>
                <div class="col-md-2">
                    @Html.TextBoxFor(one => one.ContractAddress.City, new { @class = "form-control input-sm clsContractview", required = "required", placeholder = "Required" })
                </div>
                <label class="control-label col-md-1">
                    State
                    <span class="required"> * </span>
                </label>
                <div class="col-md-2">
                    @Html.DropDownList("ContractStatesList", null, "Select", new { @class = "form-control input-sm clsContractview", required = "required", @id = "ContractStatesList" })
                </div>
                <label class="control-label col-md-1">
                    Zip
                    <span class="required"> * </span>
                </label>
                <div class="col-md-2">
                    @Html.TextBoxFor(one => one.ContractAddress.PostalCode, new { @class = "form-control input-sm clsContractview", required = "required", placeholder = "Required" })
                </div>
            </div>
        </div>

        <div class="col-md-12">
            <hr style="margin-top: 2px;margin-bottom: 1px;" />
        </div>
        <div class="form-group">
            <label class="control-label col-md-3">
                Account Type <span class="required"> * </span>
            </label>
            <div class="col-md-3">
                @Html.DropDownList("AccountTypeList", null, "Select", new { @class = "form-control input-sm clsContractview", required = "required", @id = "AccountTypeList" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-3">
                Contract Type
            </label>
            <div class="col-md-3">
                @Html.DropDownList("ContractTypeList", null, new { @class = "form-control input-sm clsContractview", @id = "ContractTypeList", required = "required" })
            </div>
        </div>
        <div id="divContractTypeHide1">
            <div class="form-group">
                <label class="control-label col-md-3">
                    Agreement Type<span class="required"> * </span>
                </label>
                <div class="col-md-3">
                    @Html.DropDownList("AgreementTypeList", null, "Select", new { @class = "form-control input-sm clsContractview", @id = "AgreementTypeList", required = "required" })
                    <input type="hidden" id="hdnAgreementTypeCPI" value="@((Convert.ToBoolean(ViewBag.AgreementTypeCPI)==true ? 1:0))" />
                </div>
                <label class="control-label col-md-2">
                    Acct Exec:
                </label>
                <div class="col-md-3">
                    @Html.DropDownListFor(x => x.Contract.SoldById, (IEnumerable<SelectListItem>)ViewBag.userList, new { @class = "form-control input-sm editmain1 clsContractview" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-3">
                    PO Number
                </label>
                <div class="col-md-3">
                    @Html.TextBoxFor(one => one.Contract.PurchaseOrderNo, new { @class = "form-control input-sm clsContractview", id = "Contract_PurchaseOrderNo" })
                </div>
            </div>
            <div class="form-group" style="display:none;">
                <label class="control-label col-md-3">
                    Agreement Used
                </label>
                <div class="col-md-2" style="padding-top: 7px;">
                    <label class="mt-checkbox">
                        @Html.CheckBoxFor(one => one.Contract.Qualified, new { @class = "i-checks clsContractview", @checked = "true", id = "Contract_Qualified" }) Qualified
                        <span></span>
                    </label>
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-3">
                    Sign Date
                </label>
                <div class="col-md-2">
                    <div class="input-group date" data-date-format="mm/dd/yyyy">
                        <input id="Contract_SignDate" name="Contract.SignDate" class="form-control input-sm date date-picke clsContractview" value="@(Model.Contract.SignDate != null ? Convert.ToDateTime(Model.Contract.SignDate).ToString("MM/dd/yyyy") : string.Empty )" />
                        <span class="input-group-btn cal-btn">
                            <button class="btn default cal-btn" type="button">
                                <i class="fa fa-calendar"></i>
                            </button>
                        </span>
                    </div>
                </div>

                <label class="control-label col-md-3">
                    Start Date
                </label>
                <div class="col-md-2">
                    <div class="input-group date" data-date-format="mm/dd/yyyy">
                        <input id="Contract_StartDate" name="Contract.StartDate" class="form-control input-sm date date-picker clsContractview" value="@(Model.Contract.StartDate != null ? Convert.ToDateTime(Model.Contract.StartDate).ToString("MM/dd/yyyy") : string.Empty )" />
                        <span class="input-group-btn cal-btn">
                            <button class="btn default cal-btn" type="button">
                                <i class="fa fa-calendar"></i>
                            </button>
                        </span>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-3">
                    Term Months
                </label>
                <div class="col-md-2">
                    @Html.TextBoxFor(one => one.Contract.ContractTermMonth, new { @class = "form-control input-sm clsContractview", id = "Contract_ContractTermMonth", style = "width: 43px;float:left;", maxlength = "3" })<span style="float:left;padding:7px 4px;"></span>
                </div>

                <label class="control-label col-md-3">
                    Auto Renew Date
                </label>
                <div class="col-md-2">
                    <div class="input-group">                        
                        <input id="Contract_ExpirationDate" name="Contract.ExpirationDate" class="form-control input-sm clsContractview" readonly="readonly" value="@(Model.Contract.ExpirationDate != null ? Convert.ToDateTime(Model.Contract.ExpirationDate).ToString("MM-dd-yyyy") : string.Empty )" />                       
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-3">
                    Amount<span class="required"> * </span>
                </label>
                <div class="col-md-2">
                    @Html.TextBoxFor(one => one.Contract.Amount, new { @class = "form-control input-sm clsContractview", id = "Contract_Amount", style = "text-align:right;" })
                </div>
                <input type="hidden" id="hdnAmount" value="@(Model.Contract.Amount.HasValue ?Model.Contract.Amount.Value : 0)" />
                <span id="errmsg" style="color:red;display:none;">Contract Amount should not be less than the contract detail total amount!</span>              
            </div>
            <div class="form-group">
                <label class="control-label col-md-3">
                    Description
                </label>
                <div class="col-md-7">
                    @Html.TextAreaFor(one => one.Contract.ContractDescription, new { @class = "form-control input-sm clsContractview", @cols = "35", @rows = "3", id = "Contract_ContractDescription" })
                </div>
            </div>
            <div class="form-actions">
                <button type="button" class="btn btn-primary button-next  pull-right" id="btnContractSave" style="margin-right: 30px;">
                    Save
                    <i class="fa fa-check"></i>
                </button>
                <button type="button" class="btn btn-primary  pull-right" id="btnContractCancel" style="margin-right: 22px;" onclick="ClickContractCancel()">
                    Cancel
                    <i class="fa fa-angle-right"></i>
                </button>
            </div>
        </div>

        <div id="divContractTypeHide2">
            <h4 class="block">Contract Detail</h4>

            <div id="tblContractDescriptionData">
                @if (Model != null && Model._ContractDetail != null)
                    {
                        @Html.Partial("~/Areas/Portal/Views/Customer/_ContractDetailDescription.cshtml", Model._ContractDetail)
                    }

            </div>
        </div>
        <div class="form-actions">
            <button type="button" class="btn btn-primary" id="btnEditContract" onclick="btnEditClick()" style="margin-left: 10px;display:none;">
                Edit
                <i class="fa fa-edit"></i>
            </button>
           
            <button type="button" class="btn btn-primary button-next  pull-right" id="btnContractClose" style="margin-right: 30px;" data-dismiss="modal">
                Close
                <i class="fa fa-close"></i>
            </button>
        </div>       
        }
        <div class="modal fade custom-model custom-form-design" id="modalDataCusContractPopup" tabindex="-1" role="basic" aria-hidden="true" style="display: none;"></div>
    </div>
</div>


<script type="text/javascript">

    //$(".date-picker").datepicker();
    $("#Contract_ContractTermMonth").keypress(function (e) {
        if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
            return false;
        }
    });
    $("#ContractAddress_PostalCode").keypress(function (e) {
        if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
            return false;
        }
    });

    function contractDetailPopupInIt() {
    }
    var _StartDateCD = '@(Model.Contract.StartDate != null ? Convert.ToDateTime(Model.Contract.StartDate).ToString("MM/dd/yyyy") : string.Empty )';

    var _SignDateCD = '@(Model.Contract.SignDate != null ? Convert.ToDateTime(Model.Contract.SignDate).ToString("MM/dd/yyyy") : string.Empty )';
    $(document).ready(function () {
        $("#btnContractSave").hide();
        $("#btnContractCancel").hide();
        $("#btnEditContract").show();
        $("#btnContractClose").show();
        $(".subsectionBtn").hide();
        $(".clsContractview").attr("disabled", "disabled");
        if ($("#ContractTypeList").val() == 2) {
            $("#divContractTypeHide1").hide();
            $("#divContractTypeHide2").hide();
        }
        else {
            $("#divContractTypeHide1").show();
            $("#divContractTypeHide2").show();
        }

        $("#ContractTypeList").change(function (e) {

        

        //swal({
        //    title: "Are you sure you want to change Customer Contract Type?",
        //    text: "To complete change customer contract type please go to Region Operation \ Customer Pending",
        //    type: "warning",
        //    showCancelButton: true,
        //    confirmButtonClass: "btn-confirmr",
        //    confirmButtonText: "Yes",
        //    cancelButtonText: "No",
        //    closeOnConfirm: false,
        //    closeOnCancel: false
        //},
        //    function (isConfirm) {
        //        if (isConfirm) {
        //            //if ($("#hdnStatuslistId").val() == 1) {
        //            //        $("#divContractTypeHide1").hide();
        //            //        $("#divContractTypeHide2").hide();
        //            //    }
        //            //    else {
        //            //        if (this.value == 2) {
        //            //            $("#divContractTypeHide1").hide();
        //            //            $("#divContractTypeHide2").hide();
        //            //        }
        //            //        else {
        //            //            $("#divContractTypeHide1").show();
        //            //            $("#divContractTypeHide2").show();
        //            //        }
        //            //    }
        //        } else {
        //            swal("Cancelled", "Contract Type change has been cancelled", "error");
        //        }
        //    });
        });

        //$('.date-picker').datepicker({ autoclose: true, dateFormat: 'mm/dd/yy' });
        //$('.date-picker').attr("placeholder", "mm/dd/yyyy");


        $("#Contract_SignDate").datepicker({
            numberOfMonths: 1,
            //beforeShowDay: function (date) {
            //    if (new Date(date) <= new Date(_StartDateCD))
            //        return [true, '', ''];
            //    else
            //        return [false, '', ''];
            //},
            onSelect: function (selected) {
                var dt = new Date(selected);
                dt.setDate(dt.getDate());
                _SignDateCD = dt;
                if (new Date(_SignDateCD) < new Date(_StartDateCD)) {
                    _StartDateCD = _SignDateCD;
                    $("#Contract_StartDate").datepicker("setDate", new Date(_StartDateCD));
                }
                $("#Contract_StartDate").datepicker("option", "minDate", dt);


                var monthadd = $("#Contract_ContractTermMonth").val();
                var startdate = $("#Contract_StartDate").val();
                var contractstartdate = new Date(startdate);

                if (monthadd == "")
                    monthadd = 0;

                contractstartdate.setMonth(contractstartdate.getMonth() + parseInt(monthadd));
                var c = (contractstartdate.getMonth() + 1) + '/' + contractstartdate.getDate() + '/' + contractstartdate.getFullYear()
                //$("#Contract_ExpirationDate").val(c);

            }
        });
        $("#Contract_StartDate").datepicker({
            numberOfMonths: 1,
            beforeShowDay: function (date) {
                if (new Date(date) >= new Date(_SignDateCD))
                    return [true, '', ''];
                else
                    return [false, '', ''];
            },
            onSelect: function (selected) {
                var dt = new Date(selected);
                dt.setDate(dt.getDate());
                _StartDateCD = dt;

                var monthadd = $("#Contract_ContractTermMonth").val();
                var startdate = $("#Contract_StartDate").val();
                var contractstartdate = new Date(startdate);

                if (monthadd == "")
                    monthadd = 0;

                contractstartdate.setMonth(contractstartdate.getMonth() + parseInt(monthadd));
                var c = (contractstartdate.getMonth() + 1) + '/' + contractstartdate.getDate() + '/' + contractstartdate.getFullYear()
                $("#Contract_ExpirationDate").val(c);
                //$("#Contract_SignDate").datepicker("option", "maxDate", dt);
            }
        });

        //$("#Contract_SignDate").datepicker("setDate", new Date(_SignDate));
        //$("#Contract_StartDate").datepicker("setDate", new Date(_StartDate));

        function getDate(element) {
            var date;
            try {
                date = $.datepicker.parseDate(dateFormat, element.value);
            } catch (error) {
                date = null;
            }
            return date;
        }

        applyMaskCurrency('#Contract_Amount');

        $("#Contract_Amount").change(function () {
            $("#hdnAmount").val($(this).val());
        });

        if ($('#Contract_ContractId').val() != null && $('#Contract_ContractId').val() != "") {
            loadOwners($('#Contract_ContractId').val());
        }

        $("#btnContractClose").click(function () {
            $("#modal_CustomerContractPopup").modal("hide");
        })

        $('#btnContractSave').click(function () {

            var isvalid = true;
            if ($("#ContractTypeList").val() == 2) {
                if ($('#ContractAddress_Address1').val() == '') { $('#ContractAddress_Address1').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#ContractAddress_Address1').css('border-color', ''); }
                if ($('#ContractAddress_City').val() == '') { $('#ContractAddress_City').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#ContractAddress_City').css('border-color', ''); }
                if ($('#ContractStatesList').val() == '') { $('#ContractStatesList').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#ContractStatesList').css('border-color', ''); }
                if ($('#ContractAddress_PostalCode').val() == '') { $('#ContractAddress_PostalCode').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#ContractAddress_PostalCode').css('border-color', ''); }
                if ($('#AccountTypeList').val() == '') { $('#AccountTypeList').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#AccountTypeList').css('border-color', ''); }
            }
            else {
                if ($("#hdnContractTypeListId").val() == 2) {
                    if ($('#ContractAddress_Address1').val() == '') { $('#ContractAddress_Address1').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#ContractAddress_Address1').css('border-color', ''); }
                    if ($('#ContractAddress_City').val() == '') { $('#ContractAddress_City').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#ContractAddress_City').css('border-color', ''); }
                    if ($('#ContractStatesList').val() == '') { $('#ContractStatesList').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#ContractStatesList').css('border-color', ''); }
                    if ($('#ContractAddress_PostalCode').val() == '') { $('#ContractAddress_PostalCode').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#ContractAddress_PostalCode').css('border-color', ''); }
                    if ($('#AccountTypeList').val() == '') { $('#AccountTypeList').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#AccountTypeList').css('border-color', ''); }
                    $("#hdnRedirect").val("38");
                }
                else {
                    if ($('#ContractAddress_Address1').val() == '') { $('#ContractAddress_Address1').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#ContractAddress_Address1').css('border-color', ''); }
                    if ($('#ContractAddress_City').val() == '') { $('#ContractAddress_City').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#ContractAddress_City').css('border-color', ''); }
                    if ($('#ContractStatesList').val() == '') { $('#ContractStatesList').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#ContractStatesList').css('border-color', ''); }
                    if ($('#ContractAddress_PostalCode').val() == '') { $('#ContractAddress_PostalCode').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#ContractAddress_PostalCode').css('border-color', ''); }
                    //if ($('#Contract_PurchaseOrderNo').val() == '') { $('#Contract_PurchaseOrderNo').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#Contract_PurchaseOrderNo').css('border-color', ''); }
                    if ($('#AccountTypeList').val() == '') { $('#AccountTypeList').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#AccountTypeList').css('border-color', ''); }

                    if ($('#AgreementTypeList').val() == '') { $('#AgreementTypeList').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#AgreementTypeList').css('border-color', ''); }


                    if ($('#Contract_SignDate').val() == '') { $('#Contract_SignDate').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#Contract_SignDate').css('border-color', ''); }
                    if ($('#Contract_StartDate').val() == '') { $('#Contract_StartDate').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#Contract_StartDate').css('border-color', ''); }

                    //if ($('#Contract_ContractTermListId').val() == '') { $('#Contract_ContractTermListId').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#Contract_ContractTermListId').css('border-color', ''); }
                    if ($('#Contract_ContractTermMonth').val() == '') { $('#Contract_ContractTermMonth').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#Contract_ContractTermMonth').css('border-color', ''); }
                    if ($('#Contract_ExpirationDate').val() == '') { $('#Contract_ExpirationDate').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#Contract_ExpirationDate').css('border-color', ''); }

                    if ($('#Contract_Amount').val() == '') { $('#Contract_Amount').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#Contract_Amount').css('border-color', ''); }
                    if ($('#Contract_AmountSubjectToFee').val() == '') { $('#Contract_AmountSubjectToFee').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#Contract_AmountSubjectToFee').css('border-color', ''); }

                    if ($('#Contract_StatusDate').val() == '') { $('#Contract_StatusDate').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#Contract_StatusDate').css('border-color', ''); }
                    if ($('#Contract_ResumeDate').val() == '') { $('#Contract_ResumeDate').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#Contract_ResumeDate').css('border-color', ''); }
                    if ($('#Contract_AmountSubjectToFee').val() == '') { $('#Contract_AmountSubjectToFee').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#Contract_AmountSubjectToFee').css('border-color', ''); }

                   
                    if (parseFloat($("#Contract_Amount").val()) != parseFloat($("#hdnTotAmount").val())) {
                        $('#Contract_Amount').css('border-color', 'red');
                        $('.clsamt').css('border-color', 'red');
                        $('.clsamt').css('border-left', '2px solid red');
                        $('.clsamt').css('border-right', '2px solid red');
                        $("#errmsg").show();
                        isvalid = false;
                    }
                    else {

                        $('#Contract_Amount').css('border-color', '');
                        $('.clsamt').css('border-color', '');
                        $("#errmsg").hide();
                    }

                    if ($('#generalCustomerList>tbody>tr').length == 0) {
                        $('#generalCustomerList>thead>tr').css('border', '1px solid red');
                        isvalid = false;

                    } else {
                        $('#generalCustomerList>thead>tr').css('border-color', '');
                    }

                }
            }
            if (isvalid == true) {

                if ($("#hdnAddress1").val() != $("#ContractAddress_Address1").val() || $("#hdnAddress2").val() != $("#ContractAddress_Address2").val() || $("#hdnCity").val() != $("#ContractAddress_City").val()
                    || $("#hdnStateListId").val() != $("#ContractStatesList").val() || $("#hdnPostalCode").val() != $("#ContractAddress_PostalCode").val()) {
                    $("#hdnIsAddressChange").val("1");
                }
                else {
                    $("#hdnIsAddressChange").val("0");
                }


                var ContractAmount = 0;
                //if ($("#ContractId").val() == "0" || $("#ContractId").val() == "") {
                ContractAmount = parseFloat(parseFloat($("#hdnAmount").val()).toFixed(2) - parseFloat($("#hdnTotAmount").val()).toFixed(2)).toFixed(2);
                /*}
                else {
                    var EditAmt = parseFloat($("#hdnTotAmount").val()); // - parseFloat($("#hdnContractDetailAmount").val());
                    ContractAmount = parseFloat(parseFloat($("#hdnAmount").val()) - parseFloat(parseFloat(EditAmt) + parseFloat($("#ContractDetail_Amount").val()))).toFixed(2);
                }*/
                //if (parseFloat(parseFloat($("#ContractDetail_Amount").val()).toFixed(2)) <= (parseFloat(ContractAmount) + parseFloat($("#ContractDetail_Amount").val())).toFixed(2)) {

                $("#errmsg").hide();
                $('#ContractDetail_Amount').css('border-color', '');

                //$("#btnSubmit").hide();
                //$("#SaveCustomerContractform_wizard_1").submit();

                $.ajax({
                    url: '@Url.Action("SaveCustomerContractDetails", "Customer",new { area = "Portal" })',
                    type: "POST",
                    data: $('#SaveCustomerContractform_wizard_1').serialize(),
                    success: function (data) {
                        //swal('congrats!', 'Contract Information save successfully.', 'info');
                        //$('#modal_CustomerContractPopup').modal('hide');
                        //$("#modal_CustomerContractPopup .close").click()

                        $("#btnContractSave").hide();
                        $("#btnContractCancel").hide();
                        $("#btnEditContract").show();
                        $("#btnContractClose").show();
                        //$("#btnSubmit").hide();
                        $(".subsectionBtn").hide();
                        $(".clsContractview").attr("disabled", "disabled");
                        if (data != "0" && data != "") {
                            $("#ContractAddress_AddressId").val(data);
                        }
                        $("#hdnAddress1").val($("#ContractAddress_Address1").val());
                        $("#hdnAddress2").val($("#ContractAddress_Address2").val());
                        $("#hdnCity").val($("#ContractAddress_City").val());
                        $("#hdnStateListId").val($("#ContractStatesList").val());
                        $("#hdnPostalCode").val($("#ContractAddress_PostalCode").val());
                        if ($("#hdnRedirect").val() == 38)
                        {
                            var url = '/CRM/CRMRegionOperation/Index';
                            window.location.href = url;
                        }
                        $("#btnContractClose").click(function () {
                            $("#modal_CustomerContractPopup").modal("hide");
                        })

                    },
                    error: function () { }
                });
                //}
                //else {
                //    $("#errmsg").show();
                //    $('#ContractDetail_Amount').css('border-color', 'red');

                //swal('Oops...', 'Contract detail amount should not be higher than contract amount!', 'warning');
                //    return false;
                //}
            }
        });

        $('#chkcopyaddresstoContract').change(function () {

            var ContractAddress_Address1 = $('#ContractAddress_Address1');
            var ContractAddress_Address2 = $('#ContractAddress_Address2');
            var ContractAddress_City = $('#ContractAddress_City');
            var ContractStatesList = $('#ContractStatesList');
            var ContractAddress_PostalCode = $('#ContractAddress_PostalCode');


            if ($(this).prop('checked')) {
                ContractAddress_Address1.val($('#MainAddress_Address1').val());
                ContractAddress_Address2.val($('#MainAddress_Address2').val());
                ContractAddress_City.val($('#MainAddress_City').val());
                ContractStatesList.val($('#MainAddress_StateListId').val());
                ContractAddress_PostalCode.val($('#MainAddress_PostalCode').val());

                ContractAddress_Address1.attr("readonly", "readonly");
                ContractAddress_Address2.attr("readonly", "readonly");
                ContractAddress_City.attr("readonly", "readonly");
                ContractStatesList.attr("readonly", "readonly");
                ContractAddress_PostalCode.attr("readonly", "readonly");
            }
            else {
                ContractAddress_Address1.val('');
                ContractAddress_Address2.val('');
                ContractAddress_City.val('');
                ContractStatesList.val('');
                ContractAddress_PostalCode.val('');

                ContractAddress_Address1.removeAttr("readonly");
                ContractAddress_Address2.removeAttr("readonly");
                ContractAddress_City.removeAttr("readonly");
                ContractStatesList.removeAttr("readonly");
                ContractAddress_PostalCode.removeAttr("readonly");
            }
        });
        $(".subsectionBtn").hide();
    });




    $(function () {
        // AddContractDetailDescription = function (ContractId, ContractDetailId) {
        window.AddContractDetailDescription = function (ContractDetailId) {
            //$.blockUI({
            //baseZ: 99999,
            //message: '<center><img height: src="/Images/loading_icon.gif" /><h3> <b>Processing....</br> Please wait! and do not refresh page.</b></h3></center>',
            //css: { backgroundColor: 'rgb{0,0,0}', border: '0', color: '#fff', "z-index": 99999 }
            //});
            var ContractId = 0;
            if ($('#ContractDetail_ContractId').val() != "") {
                ContractId = $('#ContractDetail_ContractId').val();
            }
            if ($('#Contract_ContractId').val() != 0) {
                ContractId = $('#Contract_ContractId').val();
            }
            else {
                swal(
                    'Oops...',
                    'Save Customer Contract First, Before add Contract Detail!',
                    'warning'
                );
            }

            if (ContractId > 0 && ContractDetailId > 0) {
                var url = '/Portal/Customer/AddCustomerContractPopupDetail/?ContractId=' + ContractId + '&ContractDetailId=' + ContractDetailId

                $.get(url, function (data) {
                    $('#modalDataCusContractPopup').html(data);
                    $('#modalDataCusContractPopup').modal();


                })
            }
            else if (ContractId > 0) {
                var url = '/Portal/Customer/AddCustomerContractPopupDetail/?ContractId=' + ContractId + '&ContractDetailId=' + ContractDetailId
                $.get(url, function (data) {
                    $('#modalDataCusContractPopup').html(data);
                    $('#modalDataCusContractPopup').modal();
                })
                //Reset();
            }
            //$.unblockUI();

        }

    });

    function btnSubmitClick()
    {
        if ($("#ContractTypeList").val() == 2) {
            var isvalid = true;

            if ($('#AccountTypeList').val() == '') { $('#AccountTypeList').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#AccountTypeList').css('border-color', ''); }

            if ($('#Address1').val() == '') { $('#Address1').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#Address1').css('border-color', ''); }

            if ($('#City').val() == '') { $('#City').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#City').css('border-color', ''); }

            if ($('#PostalCode').val() == '') { $('#PostalCode').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#PostalCode').css('border-color', ''); }
            if (isvalid == true) {


                $.ajax({
                    url: '@Url.Action("SaveCustomerContractDetails", "Customer",new { area = "Portal" })',
                    type: "POST",
                    data: $('#SaveCustomerContractform_wizard_1').serialize(),
                    success: function (data) {
                        swal('congrats!', 'Contract Information save successfully.', 'info');

                    },
                    error: function () { }
                });

            }
        }
        $("#modal_CustomerContractPopup .close").click();
    }
    function btnEditClick()
    {
        $("#btnContractSave").show();
        $("#btnContractCancel").show();
        $("#btnEditContract").hide();
        //$("#btnContractClose").hide();
        if ($("#ContractTypeList").val() == 2) {
            //$("#btnSubmit").hide();
        }
        else {
            //$("#btnSubmit").show();
        }
        $(".subsectionBtn").show();
        //$(".clsContractview").attr("disabled", "disabled");
        $(".clsContractview").removeAttr("disabled");
        //$(".clsedtitm").css("pointer-events", "auto");
        $(".clsdelitem").show();
        $(".clsedtitm").show();
    }
    function ClickContractCancel()
    {
        $("#btnContractSave").hide();
        $("#btnContractCancel").hide();
        $("#btnEditContract").show();
        //$("#btnContractClose").show();
        //$("#btnSubmit").hide();
        $(".subsectionBtn").hide();
        $(".clsContractview").attr("disabled", "disabled");
        //$(".clsedtitm").css("pointer-events", "none");
        $(".clsdelitem").hide();
        $(".clsedtitm").hide();

        $('#Contract_Amount').css('border-color', '');
        $('.clsamt').css('border-color', '');
        $("#errmsg").hide();
        $('#generalCustomerList>thead>tr').css('border-color', '');        
        $('.clsContractview').css('border-color', '');
        
    }

    $(document).ready(function () {



        $("#AgreementTypeList").change(function (e) {
            var AgreementTypeListId = $("#AgreementTypeList").val();
            if (AgreementTypeListId != null && AgreementTypeListId != "") {
                var url = "@Url.Action("GetAgreementTypeDetailWithId", "Customer", new { area = "Portal" })" + "?Id=" + AgreementTypeListId;
                $.get(url, function (data) {
                    $('#hdnAgreementTypeCPI').val(data);
                })
            }
        })
        if ($('#Contract_ContractId').val() != null && $('#Contract_ContractId').val() != "" && $('#Contract_ContractId').val() != 0) {
            if ($.trim($('#ContractAddress_Address1').val().toLowerCase()) == $.trim($('#MainAddress_Address1').val().toLowerCase()) &&
                    $.trim($('#ContractAddress_Address2').val().toLowerCase()) == $.trim($('#MainAddress_Address2').val().toLowerCase()) &&
                    $.trim($('#ContractAddress_City').val().toLowerCase()) == $.trim($('#MainAddress_City').val().toLowerCase()) &&
                    $.trim($('#ContractStatesList').val().toLowerCase()) == $.trim($('#MainAddress_StateListId').val().toLowerCase()) &&
                    $.trim($('#ContractAddress_PostalCode').val().toLowerCase()) == $.trim($('#MainAddress_PostalCode').val().toLowerCase())) {
                $("#chkcopyaddresstoContract").attr("checked", true);
                $("#ContractAddress_Address1").attr("readonly", "readonly");
                $("#ContractAddress_Address2").attr("readonly", "readonly");
                $("#ContractAddress_City").attr("readonly", "readonly");
                $("#ContractStatesList").attr("readonly", "readonly");
                $("#ContractStatesList").attr("style", "pointer-events: none;")
                $("#ContractAddress_PostalCode").attr("readonly", "readonly");
            }
        }


    });

    function RemoveContractDetail(ContractDetailId, ContractId) {
        $.blockUI({
            baseZ: 99999,
            message: '<center><img height: src="/Images/loading_icon.gif" /><h3> <b>Processing....</br> Please wait! and do not refresh page.</b></h3></center>',
            css: { backgroundColor: 'rgb{0,0,0}', border: '0', color: '#fff', "z-index": 99999 }
        });
        $.ajax({
            type: "post",
            url: '@Url.Action("RemoveContractDetail", "Customer")',
            ajaxasync: true,
            data: { ContractDetailId: ContractDetailId, ContarctId: ContractId },
            success: function (response) {
                loadOwners(response.id);

                $.unblockUI();
            },
            error: function (data) {
                $.unblockUI();
            }
        })
        $.unblockUI();
    }
    function loadOwners(id) {
        $.blockUI({
            baseZ: 99999,
            message: '<center><img height: src="/Images/loading_icon.gif" /><h3> <b>Processing....</br> Please wait! and do not refresh page.</b></h3></center>',
            css: { backgroundColor: 'rgb{0,0,0}', border: '0', color: '#fff', "z-index": 99999 }
        });

        $.ajax({
            type: "GET",
            url: '@Url.Action("GetContractDetail", "Customer", new { @area = "Portal" })?id=' + id,
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (response) {
                $('#tblContractDescriptionData').html(response);
                $.unblockUI();
            },
            error: function (xhr, textStatus, error) {
                if (typeof console == "object") {

                    $('#tblContractDescriptionData').html(xhr.responseText);
                    //console.log(xhr.status + "," + xhr.responseText + "," + textStatus + "," + error);
                }
                $.unblockUI();
            }
        });

        $.unblockUI();
    }

    $("#Contract_ContractTermMonth").change(function () {

        var monthadd = $("#Contract_ContractTermMonth").val();
        var startdate = $("#Contract_StartDate").val();
        var contractstartdate = new Date(startdate);

        if (monthadd == "")
            monthadd = 0;

        contractstartdate.setMonth(contractstartdate.getMonth() + parseInt(monthadd));
        var c = (contractstartdate.getMonth() + 1) + '/' + contractstartdate.getDate() + '/' + contractstartdate.getFullYear()
        if (startdate == "")
            $("#Contract_ExpirationDate").val("");
        else
            $("#Contract_ExpirationDate").val(c);

    });
    $("#Contract_StartDate").change(function () {

        if ($("#Contract_StartDate").val() == "") {
            $("#Contract_ExpirationDate").val("");
        }
        else {
            var monthadd = $("#Contract_ContractTermMonth").val();
            var startdate = $("#Contract_StartDate").val();
            var contractstartdate = new Date(startdate);

            if (monthadd == "")
                monthadd = 0;

            contractstartdate.setMonth(contractstartdate.getMonth() + parseInt(monthadd));
            var c = (contractstartdate.getMonth() + 1) + '/' + contractstartdate.getDate() + '/' + contractstartdate.getFullYear()
            if (startdate == "")
                $("#Contract_ExpirationDate").val("");
            else
                $("#Contract_ExpirationDate").val(c);
        }

    });


    function applyMaskCurrency(id) {
        $(id).inputmask("currency", {
            alias: 'currency',
            prefix: '$ ',
            digits: 2,
            autoUnmask: true,
            removeMaskOnSubmit: true,
            unmaskAsNumber: false,
            allowPlus: false,
            allowMinus: false,
            autoGroup: true,
            groupSeparator: ",",
        });
    }
     
</script>

