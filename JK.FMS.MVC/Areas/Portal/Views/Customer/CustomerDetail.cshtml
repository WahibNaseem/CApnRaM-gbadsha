@*@model JKViewModels.Customer.CustomerDetailViewModel*@
@model JKViewModels.Customer.FullCustomerViewModel1
@{
    ViewBag.Title = "Add";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section styles{
    <link href="~/Content/admin/assets/global/plugins/jquery-ui/jquery-ui.min.css" rel="stylesheet" />
    <link href="~/Content/admin/assets/Card/dist/card.css" rel="stylesheet" />
    <link href="~/Content/admin/assets/global/plugins/bootstrap-sweetalert/sweetalert.css" rel="stylesheet" />
    <link href="~/Content/admin/assets/global/plugins/wow-alert-master/css/wow-alert.css" rel="stylesheet" />
    <style type="text/css">
        .has-error {
            border-color: red;
        }

        .custom-form .btn {
            margin-bottom: 5px;
        }

        .sweet-alert {
            z-index: 59999;
        }

        .pnd5 {
            padding: 5px;
        }

        .control-label.text-left {
            text-align: left;
        }

        .editvaluetext {
            background-color: white;
            showBillsetting border-style: inherit;
        }

        .editmode {
            background-color: initial;
            border-style: hidden;
        }

        .ui-autocomplete {
            z-index: 9999 !important;
        }

        .btn-custom {
            font-size: 11px;
            padding: 10px 0px;
        }

        /*input:focus, textarea:focus,select:focus {
            border-color: initial;
        }

        input.error, textarea.error,select:focus {
            border: 1px solid red;
        }*/
        .close {
            background-image: url(/Content/admin/assets/global/img/stick_close.png) !important;
            height: 12px !important;
            width: 12px !important;
            margin-top: 0px !important;
        }

        tr > td {
            font-size: 11px !important;
            padding: 4px !important;
        }

        /*tr > th {
            font-size: 10px !important;
        }*/

        /*.row {
            margin: 0;
            padding: 5px 0;
        }*/
        .modal-body .row {
            margin: 0;
            padding: 5px 0;
        }

        .opendiv {
            padding: 4px;
            background-color: gold;
            text-align: center;
            font-weight: bold;
            color: #ffffff;
        }

        .closeddiv {
            padding: 4px;
            background-color: limegreen;
            text-align: center;
            font-weight: bold;
            color: #ffffff;
        }

        .overpaiddiv {
            padding: 4px;
            background-color: deepskyblue;
            text-align: center;
            font-weight: bold;
            color: #ffffff;
        }

        .overduediv {
            padding: 4px;
            background-color: orangered;
            text-align: center;
            font-weight: bold;
            color: #ffffff;
        }

        .btn {
            padding: 3px 12px;
            font-size: 12px;
        }

        .alignRight {
            text-align: right;
        }

        .alignleft {
            text-align: left;
        }

        .alignCenter {
            text-align: center;
        }

        .lbl-p5 {
            padding: 5px;
        }

            .lbl-p5.red {
                color: red;
            }

            .lbl-p5.green {
                color: lightgreen;
            }

        input[type="text"].txtcolon:before {
            content: ": ";
        }

        .credit-field {
            width: 80px !important;
        }

        .txtright {
            text-align: right;
        }

        input[type="number"]::-webkit-outer-spin-button,
        input[type="number"]::-webkit-inner-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }

        .modal-header:hover {
            cursor: move;
        }

        input[type="number"] {
            -moz-appearance: textfield;
        }

        .lbl-p5 {
            padding: 5px;
        }

            .lbl-p5.red {
                color: red;
            }

            .lbl-p5.green {
                color: lightgreen;
            }

        input[type="text"].txtcolon:before {
            content: ": ";
        }

        .payment-field {
            width: 80px !important;
        }

        .demo-container {
            width: 100%;
            max-width: 350px;
            margin: 10px auto;
        }

        form {
            margin: 30px;
        }

        .input-185 {
            width: 146px;
        }

        #ui-datepicker-div {
            z-index: 99999 !important;
        }

        /*input {
            width: 200px;
            margin: 10px auto;
            display: block;
        }*/
        .Amttext {
            text-align: right;
        }

        .clsAmounttd {
            text-align: right !important;
        }

        .toppadding {
            margin-top: 0px;
        }

        .text-bottom {
            vertical-align: bottom !important;
        }

        input[type="radio"].bigger-radio {
            -ms-transform: scale(1.5); /* IE 9 */
            -webkit-transform: scale(1.5); /* Chrome, Safari, Opera */
            transform: scale(1.5);
            margin-bottom: 10px;
        }
    </style>

}

<iframe src="" style="display:none;" id="iframe_statement" name="iframe_statement"></iframe>

<div class="headerbox">
    <div class="row" style="background-color: #4b85cc;color: #fff;padding-top:8px;padding-bottom:8px;margin-left: 0px;margin-right: 0px;">
        <div class="col-md-12">
            <div class="row">
                <div class="col-md-4">
                    <div class="input-icon">
                        <i class="icon-magnifier icon-align-right" style="margin-top: 8px;"></i>
                        <input id="csearch-box" type="text" required name="customernumber" autocomplete="off" placeholder="Search by Customer Name or Number" value="" class="form-control input-sm typeahead" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="custom-listbox custom-form" id="divcustomerList">
    <div class="headerbox" style="font-weight: normal;">
        <div class="col-md-5">
            @Html.HiddenFor(c => c.CustomerDetail.CustomerId, new { @id = "hdfCustomerId" })
            @Html.HiddenFor(c => c.CustomerDetail.MaintenanceId, new { @id = "hdfCustomerMaintenanceId" })
            @Html.HiddenFor(c => c.CustomerDetail.MaintenanceTypeName, new { @id = "hdfCustomerMaintenanceTypeName" })
            Customer information : <b> @Html.DisplayFor(one => one.CustomerDetail.CustomerName) </b>
        </div>
        <div class="col-md-3 text-center">Customer # <b> @Html.DisplayFor(one => one.CustomerViewModel.CustomerNo) </b></div>
        <div class="col-md-4 text-right"> Total Contract Amount: <label id="lblamount" style="font-weight: bold;"><b>@Html.DisplayFor(one => one.CustomerDetail.Amount) </b></label></div> <div class="clearfix"> </div>
    </div>
    <div class="portlet-body" style="padding:10px">
        <div class="row">
            <div class="col-md-12">
                <div class="col-md-4" style="padding-right:0px;padding-left:0px;width: 450px; float:left;">
                    <div class="table-responsive">
                        <table class="table-striped table-bordered order-column" style="width:94%;">
                            <tr>
                                <td>
                                    <div class="col-md-12">
                                        <div class="form-horizontal" style="width: 100%;">
                                            <div class="form-body" style="padding: 5px;padding-top:0px;margin-top:-5px;margin-bottom:-5px;">
                                                <div class="form-group mr0">
                                                    <label class="col-md-3 control-label" style="padding-left: 4px;padding-right: 4px;padding-top:2px;"><b>Status:</b></label>
                                                    <div class="col-md-3" style="padding-top:0px;padding-left: 10px;padding-right:4px;">
                                                        <label class="control-label" style="text-align:left!important;padding-top: 2px;"><b>@Html.DisplayFor(one => one.CustomerDetail.StatusName) </b></label>
                                                    </div>
                                                    @*@if (Model.CustomerDetail.StatusName == "Cancelled")
                                                        {*@
                                                    <label class="col-md-3 control-label" style="padding-left: 4px;padding-right: 4px;padding-top:2px;"><b>Status Date:</b></label>
                                                    <div class="col-md-3" style="padding-top:0px;padding-left: 10px;padding-right:4px;">
                                                        <label class="control-label" style="text-align:left!important;padding-top: 2px;">
                                                            @if (Model.CustomerDetail.StatusDate != null)
                                                            {
                                                                try
                                                                {
                                                                    @Html.Raw(String.Format("{0:MM/dd/yyyy}", Convert.ToDateTime(DateTime.ParseExact(Model.CustomerDetail.StatusDate, "dd-MM-yyyy", System.Globalization.CultureInfo.InvariantCulture))))
                                                                }
                                                                catch
                                                                {

                                                                }
                                                            }
                                                        </label>
                                                    </div>
                                                    @* }*@
                                                </div>
                                                @if (Convert.ToString((Model.CustomerDetail.StatusName != null ? Model.CustomerDetail.StatusName.ToLower().Trim() : "")) == "suspended")
                                                {
                                                    <div class="form-group mr0">
                                                        <label class="col-md-3 control-label" style="padding-left: 4px;padding-right: 4px;padding-top:2px;"></label>
                                                        <div class="col-md-3" style="padding-top:0px;padding-left: 10px;padding-right:4px;"></div>
                                                        <label class="col-md-3 control-label" style="padding-left: 4px;padding-right: 4px;padding-top:2px;"><b>Resume Date:</b></label>
                                                        <div class="col-md-3" style="padding-top:0px;padding-left: 10px;padding-right:4px;">
                                                            <label class="control-label" style="text-align:left!important;padding-top: 2px;">
                                                                @if (Model.CustomerDetail.ResumeDate != null)
                                                                {
                                                                    try
                                                                    {
                                                                        @Html.Raw(String.Format("{0:MM/dd/yyyy}", Convert.ToDateTime(DateTime.ParseExact(Model.CustomerDetail.ResumeDate, "dd-MM-yyyy", System.Globalization.CultureInfo.InvariantCulture))))
                                                                    }
                                                                    catch
                                                                    {
                                                                    }
                                                                }
                                                            </label>
                                                        </div>
                                                    </div>
                                                }
                                                <div class="form-group mr0">
                                                    <label class="col-md-3 control-label" style="padding-top: 2px;padding-left: 4px;padding-right: 4px;"><b>Contract Type:</b></label>
                                                    <div class="col-md-9" style="padding-top: 0px;padding-left: 10px;padding-right: 4px;">
                                                        <label class="control-label" style="text-align:left!important;padding-top: 2px;">
                                                            @Html.DisplayFor(one => one.CustomerDetail.ContractTypeList)
                                                    </label>
                                                </div>
                                            </div>
                                            <div class="form-group mr0">
                                                <label class="col-md-3 control-label" style="padding-top: 2px;padding-left: 4px;padding-right: 4px;"><b>Account Type:</b></label>
                                                <div class="col-md-9" style="padding-top: 0px;padding-left: 10px;padding-right: 4px;">
                                                    <label class="control-label" style="text-align:left!important;padding-top: 2px;">@Html.DisplayFor(one => one.CustomerDetail.Account_Type) </label>
                                                </div>
                                            </div>
                                            <div class="form-group mr0">
                                                <label class="col-md-3 control-label" style="padding-top: 2px;padding-left: 4px;padding-right: 4px;"><b>Contact Name:</b></label>
                                                <div class="col-md-9" style="padding-top: 0px;padding-left: 10px;padding-right: 4px;">
                                                    <label class="control-label" style="text-align:left!important;padding-top: 2px;">@Html.DisplayFor(one => one.CustomerDetail.ContactName)</label>
                                                </div>
                                            </div>
                                            <div class="form-group mr0">
                                                <label class="col-md-3 control-label" style="padding-left: 4px;padding-right: 4px;padding-top:2px;"><b>Phone:</b></label>
                                                <div class="col-md-9" style="padding-left: 10px;padding-right: 4px;padding-top:0px;">
                                                    <label class="control-label" style="text-align:left!important;padding-top: 2px;padding-bottom: 0px;"> @Html.DisplayFor(one => one.CustomerDetail.Phone) </label>
                                                </div>
                                            </div>
                                            <div class="form-group mr0">
                                                <label class="col-md-3 control-label" style="padding-left: 4px;padding-right: 4px;padding-top:2px;"><b>Email:</b></label>
                                                <div class="col-md-9" style="padding-left: 10px;padding-right: 4px;padding-top:0px;">
                                                    <label class="control-label" style="text-align:left!important;padding-top: 2px;padding-bottom: 0px;">@Html.DisplayFor(one => one.CustomerDetail.CustomerEmail)</label>
                                                </div>
                                            </div>
                                            <div class="form-group mr0">
                                                <label class="col-md-3 control-label" style="padding-left: 4px;padding-right: 4px;padding-top:2px;"><b>Address:</b></label>
                                                <div class="col-md-9" style="padding-left: 10px;padding-right: 4px;padding-top:0px;">
                                                    <label class="control-label" style="text-align:left!important;padding-top: 2px;">
                                                        @Html.DisplayFor(one => one.CustomerDetail.Address) @Html.DisplayFor(one => one.CustomerDetail.Address2)
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </td>
                        </tr>
                    </table>
                </div>
            </div>


            <div class="col-md-2 over-payment">
                @if (Model.CustomerDetail.Balance != 0)
                {
                    <div style="width:150px; padding-left:0px; border:solid 2px; background-color:coral; color:white; text-align:center;">
                        <label>OverPayment/Credit</label>
                        <br />
                        <label style="font-weight:bold;">$@Model.CustomerDetail.Balance</label>
                        <br />
                        <label class="mt-checkbox">
                            <input type="checkbox" id="chkApplyCredit">Apply Credit
                            <span style="background-color: white;border: 1px solid black;"></span>
                        </label>
                    </div>
                }


                @if (Model.CustomerDetail.LogId > 0)
                {
                    <div style="width: 509px;padding-left: 0px;padding: 3px;text-align: left;font-weight: 600;">
                        <i class="fa fa-bell blinkcolor blink"></i> <label style="font-size:14px;">@Model.CustomerDetail.LogMessage</label> <i class="fa fa-bell blinkcolor blink"></i>
                    </div>
                }

            </div>


            <div class="col-md-6" style="padding-right:0px;padding-left:0px;width: 524px;float:right;">
                <div class="table-responsive">
                    <table class="table-striped table-bordered order-column">
                        <tr>
                            <td class="col-md-3" style="padding-right: 6px;padding-left: 7px;padding-bottom: 8px;">
                                <div class="form-group mr0" style="margin-top: 2px;">
                                    <input type="button" @(ViewBag.CustomerID > 0 ? "" : "disabled") value="Edit Customer Info" class="btn-custom btn btn-primary col-md-12" style="font-size: 11px;" onclick="showBillsetting()" />
                                </div>
                                <div class="form-group mr0">
                                    <input type="button" @(ViewBag.CustomerID > 0 ? "" : "disabled") value="Customer Contract" class="btn-custom btn btn-primary col-md-12" style="font-size: 11px;" onclick="OpenCustomerContractPopup(@ViewBag.CustomerID)" />
                                </div>
                                <div class="form-group mr0">
                                    @*<input type="button" @(ViewBag.CustomerID > 0 ? "" : "disabled") value="Distribution" class="btn-custom btn btn-primary col-md-12" style="font-size: 11px;" onclick="FranchiseeDistribution(@Html.DisplayFor(one => one.CustomerDetail.CustomerId))" />*@
                                    @if (ViewBag.Distributions != null)
                                    {
                                        <a class="btn-custom btn btn-primary col-md-12" style="font-size: 11px;" onclick="BindFranchiseeCustomerDistribution(@Model.CustomerDetail.CustomerId,@ViewBag.DistributionFranchiseeId)">Distribution</a>
                                    }
                                    else
                                    {
                                        <a class="btn-custom btn btn-primary col-md-12" style="font-size: 11px;background-color:#d64e56;" onclick="ShowCustomerSuggetionBox()">Distribution</a>
                                    }
                                </div>
                                <div class="form-group mr0">
                                    <input type="button" @(ViewBag.CustomerID > 0 ? "" : "disabled") value="Account Offering" class="btn-custom btn btn-primary col-md-12" style="font-size: 11px;" onclick="AccountOffringModel()" />
                                </div>
                            </td>
                            <td class="col-md-3" style="padding-left: 3px;padding-right: 4.2px;padding-bottom: 8px;">
                                <div class="form-group mr0" style="margin-top: 2px;">
                                    <input type="button" @(ViewBag.CustomerID > 0 ? "" : "disabled") value="Maintenance" class="btn-custom btn btn-primary col-md-12" style="font-size: 11px;" onclick="hasExistManintenance(@ViewBag.CustomerID,'cancel')" id="btncust_cancel"/>
                                </div>
                                <div class="form-group mr0">
                                    <input type="button" @(ViewBag.CustomerID > 0 ? "" : "disabled") value="Customer Service Log" class="btn-custom btn btn-primary col-md-12" style="font-size: 11px;padding-left: 0px;padding-right: 0px;" onclick="showServiceLog(@Html.DisplayFor(one => one.CustomerDetail.CustomerId))" />
                                </div>
                                <div class="form-group mr0">
                                    <input type="button" @(ViewBag.CustomerID > 0 ? "" : "disabled") value="Collection Call Log" class="btn-custom btn btn-primary col-md-12" style="font-size: 11px;" onclick="showCollectionLog(@Html.DisplayFor(one => one.CustomerDetail.CustomerId))" />
                                </div>
                                <div class="form-group mr0">
                                    <input type="button" @(ViewBag.CustomerID > 0 ? "" : "disabled") value="Finders Fee" class="btn-custom btn btn-primary col-md-12" style="font-size: 11px;" onclick="showFeeFinderList(@ViewBag.CustomerID)" />
                                </div>
                            </td>
                            <td class="col-md-3" style="padding-left: 3px;padding-right: 4.2px;padding-bottom: 8px;">

                                <div class="form-group mr0" style="margin-top: 2px;">
                                    <input type="button" @(ViewBag.CustomerID > 0 ? "" : "disabled") value="Manual Invoice" class="btn-custom btn btn-primary col-md-12" style="font-size: 11px;" onclick="showManualInvoice(@Html.DisplayFor(one => one.CustomerDetail.CustomerId),'')" />
                                </div>
                                <div class="form-group mr0">
                                    <input type="button" @(ViewBag.CustomerID > 0 ? "" : "disabled") value="Credit Transaction" class="btn-custom btn btn-primary col-md-12" style="font-size: 11px;" onclick="showCreditTransaction(@Html.DisplayFor(one => one.CustomerDetail.CustomerId))" />
                                </div>
                                <div class="form-group mr0">
                                    <input type="button" @(ViewBag.CustomerID > 0 ? "" : "disabled") value="Manual Payment" class="btn-custom btn btn-primary col-md-12 manualpayment" style="font-size: 11px;" onclick="showManualPayment(@Html.DisplayFor(one => one.CustomerDetail.CustomerId))" />
                                </div>
                                <div class="form-group mr0">
                                    <input type="button" @(ViewBag.CustomerID > 0 ? "" : "disabled") value="Statements" class="btn-custom btn btn-primary col-md-12" style="font-size: 11px;" onclick="showStatements(@Html.DisplayFor(one => one.CustomerDetail.CustomerId))" />
                                </div>
                            </td>
                            <td class="col-md-3" style="padding-left: 3px;padding-right: 4.2px;padding-bottom: 8px;">
                                <div class="form-group mr0" style="margin-top: 2px;">
                                    <input type="button" @(ViewBag.CustomerID > 0 ? "" : "disabled") value="Transfer" class="btn-custom btn btn-primary col-md-12" style="font-size: 11px;" onclick="hasExistManintenance(@Html.DisplayFor(one => one.CustomerDetail.CustomerId),'transfer')"  id="btncust_trans" />
                                </div>
                                <div class="form-group mr0">
                                    <input type="button" @(ViewBag.CustomerID > 0 ? "" : "disabled") value="Increase/Decrease" class="btn-custom btn btn-primary col-md-12" style="font-size: 11px;padding-left: 0px;padding-right: 0px;" onclick="hasExistManintenance(@ViewBag.CustomerID,'increase')" id="btncust_increase" />
                                </div>
                                <div class="form-group mr0">
                                    <input type="button" @(ViewBag.CustomerID > 0 ? "" : "disabled") value="Documents" class="btn-custom btn btn-primary col-md-12" style="font-size: 11px;" onclick="OpenCustomerUploadDocumentPopup(@Html.DisplayFor(one => one.CustomerDetail.CustomerId))" />
                                </div>
                                <div class="form-group mr0">
                                    @*<input type="button" @(ViewBag.CustomerID > 0 ? "" : "disabled") value="Account History" onclick="showAccountHistoryPopup(@Html.DisplayFor(one => one.CustomerDetail.CustomerId))" class="btn-custom btn btn-primary col-md-12" style="font-size: 11px;" />*@
                                    <div class="btn-group dropdown" style="display:inherit;">
                                        <a target="_blank" dropdown-toggle'="" data-toggle="dropdown" @(ViewBag.CustomerID > 0 ? "" : "disabled") class="btn-custom btn btn-primary col-md-12">Reports</a>
                                        <ul class="dropdown-menu pull-right">
                                            <li><a href="#" onclick="showAccountHistoryPopup(@Html.DisplayFor(one => one.CustomerDetail.CustomerId))"><i class="fa fa-plus"></i> Account History </a></li>
                                            <li><a href="#" onclick="showIncreaseDecreasePopup(@Html.DisplayFor(one => one.CustomerDetail.CustomerId))"><i class="fa fa-plus"></i> Increase/Decrease </a></li>
                                        </ul>
                                    </div>
                                </div>
                        </tr>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div id="divCustomerdetailtras">
        <div class="row">
            <div class="col-md-12">
                <div class="col-md-12" style="background-color: #67809F;color: #fff;">
                    <div class="col-md-1 pnd5 collapse" style="text-align:left;padding-top:8px;">
                        Show
                    </div>
                    <div class="col-md-2 pnd5" style="text-align:left;">
                        @Html.DropDownList("TransactionsTypeList", null, new { @class = "form-control input-sm", @id = "select_transactionstype" })
                    </div>
                    <div class="col-md-1 pnd5"></div>
                    <div class="col-md-4 pnd5" style="text-align:right;padding-top:8px;">
                        Date
                    </div>
                    <div class="col-md-2 pnd5" style="text-align:right;">
                        <select id="select_timeduration" class="form-control input-sm">
                            <option value="1">This Week</option>
                            <option value="2">This Week-to-date</option>
                            <option value="3" selected="selected">This Month</option>
                            <option value="4">This Month-to-date</option>
                            <option value="5">This Quarter</option>
                            <option value="6">This Quarter-to-date</option>
                            <option value="7">This Fiscal Year</option>
                            <option value="8">This Fiscal Year-to-date</option>
                            <option value="9">Today</option>
                            <option value="10">Yesterday</option>
                            <option value="11">Last Week</option>
                            <option value="12">Last Month</option>
                            <option value="13">Last Quarter</option>
                            <option value="14">Last Year</option>
                            <option value="15">Custom Date</option>
                            <option value="16">Period</option>
                        </select>
                    </div>

                    <div class="col-md-2 pnd5" style="padding-top: 10px;text-align:right;" id="divspandate">
                        <span id="spnStartDate">08/01/2017</span> - <span id="spnEndtDate">08/31/2017</span>
                    </div>
                    <div class="collapse">
                        <input type="hidden" id="CustomerID" name="CustomerID" value="@ViewBag.CustomerID" />
                    </div>
                    <div class="col-md-1 pnd5" style="text-align:center;" id="divSD">
                        <input type="text" name="txtStartDate" id="txtStartDate" value="" class="form-control input-sm date-picker RemovePeriodvalidation" style="padding: 3px;" />
                    </div>
                    <div class="col-md-1 pnd5" style="text-align:center;" id="divED">
                        <input type="text" name="txtEndtDate" id="txtEndtDate" value="" class="form-control input-sm date-picker RemovePeriodvalidation" style="padding: 3px;" />
                    </div>
                    <div class="col-md-1 pnd5" style="display: none;" id="divmonth">
                        <select id="monthlist" class="form-control input-sm">
                            <option value=""></option>
                            <option value="1">Jan</option>
                            <option value="2">Feb</option>
                            <option value="3">Mar</option>
                            <option value="4">Apr</option>
                            <option value="5">May</option>
                            <option value="6">June</option>
                            <option value="7">July</option>
                            <option value="8">Aug</option>
                            <option value="9">Sep</option>
                            <option value="10">Oct</option>
                            <option value="11">Nov</option>
                            <option value="12">Dec</option>
                        </select>
                    </div>
                    <div class="col-md-1 pnd5" style="display: none;" id="divyear">
                        <select class="form-control input-sm" id="yearlist" style="padding-left: 2px;">
                            <option value=""></option>
                            <option value="2018">2018</option>
                            <option value="2017">2017</option>
                            <option value="2016">2016</option>
                            <option value="2015">2015</option>
                            <option value="2014">2014</option>
                            <option value="2013">2013</option>
                            <option value="2012">2012</option>
                            <option value="2011">2011</option>
                            <option value="2010">2010</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <table class="table table-striped table-bordered table-hover order-column col-md-12" width="100" id="customerTransList">
                    <thead>
                        <tr>
                            <th colspan="7" style="text-align:center; border-right: 2px solid blue;"></th>
                            <th colspan="2" style="text-align:center; border-right: 2px solid blue; border-top: 2px solid blue;">Total Transaction Amount</th>
                            <th></th>
                            <th></th>
                        </tr>
                        <tr>
                            <th colspan="2" style="width:100px;text-align:center;">
                                Transaction Type
                            </th>
                            <th style="width:90px;text-align:center;">
                                Date
                            </th>
                            <th style="text-align:center;width:110px;">
                                Number
                            </th>
                            <th style="width:360px;text-align:center;">
                                Description
                            </th>
                            <th style="text-align:center;width:100px;">
                                Amount
                            </th>
                            <th style="text-align:center;width:100px;border-right: 2px solid blue;">
                                Tax
                            </th>
                            <th style="text-align:center;width:90px;">
                                Debit
                            </th>
                            <th style="text-align:center;width:90px;border-right: 2px solid blue;">
                                Credit
                            </th>
                            @*<th style="text-align:center;width:50px;">
                                    Balance
                                </th>*@
                            <th style="text-align:center;width:80px;">
                                Status
                            </th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                    <tfoot>
                        <tr style="background:#95a5a6;color:white;">
                            <td colspan="4" style="text-align:center;"></td>
                            <td style="text-align:center;width:50px;"><strong>Total:</strong> </td>
                            <td style="text-align:center;width:50px;"><strong><span id="totalAmount" style="float: right"></span> </strong> </td>
                            <td style="text-align:center;width:50px; border-right: 2px solid blue;"><strong><span id="totalTax" style="float: right"></span> </strong> </td>
                            <td style="text-align:center;width:70px; border-left: 2px solid blue; border-bottom: 2px solid blue;"><strong><span id="totalDebit" style="float: right"></span> </strong> </td>
                            <td style="text-align:center;width:70px; border-right: 2px solid blue; border-bottom: 2px solid blue;"><strong><span id="totalCredit" style="float: right"></span> </strong> </td>
                            @*<td style="text-align:center;width:50px; border-left: 2px solid blue; "><strong><span id="totalBalance" style="float: right"></span> </strong> </td>*@
                            <td style="text-align:center;width:50px;"><strong><span></span> </strong> </td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
    <div class="clearfix"> </div>
</div>
</div>



<form class="form-horizontal" action="" id="form_Billingsetting" method="POST">
    <div class="modal fade custom-model custom-form-design" id="modal_Billingsetting" tabindex="-1" role="basic" aria-hidden="true" style="display: none;">
        <div class="modal-dialog" style="width:869px">
            <div class="modal-content" style="border-radius: 8px;">
                <div class="modal-header headerbox list" style="padding:0px!important;border-bottom: none;">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true" style="margin-top: 12px !important;margin-right: 12px !important;"></button>
                    <h4 class="modal-title" style="margin-top: 0px; margin-bottom: 4px;  padding: 7px!important;font-size: 12px;font-weight: bold;background: #3598DC !important;color: #FFF !important;border: 1px solid #3598DC !important;padding: 0px;border-radius: 8px 8px 0 0;text-transform: uppercase;">
                        Customer Maintenance
                        @*<a href="Javascrpit:void(0)" onclick=Editfunction(); style="color:red"><b>Edit</b></a>*@
                    </h4>
                </div>
                <div class="modal-body" style="padding: 0px 30px 15px 30px;">

                    @Html.HiddenFor(one => one.CustomerViewModel.CustomerNo, new { id = "CustomerNo" })
                    @Html.HiddenFor(one => one.CustomerDetail.CustomerName, new { id = "hdnCustomerName" })
                    @Html.HiddenFor(one => one.CustomerDetail.ContactName, new { id = "hdnFirstName" })
                    @Html.HiddenFor(one => one.CustomerDetail.Phone, new { id = "hdnCustomerPhone" })
                    @Html.Hidden("PaymentProfileID")

                    @Html.HiddenFor(one => one.CustomerViewModel.CustomerId)
                    @Html.HiddenFor(one => one.CustomerViewModel.CreatedBy)
                    @Html.HiddenFor(one => one.CustomerViewModel.CreatedDate)
                    @Html.HiddenFor(one => one.CustomerViewModel.CustomerNo)
                    @Html.HiddenFor(one => one.MainAddress.IsActive)
                    @Html.HiddenFor(one => one.MainAddress.CreatedBy)
                    @Html.HiddenFor(one => one.MainAddress.CreatedDate)
                    @Html.HiddenFor(one => one.BillSetting.CustomerId)
                    @Html.HiddenFor(one => one.BillSetting.BillSettingsId)

                    @Html.HiddenFor(one => one.EBill_Emails, new { id = "hdfEBill_Emails" })
                    <section>
                        <div class="row">
                            <div style="max-width: 98%;margin: 0px auto;">
                                <div class="custom-form portlet light " id="form_wizard_1">
                                    <div class="portlet-body form">
                                        @*<form class="form-horizontal" action="#" id="submit_form" method="POST">
                                        *@
                                        <div>
                                            <div class="form-body-outer" style="padding: 0px;">
                                                <div style="overflow:auto;width: 100%; margin: 0em auto;">
                                                    <div class="tab-content">
                                                        <div class="tab-pane active" id="tb_fr_page1">
                                                            <div class="form-group">
                                                                <div class="col-md-6" style="padding: 10px;">
                                                                    <div class="row" style="padding: 3px;margin-top:-10px;"><b>Customer Name: @Html.DisplayFor(one => one.CustomerViewModel.Name)</b></div>
                                                                    <div class="row" style="padding: 3px;"><b>Customer No: @Html.DisplayFor(one => one.CustomerViewModel.CustomerNo)</b></div>
                                                                </div>
                                                                <div class="col-md-6 text-right" style="padding-right:30px;text-align:right">
                                                                    <div class="row" style="padding: 3px;"><b>Address</b> @(Model.MainAddress.Address1 ), </div>
                                                                    <div class="row" style="padding: 3px;">@Html.DisplayFor(one => one.MainAddress.City), @Html.DisplayFor(one => one.MainAddress.StateName) @Html.DisplayFor(one => one.MainAddress.PostalCode)</div>
                                                                </div>
                                                            </div>


                                                            @*<h4 class="blocktop"></h4>*@
                                                            <div style="width: 50%;float:left;">
                                                                @Html.HiddenFor(one => one.MainAddress.AddressId)
                                                                @Html.HiddenFor(one => one.MainAddress.StateName)
                                                                @Html.HiddenFor(one => one.MainPhone.PhoneId)
                                                                <h4 class="subblock">
                                                                    Main Information
                                                                    <button type="button" class="btn btn-primary button-next  pull-right CancelBtn" id="btnContactCancel1" style="margin-left: 10px;padding-top:0px;margin-top:-5px;">Cancel</button>&nbsp;&nbsp;&nbsp;&nbsp;
                                                                    <button type="button" class="btn btn-primary  pull-right SaveBtn" id="btnContactSave1" style="margin-left: 10px;padding-top:0px;margin-top:-5px;">Save</button>&nbsp;&nbsp;&nbsp;&nbsp;
                                                                    <button type="button" class="btn btn-primary  pull-right EditBtn" id="EditContact1" onclick=EditContactfunction1(); style="margin-left: 10px;padding-top:0px;margin-top:-5px;">Edit</button>&nbsp;&nbsp;&nbsp;&nbsp;
                                                                </h4>

                                                                <div class="form-group" style="padding-top:0px;">
                                                                    <label id="lblCustomerID" hidden>@Html.HiddenFor(one => one.CustomerDetail.CustomerId) </label>
                                                                    <label class="control-label col-md-3">
                                                                        Name
                                                                        <span class="required"> * </span>
                                                                    </label>
                                                                    <div class="col-md-9">
                                                                        @Html.TextBoxFor(one => one.CustomerViewModel.Name, new { @class = "form-control input-sm editmain1", required = "required", placeholder = "Required" })
                                                                    </div>
                                                                </div>

                                                                <div class="form-group">
                                                                    <label class="control-label col-md-3">
                                                                        Address
                                                                        <span class="required"> * </span>
                                                                    </label>
                                                                    <div class="col-md-5">
                                                                        @Html.TextBoxFor(one => one.MainAddress.Address1, new { @class = "form-control input-sm editmain1", required = "required", placeholder = "Required" })
                                                                    </div>
                                                                    <div class="col-md-4">
                                                                        @Html.TextBoxFor(one => one.MainAddress.Address2, new { @class = "form-control input-sm editmain1", placeholder = "" })
                                                                    </div>
                                                                </div>

                                                                <div class="form-group" style="margin-left:5px !important;margin-right:0px !important;">
                                                                    <label class="control-label col-md-3">
                                                                        City/State/Zip
                                                                        <span class="required"> * </span>
                                                                    </label>
                                                                    <div class="col-md-3" style="width: 115px;">
                                                                        @Html.TextBoxFor(one => one.MainAddress.City, new { @class = "form-control input-sm editmain1", required = "required", placeholder = "Required" })
                                                                    </div>
                                                                    <div class="col-md-4" style="width: 108px;">
                                                                        @Html.DropDownList("MainStatesList", null, "Select", new { @class = "form-control input-sm editmain1", required = "required", @id = "MainStatesList", style = "width: 97px;" })
                                                                    </div>
                                                                    <div class="col-md-2" style="width:65px;margin-left:-7px;">
                                                                        @Html.TextBoxFor(one => one.MainAddress.PostalCode, new { @class = "form-control input-sm editmain1", required = "required", placeholder = "Required", maxlength = "5" })

                                                                    </div>
                                                                </div>

                                                                <div class="form-group">
                                                                    <label class="control-label col-md-3">
                                                                        Phone
                                                                        <span class="required"> * </span>
                                                                    </label>
                                                                    <div class="col-md-4">
                                                                        @Html.TextBoxFor(one => one.MainPhone.Phone1, new { @class = "form-control input-sm editmain1", placeholder = "Required" })
                                                                    </div>
                                                                    <label class="control-label col-md-1">
                                                                        Fax
                                                                    </label>
                                                                    <div class="col-md-4">
                                                                        @Html.TextBoxFor(one => one.MainPhone.Fax, new { @class = "form-control input-sm editmain1", placeholder = "" })
                                                                    </div>
                                                                </div>
                                                                <h4 class="subblock">
                                                                    Customer Billing Information

                                                                    <button type="button" class="btn btn-primary button-next  pull-right CancelBtn" id="btnBContactCancel1" style="margin-left: 10px;padding-top:0px;margin-top:-5px;">Cancel</button>&nbsp;&nbsp;&nbsp;&nbsp;
                                                                    <button type="button" class="btn btn-primary  pull-right SaveBtn" id="btnBContactSave1" style="margin-left: 10px;padding-top:0px;margin-top:-5px;">Save</button>&nbsp;&nbsp;&nbsp;&nbsp;
                                                                    <button type="button" class="btn btn-primary  pull-right EditBtn" id="EditBContact1" onclick=EditBContactfunction1(); style="margin-left: 10px;padding-top:0px;margin-top:-5px;">Edit</button>
                                                                </h4>
                                                                @Html.HiddenFor(one => one.BillingContact.ContactId)
                                                                @Html.HiddenFor(one => one.BillingAddress.AddressId)
                                                                <div class="form-group">
                                                                    <label class="control-label col-md-3">
                                                                    </label>
                                                                    <div class="col-md-8">
                                                                        <label class="mt-checkbox">
                                                                            <input type="checkbox" name="chkbillingsameas" id="chkbillingsameas" class="editbill1">Same as Main Address
                                                                            <span></span>
                                                                        </label>
                                                                    </div>
                                                                </div>
                                                                <div class="form-group">
                                                                    <label class="control-label col-md-3">
                                                                        Name
                                                                        <span class="required"> * </span>
                                                                    </label>
                                                                    <div class="col-md-9">
                                                                        @Html.TextBoxFor(one => one.BillingContact.Name, new { @class = "form-control input-sm editbill1", required = "required", placeholder = "Required" })
                                                                    </div>
                                                                </div>
                                                                <div class="form-group">
                                                                    <label class="control-label col-md-3">
                                                                        Attention
                                                                    </label>
                                                                    <div class="col-md-9">
                                                                        @Html.TextBoxFor(one => one.BillingContact.Attention, new { @class = "form-control input-sm editbill1", placeholder = "" })
                                                                    </div>
                                                                </div>
                                                                <div class="form-group">

                                                                    <label class="control-label col-md-3">
                                                                        Address<span class="required"> * </span>
                                                                    </label>
                                                                    <div class="col-md-5">
                                                                        @Html.TextBoxFor(one => one.BillingAddress.Address1, new { @class = "form-control input-sm editbill1", placeholder = "Required" })
                                                                    </div>
                                                                    <div class="col-md-4">
                                                                        @Html.TextBoxFor(one => one.BillingAddress.Address2, new { @class = "form-control input-sm editbill1", placeholder = "" })
                                                                    </div>
                                                                </div>
                                                                <div class="form-group" style="margin-left:5px !important;margin-right:0px !important;">
                                                                    <label class="control-label col-md-3">
                                                                        City/State/Zip
                                                                        <span class="required"> * </span>
                                                                    </label>
                                                                    <div class="col-md-3" style="width: 115px;">
                                                                        @Html.TextBoxFor(one => one.BillingAddress.City, new { @class = "form-control input-sm editbill1", required = "required", placeholder = "Required" })
                                                                    </div>
                                                                    <div class="col-md-4" style="width: 108px;">
                                                                        @Html.DropDownList("BillingStatesList", null, "Select", new { @class = "form-control input-sm editbill1", required = "required", @id = "BillingStatesList", style = "width: 97px;" })
                                                                    </div>
                                                                    <div class="col-md-2" style="width:65px;margin-left:-7px;">
                                                                        @Html.TextBoxFor(one => one.BillingAddress.PostalCode, new { @class = "form-control input-sm editbill1", required = "required", placeholder = "Required", maxlength = "5" })
                                                                    </div>
                                                                </div>

                                                                <h4 class="subblock">Bill Setting</h4>

                                                                <div class="form-group">
                                                                    <label class="control-label col-md-3">
                                                                        Effective Date
                                                                    </label>
                                                                    <div class="col-md-6">
                                                                        <div class="input-group date" data-date-format="mm/dd/yyyy">
                                                                            @*@Html.TextBoxFor(one => one.BillSetting.EffectiveDate, new { @class = "form-control input-sm date-picker edit", disabled = "disabled", @readonly = "readonly" })*@
                                                                            @if (Model.BillSetting != null)
                                                                            {
                                                                                if (Model.BillSetting.EffectiveDate != null)
                                                                                {
                                                                                    <input type="text" name="BillSetting.EffectiveDate" id="BillSetting_EffectiveDate" class="form-control input-sm date-picker edit RemovePeriodvalidation" disabled="disabled" readonly="readonly" value="@Convert.ToDateTime(Model.BillSetting.EffectiveDate).ToString("MM/dd/yyyy")" />
                                                                                    <span class="input-group-btn cal-btn">
                                                                                        <button class="btn default cal-btn" readonly="true" type="button">
                                                                                            <i class="fa fa-calendar"></i>
                                                                                        </button>
                                                                                    </span>
                                                                                }
                                                                                else
                                                                                {
                                                                                    <input type="text" name="BillSetting.EffectiveDate" id="BillSetting_EffectiveDate" class="form-control input-sm date-picker edit RemovePeriodvalidation" disabled="disabled" readonly="readonly" value="" />
                                                                                    <span class="input-group-btn cal-btn">
                                                                                        <button class="btn default cal-btn" readonly="true" type="button">
                                                                                            <i class="fa fa-calendar"></i>
                                                                                        </button>
                                                                                    </span>
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                <input type="text" name="BillSetting.EffectiveDate" id="BillSetting_EffectiveDate" class="form-control input-sm date-picker edit" disabled="disabled" readonly="readonly" value="" />
                                                                                <span class="input-group-btn cal-btn">
                                                                                    <button class="btn default cal-btn" readonly="true" type="button">
                                                                                        <i class="fa fa-calendar"></i>
                                                                                    </button>
                                                                                </span>
                                                                            }
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="form-group">
                                                                    <label class="control-label col-md-3">
                                                                        Invoice Date
                                                                    </label>
                                                                    <div class="col-md-6">
                                                                        @Html.DropDownList("InvoiceDate", null, new { @class = "form-control input-sm edit ddlInvoiceDate", required = "required", @id = "InvoiceDateList", disabled = "disabled", @readonly = "readonly" })
                                                                    </div>
                                                                </div>
                                                                <div class="form-group">
                                                                    <label class="control-label col-md-3">
                                                                        Term
                                                                    </label>
                                                                    <div class="col-md-6">
                                                                        @Html.DropDownList("TermDate", null, new { @class = "form-control input-sm edit ddlTermDate", required = "required", @id = "TermDateList", disabled = "disabled", @readonly = "readonly" })
                                                                    </div>
                                                                </div>
                                                                <div class="form-group">
                                                                    <label class="control-label col-md-3">
                                                                        AR Status
                                                                    </label>
                                                                    <div class="col-md-6">
                                                                        <input type="hidden" id="hdnARStatusId" value="@(Model.BillSetting != null ? Convert.ToString(Model.BillSetting.ARStatus):"" )" />
                                                                        @Html.DropDownList("ArStatus", null, "Select", new { @class = "form-control input-sm edit ddlArStatus", @id = "ArStatusList", disabled = "disabled", @readonly = "readonly" })
                                                                    </div>
                                                                </div>
                                                                <div class="form-group">
                                                                    <label class="control-label col-md-3">
                                                                        Notes
                                                                    </label>
                                                                    <div class="col-md-8">
                                                                        @Html.TextAreaFor(one => one.BillSetting.Notes, new { @class = "form-control input-sm edit", row = 3, disabled = "disabled", @readonly = "readonly" })
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div style="width: 50%;margin:0px; padding: 0em; background: white;float:right; border-left:solid #95A5A6 1px; ">
                                                                <h4 class="subblock">
                                                                    @*Contact Information*@
                                                                    <button type="button" class="btn btn-primary button-next  pull-right CancelBtn" id="btnContactCancel" style="margin-left: 10px;padding-top:0px;margin-top:-5px;">Cancel</button>&nbsp;&nbsp;&nbsp;&nbsp;
                                                                    <button type="button" class="btn btn-primary  pull-right SaveBtn" id="btnContactSave" style="margin-left: 10px;padding-top:0px;margin-top:-5px;">Save</button>&nbsp;&nbsp;&nbsp;&nbsp;
                                                                    <button type="button" class="btn btn-primary  pull-right EditBtn" id="EditContact" onclick=EditContactfunction(); style="margin-left: 10px;padding-top:0px;margin-top:-5px;">Edit</button>&nbsp;&nbsp;&nbsp;&nbsp;
                                                                </h4>
                                                                @Html.HiddenFor(one => one.MainContact.ContactId)
                                                                @Html.HiddenFor(one => one.MainPhone2.PhoneId)
                                                                @Html.HiddenFor(one => one.MainEmail.EmailId)


                                                                @Html.HiddenFor(one => one.ContactInformation.ContactId)
                                                                @Html.HiddenFor(one => one.ContactInformationEmail.EmailId)
                                                                @Html.HiddenFor(one => one.ContactInformationPhone.PhoneId)
                                                                <div class="form-group" style="padding-top:0px; text-wrap:none">
                                                                    <label class="control-label col-md-2">
                                                                        Name<span class="required"> * </span>
                                                                    </label>
                                                                    <div class="col-md-9">
                                                                        @Html.TextBoxFor(one => one.MainContact.Name, new { @class = "form-control input-sm editmain", required = "required", placeholder = "Required" })
                                                                    </div>
                                                                </div>

                                                                <div class="form-group">
                                                                    <label class="control-label col-md-2">
                                                                        Title
                                                                    </label>
                                                                    <div class="col-md-9">
                                                                        @Html.TextBoxFor(one => one.MainContact.Title, new { @class = "form-control input-sm editmain", placeholder = "" })
                                                                    </div>
                                                                </div>
                                                                <div class="form-group">
                                                                    <label class="control-label col-md-2">
                                                                        Phone <span class="required"> * </span>
                                                                    </label>
                                                                    <div class="col-md-4" style="width: 113px;">
                                                                        @Html.TextBoxFor(one => one.MainPhone2.Phone1, new { @class = "form-control input-sm editmain", placeholder = "Required" })
                                                                    </div>
                                                                    <div class="col-md-2" style="padding-left:0px;">
                                                                        @Html.TextBoxFor(one => one.MainPhone2.PhoneExt, new { @class = "form-control input-sm editmain", placeholder = "Ext", maxlength = "5" })
                                                                    </div>
                                                                    @*<label class="control-label col-md-1">
                                                                        Cell
                                                                        </label>*@
                                                                    <div class="col-md-4" style="width: 105px;padding-left:0px;">
                                                                        @Html.TextBoxFor(one => one.MainPhone2.Cell, new { @class = "form-control input-sm editmain", placeholder = "Cell" })
                                                                    </div>
                                                                </div>
                                                                <div class="form-group">
                                                                    <label class="control-label col-md-3" style="display:none;">
                                                                        Fax
                                                                    </label>
                                                                    <div class="col-md-3" style="display:none;">
                                                                        @Html.TextBoxFor(one => one.MainPhone2.Fax, new { @class = "form-control input-sm editmain", placeholder = "" })
                                                                    </div>
                                                                    <label class="control-label col-md-2">
                                                                        Email
                                                                    </label>
                                                                    <div class="col-md-9">
                                                                        @Html.TextBoxFor(one => one.MainEmail.EmailAddress, new { @class = "form-control input-sm editmain", placeholder = "" })
                                                                    </div>
                                                                </div>
                                                                <h4 class="subblock">
                                                                    @*Billing Contact Information*@
                                                                    <button type="button" class="btn btn-primary button-next  pull-right CancelBtn" id="btnBContactCancel" style="margin-left: 10px;padding-top:0px;margin-top:-5px;">Cancel</button>&nbsp;&nbsp;&nbsp;&nbsp;
                                                                    <button type="button" class="btn btn-primary  pull-right SaveBtn" id="btnBContactSave" style="margin-left: 10px;padding-top:0px;margin-top:-5px;">Save</button>&nbsp;&nbsp;&nbsp;&nbsp;
                                                                    <button type="button" class="btn btn-primary  pull-right EditBtn" id="EditBContact" onclick=EditBContactfunction(); style="margin-left: 10px;padding-top:0px;margin-top:-5px;">Edit</button>
                                                                </h4>
                                                                @Html.HiddenFor(one => one.BillingContactInformation2.ContactId)
                                                                @Html.HiddenFor(one => one.BillingPhone.PhoneId)
                                                                @Html.HiddenFor(one => one.BillingEmail.EmailId)

                                                                <div class="form-group">
                                                                    <label class="control-label col-md-2">
                                                                    </label>
                                                                    <div class="col-md-8">
                                                                        <label class="mt-checkbox">
                                                                            <input type="checkbox" name="chkbillingcontactsameas" id="chkbillingcontactsameas" class="editbill">Same as Contact Information
                                                                            <span></span>
                                                                        </label>
                                                                    </div>
                                                                </div>
                                                                <div class="form-group" style="padding-top:0px;">
                                                                    <label class="control-label col-md-2">
                                                                        Name
                                                                        <span class="required"> * </span>
                                                                    </label>
                                                                    <div class="col-md-9">
                                                                        @Html.TextBoxFor(one => one.BillingContactInformation2.Name, new { @class = "form-control input-sm editbill", required = "required", placeholder = "Required" })
                                                                    </div>
                                                                </div>
                                                                <div class="form-group">
                                                                    <label class="control-label col-md-2">
                                                                        Title
                                                                    </label>
                                                                    <div class="col-md-9">
                                                                        @Html.TextBoxFor(one => one.BillingContactInformation2.Title, new { @class = "form-control input-sm editbill", placeholder = "" })
                                                                    </div>
                                                                </div>
                                                                <div class="form-group">
                                                                    <label class="control-label col-md-2">
                                                                        Phone <span class="required"> * </span>
                                                                    </label>
                                                                    <div class="col-md-4" style="width:113px;">
                                                                        @Html.TextBoxFor(one => one.BillingPhone.Phone1, new { @class = "form-control input-sm editbill", placeholder = "Required" })
                                                                    </div>
                                                                    <div class="col-md-2" style="padding-left:0px;">
                                                                        @Html.TextBoxFor(one => one.BillingPhone.PhoneExt, new { @class = "form-control input-sm editbill", placeholder = "Ext", maxlength = "5" })
                                                                    </div>
                                                                    <div class="col-md-4" style="width:105px;padding-left:0px;">
                                                                        @Html.TextBoxFor(one => one.BillingPhone.Cell, new { @class = "form-control input-sm editbill", placeholder = "Cell" })
                                                                    </div>
                                                                </div>
                                                                <div class="form-group">
                                                                    <label class="control-label col-md-3" style="display:none;">
                                                                        Fax
                                                                    </label>
                                                                    <div class="col-md-3" style="display:none;">
                                                                        @Html.TextBoxFor(one => one.BillingPhone.Fax, new { @class = "form-control input-sm editbill", placeholder = "" })
                                                                    </div>

                                                                    <label class="control-label col-md-2">
                                                                        Email
                                                                    </label>
                                                                    <div class="col-md-9">
                                                                        @Html.TextBoxFor(one => one.BillingEmail.EmailAddress, new { @class = "form-control input-sm editbill", placeholder = "" })
                                                                    </div>
                                                                </div>
                                                                <h4 class="subblock">
                                                                    @*Bill Setting*@
                                                                    <button type="button" class="btn btn-primary button-next  pull-right CancelBtn" id="btnCancel" style="margin-left: 10px;padding-top:0px;margin-top:-4px;">
                                                                        Cancel
                                                                    </button>&nbsp;&nbsp;&nbsp;&nbsp;
                                                                    <button type="button" class="btn btn-primary  pull-right SaveBtn" id="btnSave" style="margin-left: 10px;padding-top:0px;margin-top:-4px;">
                                                                        Save
                                                                    </button>&nbsp;&nbsp;&nbsp;&nbsp;
                                                                    <button type="button" class="btn btn-primary  pull-right EditBtn" id="EditBSetting" onclick=Editfunction(); style="margin-left: 10px;padding-top:0px;margin-top:-4px;">
                                                                        Edit
                                                                    </button>&nbsp;&nbsp;&nbsp;&nbsp;
                                                                </h4>
                                                                <div class="form-group">
                                                                    <label class="control-label col-md-3">
                                                                    </label>
                                                                    <div class="col-md-4">
                                                                        <label class="mt-checkbox" style="margin-bottom: 8px;">
                                                                            @Html.CheckBoxFor(one => one.BillSetting.CreateInvoice, new { @class = "i-checks edit", @checked = "true", disabled = "disabled", @readonly = "readonly" })  Create Invoice @*Create Invoice*@
                                                                            <span></span>
                                                                        </label>
                                                                    </div>
                                                                </div>
                                                                <div class="form-group" style="display:none" id="Errmsg">
                                                                    <span style="color:red;padding-left:42px;">Print Invoice Or E-Bill only one required </span>
                                                                </div>
                                                                <div class="form-group">
                                                                    <label class="control-label col-md-3" style="margin-top:-7px;width:100px;">
                                                                        <label class="mt-checkbox" id="lblPBill">
                                                                            @Html.CheckBoxFor(one => one.BillSetting.PBill, new { @class = "i-checks edit", @checked = "true", disabled = "disabled", @readonly = "readonly" }) Print Invoice @*P-Bill*@
                                                                            <span></span>
                                                                        </label>
                                                                    </label>
                                                                    <div class="col-md-4">
                                                                        <label class="mt-checkbox" style="margin-bottom: 8px;" id="lblEBill">
                                                                            @Html.CheckBoxFor(one => one.BillSetting.EBill, new { @class = "i-checks edit", @checked = "true", disabled = "disabled", @readonly = "readonly" }) E-Bill
                                                                            <span></span>
                                                                        </label>
                                                                    </div>
                                                                    <input type="button" name="btnshowbillingcontactemail" value="Add Email" id="btnshowbillingcontactemail" class="btn btn-primary button-next" />
                                                                </div>

                                                                <div class="form-group">
                                                                    <label class="control-label col-md-3">
                                                                    </label>
                                                                    <div class="col-md-4">
                                                                        <label class="mt-checkbox" style="margin-bottom: 8px;">
                                                                            @Html.CheckBoxFor(one => one.BillSetting.PrintPastDue, new { @class = "i-checks edit", @checked = "true", disabled = "disabled", @readonly = "readonly" }) Print Past Due
                                                                            <span></span>
                                                                        </label>
                                                                    </div>
                                                                </div>
                                                                <div class="form-group">
                                                                    <label class="control-label col-md-3">
                                                                    </label>
                                                                    <div class="col-md-8">
                                                                        <label class="mt-checkbox" style="margin-bottom: 8px;">
                                                                            @Html.CheckBoxFor(one => one.BillSetting.TaxExcempt, new { @class = "i-checks edit", @checked = "true", disabled = "disabled", @readonly = "readonly" }) Tax Exempt @*(Applies to manual transactions only.)*@
                                                                            <span></span>
                                                                        </label>
                                                                    </div>
                                                                </div>
                                                                <div class="form-group">
                                                                    <label class="control-label col-md-3">
                                                                    </label>
                                                                    <div class="col-md-5">
                                                                        <label class="mt-checkbox" style="margin-bottom: 8px;">
                                                                            @Html.CheckBoxFor(one => one.BillSetting.ConsolidatedInvoice, new { @class = "i-checks edit", @checked = "true", disabled = "disabled", @readonly = "readonly" }) Consolidated Invoice
                                                                            <span></span>
                                                                        </label>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div style="overflow:auto;width: 100%; margin: 0em auto;padding-left:200px;padding-top:20px;display:none;">
                                                                <div class="form-group">
                                                                    <div class="col-md-3">
                                                                        <label class="mt-checkbox">
                                                                            @Html.CheckBoxFor(one => one.CustomerViewModel.Reference, new { @class = "i-checks", @checked = "true" })  Reference
                                                                            <span></span>
                                                                        </label>
                                                                    </div>
                                                                    <div class="col-md-3">
                                                                        <label class="mt-checkbox">
                                                                            @Html.CheckBoxFor(one => one.CustomerViewModel.NationalAccount, new { @class = "i-checks", @checked = "true" }) National Account
                                                                            <span></span>
                                                                        </label>
                                                                    </div>
                                                                    <div class="col-md-3">
                                                                        <label class="mt-checkbox">
                                                                            <input type="checkbox" name="chkChildAccount" data-toggle="modal" id="chkChildAccount">Child Account
                                                                            @*@Html.CheckBoxFor(one => one.CustomerViewModel.Parent, new { @class = "i-checks", @checked = "true" }) Child Account*@
                                                                            <span></span>
                                                                        </label>
                                                                    </div>
                                                                    <div class="col-md-3">
                                                                        <label style="text-align:left;" id="lblParentName"></label>
                                                                        <label style="text-align:left;" id="lblParentid" hidden></label>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="form-actions">
                                                </div>
                                                <div class="modal fade custom-model custom-form-design" id="modalData" tabindex="-1" role="basic" aria-hidden="true" style="display: none;"></div>
                                            </div>
                                        </div>
                                        @*
                                            </form>*@
                                    </div>
                                </div>
                            </div>

                        </div>

                    </section>
                </div>
                <!-- /.modal-content -->
            </div>
        </div>
    </div>
</form>

<div class="modal fade custom-model custom-form-design" id="modal_CustomerContractPopup" tabindex="-1" role="basic" aria-hidden="true" style="display: none;">
    <div class="modal-dialog" style="width:800px">
        <div class="modal-content" style="border-radius: 8px;" id="RenderCustomerContractDetails">

        </div>
    </div>
</div>

<div id="modal_IncreaseDecreaseDIV"></div>


<div class="form-horizontal" action="" id="form_FranchiseeDistribution"></div>

<div id="form_FranchiseCustomersDistributionPopup"></div>

<div class="modal fade custom-model custom-form-design" id="ModalFranchiseDistribution_CustomerPopup" tabindex="-1" role="basic" aria-hidden="true" style="display: none;">
    <div class="modal-dialog" style="width:350px">
        <div class="modal-content" style="border-radius: 0px;" id="RenderFranchiseDistributionCustomer">
            <div class="modal-content" style="border-radius: 8px;" id="RenderFranchiseDistribution">
                <div class="custom-form portlet light" id="" style="margin-top:0px;box-shadow: none;">
                    <div class="headerbox" style="font-weight: normal;border-radius: 0;">
                        <div class="col-md-12 text-center" style="font-size:15px;">
                            <b> SEARCH FRANCHISEE </b>
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true" style="margin-top: 5px !important;margin-right: 12px !important;"></button>
                        </div>
                        <div class="clearfix"> </div>
                    </div>
                    <div class="row" style="padding-top:8px;padding-bottom:8px;margin-left: 0px;margin-right: 0px;min-height: 100px;">
                        <div class="col-md-12">
                            <div class="col-md-12">
                                <input type="hidden" id="hdfsearch_franchiseeid" name="hdfsearch_franchiseeid" value="0" />
                                <div class="input-icon" style="margin-top: 30px;">
                                    <i class="icon-magnifier icon-align-right" style="margin-top: 8px;"></i>
                                    <input id="fcsearch-box" type="text" required name="franchiseenumber" autocomplete="off" placeholder="Search Franchisee Name or Number" value="" class="form-control input-sm typeahead" />
                                </div>
                            </div>
                        </div>
                    </div>
                    @*<div class="row">
                            <div class="col-md-12">
                                <div class="col-md-12">
                                    <button type="button" class="btn btn-primary button-next pull-right" onclick="ShowCustomerSave()">Submit</button>
                                </div>
                            </div>
                        </div>*@
                </div>
            </div>

        </div>
    </div>
</div>

<div class="form-horizontal" action="" id="form_FranchiseeIncreaseDistribution"></div>

<form class="form-horizontal" action="" id="form_service" method="POST">
    <div class="modal fade custom-model custom-form-design" id="modal_service" tabindex="-1" role="basic" aria-hidden="true" style="display: none;margin-top: 100px;">
        <div class="modal-dialog modal-sm">
            <div class="modal-content" style="border-radius: 8px;">
                <div class="modal-header headerbox list" style="padding:0px!important;border-bottom: none;">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true" style="margin-top: 12px !important;margin-right: 12px !important;"></button>
                    <h4 class="modal-title" style="margin-top: 0px; margin-bottom: 4px;  padding: 7px!important;font-size: 12px;font-weight: bold;background: #3598DC !important;color: #FFF !important;border: 1px solid #3598DC !important;padding: 0px;border-radius: 8px 8px 0 0;text-transform: uppercase;">
                        Contract Detail Service
                    </h4>
                </div>
                <div class="modal-body" style="padding: 0px 30px 15px 30px;">
                    <section>
                        <div class="row">
                            <div style="max-width: 98%;margin: 0px auto;">
                                <div class="custom-form portlet light " id="form_wizard_1">
                                    <div class="portlet-body form">
                                        <form class="form-horizontal" action="#" id="submit_form" method="POST">
                                            <div class="form-body-outer" style="padding: 0px;">
                                                <div style="overflow:auto;width: 100%; margin: 0em auto;">
                                                    <div class="form-group">
                                                        <label class="control-label col-md-4">
                                                        </label>
                                                        <div class="col-md-3">
                                                            <label class="mt-checkbox" style="margin-bottom: 8px;">
                                                                <input type="checkbox" id="chkScheduleMonday" class="i-checks editcheck">Monday
                                                                <span></span>
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        <label class="control-label col-md-4">
                                                        </label>
                                                        <div class="col-md-3">
                                                            <label class="mt-checkbox" style="margin-bottom: 8px;">
                                                                <input type="checkbox" id="chkScheduleTuesday" class="i-checks editcheck">Tuesday
                                                                <span></span>
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        <label class="control-label col-md-4">
                                                        </label>
                                                        <div class="col-md-3">
                                                            <label class="mt-checkbox" style="margin-bottom: 8px;">
                                                                <input type="checkbox" id="chkScheduleWednesday" class="i-checks editcheck">Wednesday
                                                                <span></span>
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        <label class="control-label col-md-4">
                                                        </label>
                                                        <div class="col-md-3">
                                                            <label class="mt-checkbox" style="margin-bottom: 8px;">
                                                                <input type="checkbox" id="chkScheduleThursday" class="i-checks editcheck">Thursday
                                                                <span></span>
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        <label class="control-label col-md-4">
                                                        </label>
                                                        <div class="col-md-3">
                                                            <label class="mt-checkbox" style="margin-bottom: 8px;">
                                                                <input type="checkbox" id="chkScheduleFriday" class="i-checks editcheck">Friday
                                                                <span></span>
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        <label class="control-label col-md-4">
                                                        </label>
                                                        <div class="col-md-3">
                                                            <label class="mt-checkbox" style="margin-bottom: 8px;">
                                                                <input type="checkbox" id="chkScheduleSaturday" class="i-checks editcheck">Saturday
                                                                <span></span>
                                                            </label>
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        <label class="control-label col-md-4">
                                                        </label>
                                                        <div class="col-md-3">
                                                            <label class="mt-checkbox" style="margin-bottom: 8px;">
                                                                <input type="checkbox" id="chkScheduleSunday" class="i-checks editcheck">Sunday
                                                                <span></span>
                                                            </label>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>

                        </div>

                    </section>
                </div>
                <!-- /.modal-content -->
            </div>
        </div>
    </div>
</form>



<div class="modal fade custom-model custom-form-design form-horizontal" id="modal_AccountOffring" tabindex="-1" role="basic" aria-hidden="true" style="display: none;">
    <div class="modal-dialog">
        <div class="modal-content" style="border-radius: 8px;">
            <div class="modal-header headerbox list" style="padding:0px!important;border-bottom: none;">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true" style="margin-top: 12px !important;margin-right: 12px !important;"></button>
                <h4 class="modal-title" style="margin-top: 0px; margin-bottom: 4px;  padding: 7px!important;font-size: 12px;font-weight: bold;background: #3598DC !important;color: #FFF !important;border: 1px solid #3598DC !important;padding: 0px;border-radius: 8px 8px 0 0;text-transform: uppercase;">
                    Account Offering
                </h4>
            </div>
            <div class="modal-body" style="padding: 3px">
                <section>
                    <div class="row">
                        <div style="max-width: 99%;margin: 0px auto;">
                            <div class="custom-form portlet light " id="form_wizard_1">
                                <div class="portlet-body form">
                                    <div class="form-body-outer" style="padding: 0px;">
                                        <div style="overflow:auto;width: 100%; margin: 0em auto;">
                                            <div class="tab-content">
                                                <div class="tab-pane active" id="tb_fr_page1">
                                                    <div class="form-group">
                                                        <div class="col-md-6" style="padding: 10px;">
                                                            <div class="row" style="padding: 3px;margin-top:-10px;"><b>Customer Name: @Html.DisplayFor(one => one.CustomerViewModel.Name)</b></div>
                                                            <div class="row" style="padding: 3px;"><b>Customer No: @Html.DisplayFor(one => one.CustomerViewModel.CustomerNo)</b></div>
                                                        </div>
                                                        <div class="col-md-6 text-right" style="padding-right:30px;text-align:right">
                                                            <div class="row" style="padding: 3px;"><b>Address</b> @(Model.MainAddress.Address1 ), </div>
                                                            <div class="row" style="padding: 3px;">@(Model.MainAddress.City + "," + ViewBag.Address + " " + Model.MainAddress.PostalCode)</div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-actions">
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <div class="row">
                                                        <div class="control-label col-md-4" id="selectAccountOfferingFranchisee">
                                                            Franchisees Type:
                                                        </div>
                                                        <div class="col-md-3">
                                                            @Html.DropDownList("FranchiseeTypeList", (SelectList)ViewBag.FranchiseeTypeList, new { @class = "form-control input-sm", @id = "select_AOFranchiseeTypeList" })
                                                        </div>
                                                    </div>

                                                </div>
                                                <div class="form-group">
                                                    <div class="row">
                                                        <div class="control-label col-md-4">
                                                            Distance within:
                                                        </div>
                                                        <div class="col-md-3">
                                                            <input class="form-control input-sm" id="txtAccountOfferingDistance" />
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <div class="row">
                                                        <div class="control-label col-md-4">
                                                            Include Call Results From:
                                                        </div>
                                                        <div class="col-md-3">
                                                            <select id="select_timedurationAccountOffering" class="form-control input-sm">
                                                                <option value="1">This Week</option>
                                                                <option value="2">This Week-to-date</option>
                                                                <option value="3" selected="selected">This Month</option>
                                                                <option value="4">This Month-to-date</option>
                                                                <option value="5">This Fiscal Quarter</option>
                                                                <option value="6">This Fiscal Quarter-to-date</option>
                                                                <option value="7">This Fiscal Year</option>
                                                                <option value="8">This Fiscal Year-to-date</option>
                                                                <option value="9">Yesterday</option>
                                                                <option value="10">Last Week</option>
                                                                <option value="11">Last Month</option>
                                                                <option value="12">Last Quarter</option>
                                                                <option value="13">Last Year</option>
                                                                <option value="14">Custom Date</option>
                                                            </select>
                                                        </div>
                                                        <div class="col-md-2">
                                                            <input class="date date-picker input-sm form-control" id="sDateAccountOffering" />
                                                        </div>
                                                        <div class="col-md-1 control-label" style="padding-right: 12px;">
                                                            To
                                                        </div>
                                                        <div class="col-md-2">
                                                            <input class="date date-picker input-sm form-control" id="eDateAccountOffering" />
                                                        </div>
                                                    </div>
                                                </div>
                                                <hr />
                                                <div class="form-group">
                                                    <div class="row">
                                                        <div class="col-md-12 text-center">
                                                            <a class="btn btn-primary" href="javascript:void(0)" onclick="SearchAccountOffer(@Model.CustomerDetail.CustomerId)">Search</a>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="modal fade custom-model custom-form-design" id="modalData" tabindex="-1" role="basic" aria-hidden="true" style="display: none;"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            </div>
            <!-- /.modal-content -->
        </div>
    </div>
</div>

@*Account Offering Modal*@
<div id="_div_AccountOffringResult"></div>



<!--Maintenance-->
<div class="modal fade custom-model custom-form-design" id="modal_customermaintenanceDetail" tabindex="-1" role="basic" aria-hidden="true" style="display: none;">
    <div class="modal-dialog modal-sm" style="width: 950px;">
        <div class="modal-content" style="border-radius: 8px;">
            <div class="modal-header headerbox list" style="padding:0px!important;border-bottom: none;">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true" style="margin-top: 12px !important;margin-right: 12px !important;"></button>
                <h4 class="modal-title text-center" style="margin-top: 0px; margin-bottom: 4px;  padding: 7px!important;font-size: 12px;font-weight: bold;background: #3598DC !important;color: #FFF !important;border: 1px solid #3598DC !important;padding: 0px;text-transform: uppercase;">
                    Customer Maintenance
                </h4>
            </div>
            <div id="form_customermaintenancem">

            </div>
        </div>

    </div>
</div>

<div class="modal fade bs-modal-sm in" id="mdlAppendemail" aria-hidden="true">
    <div class="modal-dialog modal-sm" style="width:300px;">
        <div class="modal-content">
            <div class="modal-header" id="mdlAppendemail_header" style="padding-top: 7px;padding-bottom: 7px;background: #3598DC !important;">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                <h4 class="modal-title" style="font-weight: bold;color:white;font-size: 12px;">Add Emails</h4>
            </div>
            <div class="modal-body" id="mdlAppendemail_body" style="padding: 0;">
                <form action="#" id="mdlAppendemail_form">
                    <div class="col-md-12" id="divEBill_Emails"></div>
                    <div class="col-md-9"><input type="email" name="txtemailaddress_ebill" id="txtemailaddress_ebill" value="" class="form-control input-sm" /></div>
                    <div class="col-md-2"><input type="button" name="btnaddemailaddress_ebill" id="btnaddemailaddress_ebill" value="Add" class="btn btn-primary button-next" style="padding: 3px 8px;font-size: 12px;" /></div>
                </form>

            </div>

            <div class="modal-footer" id="childmodal_modalview_footer">
                &nbsp;
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
</div>


<div class="modal fade bs-modal-sm in" id="mdlAppendemail" aria-hidden="true">
    <div class="modal-dialog modal-sm" style="width:300px;">
        <div class="modal-content">
            <div class="modal-header" id="mdlAppendemail_header" style="padding-top: 7px;padding-bottom: 7px;background: #3598DC !important;">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                <h4 class="modal-title" style="font-weight: bold;color:white;font-size: 12px;">Add Emails</h4>
            </div>
            <div class="modal-body" id="mdlAppendemail_body" style="padding: 0;">

            </div>

            <div class="modal-footer" id="childmodal_modalview_footer">
                &nbsp;
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
</div>

<div id="divfinderfeelist"></div>



@*COLLECTION CALL LOG Modal*@
<div class="modal fade in" id="modal_CollectionCallLog" tabindex="-1" role="basic" aria-hidden="true" style="display: none; padding-right: 17px;">
    <div class="modal-dialog modal-lg" id="Render_CollectionCallLogDetails">
    </div>
</div>

<div class="modal fade in" id="modal_ServiceCallLog" tabindex="-1" role="basic" aria-hidden="true" style="display: none; padding-right: 17px;">
    <div class="modal-dialog modal-lg" id="Render_ServiceCallLogDetails">
    </div>
</div>

<div class="modal fade in" id="modal_CustomerAccountHistoryPopup" tabindex="-1" role="basic" aria-hidden="true" style="display: none; padding-right: 17px;">
    <div class="modal-dialog modal-lg" id="Render_CustomerAccountHistoryPopup">
    </div>
</div>

<div class="modal fade in" id="modal_IncreaseDecreaseReportPopup" tabindex="-1" role="basic" aria-hidden="true" style="display: none; padding-right: 17px;">
    <div class="modal-dialog modal-lg" id="Render_IncreaseDecreaseReportPopup">
    </div>
</div>

@*CREDIT TRANSACTION Modal *@
<div class="modal fade in" id="modal_CreditTransaction" tabindex="-1" role="basic" aria-hidden="true" style="display: none; padding-right: 17px;">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" style="border-radius: 8px;">
            <div class="modal-header headerbox list" style="padding:0px!important;border-bottom: none;">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true" style="margin-top: 12px !important;margin-right: 12px !important;"></button>
                <h4 class="modal-title text-center" style="margin-top: 0px; margin-bottom: 4px;  padding: 7px!important;font-size: 12px;font-weight: bold;background: #3598DC !important;color: #FFF !important;border: 1px solid #3598DC !important;padding: 0px;text-transform: uppercase;">
                    CREDIT TRANSACTION
                </h4>
            </div>
            <div class="modal-body form form-horizontal" style="padding-top: 1px;margin-top: -5px;">
                <div class="form-body">
                    <div class="form-group">
                        <div class="form-group">
                            <div class="col-md-12">
                                <div class="col-md-3 control-label">
                                    <span>Customer No.<span style="color:#000000;">&nbsp;:</span></span>
                                    @Html.HiddenFor(one => one.CustomerViewModel.CustomerId, new { id = "CTMC" })
                                </div>
                                <div class="col-md-2" style="padding-top: 8px;">
                                    <span><b>@Html.DisplayFor(one => one.CustomerViewModel.CustomerNo)</b></span>
                                </div>
                                <div class="col-md-2">
                                </div>
                                <div class="col-md-2 control-label">
                                    <span>Contact<span style="color:#000000;">&nbsp;:</span></span>
                                </div>
                                <div class="col-md-3" style="padding-top: 8px;">
                                    <span><b>@Html.DisplayFor(one => one.CustomerDetail.ContactName)</b></span>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12">
                                <div class="col-md-3 control-label" style="padding-top: 0px;">
                                    <span>Customer Name<span style="color:#000000;">&nbsp;:</span></span>
                                </div>
                                <div class="col-md-4" style="">
                                    <span><b>@Html.DisplayFor(one => one.CustomerDetail.CustomerName)</b></span>
                                </div>
                                <div class="col-md-2 control-label" style="padding-top: 0px;">
                                    <span>Phone No.<span style="color:#000000;">&nbsp;:</span></span>
                                </div>
                                <div class="col-md-3">
                                    <span><b>@Html.DisplayFor(one => one.CustomerDetail.Phone)</b></span>
                                </div>
                            </div>
                        </div>

                        <div class="form-group" style="margin-left:-3px; margin-right:-3px;">
                            <div class="row" style="background-color: #4b85cc;color: #fff;padding-top:8px;padding-bottom:8px">

                                <div class="col-md-12">
                                    <div class="col-md-3">
                                        <div class="input-icon">
                                            <i class="icon-magnifier icon-align-right" style="margin-top: 8px; margin-left:-12px;"></i>
                                            <input type="text" placeholder="Search..." class="form-control input-sm typeahead" style="margin-left:-25px;" value="" autocomplete="off" id="input_SearchCT" />
                                        </div>
                                        <div id="container">
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <label class="mt-checkbox" style="margin-bottom: 0px;">
                                            <input type="checkbox" id="chkOpenMP" class="search-field" checked="checked">Open
                                            <span></span>
                                        </label>
                                        <label class="mt-checkbox" style="margin-bottom: 0px;">
                                            <input type="checkbox" id="chkCloseMP" class="search-field">Closed
                                            <span></span>
                                        </label>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="pull-right">
                                            @Html.DropDownList("optionList", (SelectList)ViewBag.OptionList, new { @class = "form-control input-sm", @id = "select_dateRangeCT", style = "width: 180px;float: left;margin-right:10px;margin-left: -25px" })<span style="width: 40px;float: left;padding: 5px;">From</span>
                                            <input type="text" name="dtpfrom" value="" class="form-control input-sm search-date-field date-picker" id="dtpfromCT" onkeydown="return false" style="width: 85px;float: left;" />
                                            <label></label>
                                            <span style="width: 25px;float: left;padding: 5px;">To</span>
                                            <input type="text" name="dtpto" value="" class="form-control input-sm search-date-field date-picker" id="dtptoCT" onkeydown="return false" style="width: 85px;float: left;" />
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>

                        <div class="form-group" style="margin-top:-13px;">
                            <div class="col-md-12">
                                <div class="table-responsive">
                                    <table class="table table-striped table-bordered table-hover" id="tblCustomerCreditsList" style="width: 100%">
                                        <thead>
                                            <tr>
                                                <th class="tblInvoice_invoiceNo" style="width:80px;text-align:center;">
                                                    Invoice No
                                                </th>
                                                <th class="tblInvoice_invoiceDate" style="width:80px;text-align:center;">
                                                    Invoice Date
                                                </th>
                                                <th class="tblInvoice_customerNo" style="width:70px;text-align:center;">
                                                    Customer Number
                                                </th>
                                                <th class="tblInvoice_customerName" style="width:180px;text-align:center;">
                                                    Customer Name
                                                </th>
                                                <th class="tblInvoice_invoiceDesc" style="width:180px;text-align:center;">
                                                    Invoice Desc.
                                                </th>
                                                <th class="tblInvoice_invoiceAmt" style="text-align:center;width:100px;">
                                                    Inv. Amount
                                                </th>
                                                <th class="tblInvoice_balance" style="text-align:center;width:70px;">
                                                    Balance
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody></tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div id="form_applycreditformDiv">

</div>
@*<form class="form-horizontal" role="form" id="form_applycreditform" action="@Url.Action("ApplyCredit","AccountReceivable","Portal")" method="post">
        <div class="modal fade custom-model custom-form-design" id="modal_applycreditform" tabindex="-1" role="basic" aria-hidden="true" style="display: none;">
            <div class="modal-dialog" style="width:1000px">
                <div class="modal-content" style="border-radius: 8px;">
                </div>
                <!-- /.modal-content -->
            </div>
        </div>
    </form>*@

<div id="cancellationcreditforms">

</div>



<div id="divmodal_ManualPayment"></div>

<div class="modal fade bs-modal-sm in" id="modal_AddFee" aria-hidden="true">
    <div class="modal-dialog modal-sm" style="padding-top: 100px;">
        <div class="modal-content">
            <div class="modal-header" id="mdlAppendemail_header" style="padding-top: 7px;padding-bottom: 7px;background: #3598DC !important;">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                <h4 class="modal-title" style="font-weight: bold;color:white;font-size: 12px;">FEE</h4>
            </div>
            <div class="modal-body" id="mdlAppendemail_body" style="padding: 0;">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered table-hover order-column" id="tblContractDetail">
                        <thead>
                            <tr>
                                <th class="text-center" style="width: 140px;background: lightgray;">FEE NAME</th>
                                <th class="text-center" style="background: lightgray;">TYPE</th>
                                <th class="text-center" style="background: lightgray;">AMOUNT</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td class="text-center">Technology Fee</td>
                                <td class="text-center">Percentage</td>
                                <td class="text-center"><input type="text" class="form-control input-sm text-right" value="2.5" /></td>
                            </tr>
                            <tr>
                                <td class="text-center">Advertising Fee</td>
                                <td class="text-center">Percentage</td>
                                <td class="text-center"><input type="text" class="form-control input-sm text-right" value="1.5" /></td>
                            </tr>
                            <tr>
                                <td class="text-center">Royalty</td>
                                <td class="text-center">Percentage</td>
                                <td class="text-center"><input type="text" class="form-control input-sm text-right" value="10" /></td>
                            </tr>
                            <tr>
                                <td class="text-center">Business Protection</td>
                                <td class="text-center">Percentage</td>
                                <td class="text-center"><input type="text" class="form-control input-sm text-right" value="6.75" /></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div class="row">
                    <a href="javascript:void(0);" style="padding-left: 10px;">Include Another Fee</a>
                </div>
                <hr style="margin-top:0px;margin-bottom:0px;" />
                <div class="modal-footer">
                    <div class="col-md-12">
                        <div class="col-md-10"></div><div class="col-md-2">
                            <button class="btn btn-primary" id="btnAddFee">Save</button>
                        </div>
                    </div>
                </div>
            </div>

        </div>
        <!-- /.modal-content -->
    </div>
</div>

<div class="modal fade in" id="modal_SaveAddFee" tabindex="-1" role="basic" aria-hidden="true" style="display: none; padding-right: 17px;">
    <div class="modal-dialog" style="padding-top: 90px;">
        <div class="modal-content" style="border-radius: 8px;">
            <div class="modal-header headerbox list" style="padding:0px!important;border-bottom: none;">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true" style="margin-top: 12px !important;margin-right: 12px !important;"></button>
                <h4 class="modal-title text-center" style="margin-top: 0px; margin-bottom: 4px;  padding: 7px!important;font-size: 12px;font-weight: bold;background: #3598DC !important;color: #FFF !important;border: 1px solid #3598DC !important;padding: 0px;text-transform: uppercase;">
                    STOP FINDER'S FEE
                </h4>
            </div>
            <div class="modal-body form form-horizontal" style="padding-top: 1px;margin-top: -5px;">
                <div class="form-body">
                    <div class="form-group">
                        <div class="form-group">
                            <div class="col-md-12">
                                <div class="col-md-8" style="padding-top: 0px;">
                                    <span><b>Bill Month/Year: 11/2017</b></span></span>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <div class="table-responsive">
                                    <table class="table table-striped table-bordered table-hover order-column" id="tblContractDetail">
                                        <thead>
                                            <tr>
                                                <th class="text-center" style="width: 140px;background: lightgray;">Franchisee No</th>
                                                <th class="text-center" style="background: lightgray;">Franchisee Name</th>
                                                <th class="text-center" style="background: lightgray;">Finders Fee Stop Date</th>
                                                <th class="text-center" style="background: lightgray;">Note</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr>
                                                <td class="text-center">701011</td>
                                                <td class="text-center">KIMBURNS, LLC</td>
                                                <td class="text-center"></td>
                                                <td class="text-center"></td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade custom-model custom-form custom-form-design" id="modal_applypaymentprompt" tabindex="-1" style="display: none;">
    <div class="modal-dialog" style="width:500px">
        <div class="modal-content" style="border-radius: 8px; font-size: 16px">
            <div class="headerbox">
                <div class="row">
                    &nbsp;
                </div>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12" style="padding: 20px 100px 40px 100px;">
                        Do you want to apply partial payment against Invoice No. <span id="lblPromptInvoiceNo">&nbsp;</span>?
                    </div>
                    <div class="col-md-12">
                        <div class="col-md-6"></div>
                        <div class="col-md-3">
                            <button id="btnSaveAndClose" type="button" class="btn green btn-block" onclick="onClickYesApplyPayment()">Yes</button>
                        </div>

                        <div class="col-md-3">
                            <button id="btnSaveAndNew" type="button" class="btn green btn-block" onclick="onClickNoApplyPayment()">No</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade custom-model custom-form custom-form-design" id="modal_customercreditprompt" tabindex="-1" style="display: none;">
    <div class="modal-dialog" style="width:500px">
        <div class="modal-content" style="border-radius: 8px; font-size: 16px">
            <div class="headerbox">
                <div class="row">
                    &nbsp;
                </div>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12" style="padding: 20px 100px 40px 100px;">
                        Do you want to apply <span id="lblPromptCreditAmt">&nbsp;</span> in customer credit for Customer <span id="lblPromptCreditCustomerName">&nbsp;</span>?
                    </div>
                    <div class="col-md-12">
                        <div class="col-md-6"></div>
                        <div class="col-md-3">
                            <button type="button" class="btn green btn-block" onclick="onClickYesApplyCustomerCredit()">Yes</button>
                        </div>

                        <div class="col-md-3">
                            <button type="button" class="btn green btn-block" onclick="onClickNoApplyCustomerCredit()">No</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="sweet-alert modal  showSweetAlert visible" id="swtModel" tabindex="-1" data-keyboard="false" style="display: none; margin-top: -149px; height: 250px;z-index: 15151;">
    <div class="sa-icon sa-error" style="display: none;">
        <span class="sa-x-mark">
            <span class="sa-line sa-left"></span>
            <span class="sa-line sa-right"></span>
        </span>
    </div><div class="sa-icon sa-warning" style="display: none;">
        <span class="sa-body"></span>
        <span class="sa-dot"></span>
    </div><div class="sa-icon sa-info" style="display: none;"></div><div class="sa-icon sa-success animate" style="display: block;">
        <span class="sa-line sa-tip animateSuccessTip"></span>
        <span class="sa-line sa-long animateSuccessLong"></span>

        <div class="sa-placeholder"></div>
        <div class="sa-fix"></div>
    </div><div class="sa-icon sa-custom" style="display: none;"></div><h2>Payment Approved!</h2>
    <p class="lead text-muted " style="display: block;"></p>
    <div class="form-group">
        <input type="text" class="form-control" tabindex="3" placeholder="">
        <span class="sa-input-error help-block">
            <span class="glyphicon glyphicon-exclamation-sign"></span> <span class="sa-help-text">Not valid</span>
        </span>
    </div><div class="sa-button-container">
        <button class="cancel btn btn-lg btn-default" tabindex="2" style="display: none;">Cancel</button>
        <div class="sa-confirm-button-container">
            <button class="confirm btn btn-lg btn-primary" tabindex="1" style="display: inline-block;" id="btnSuccessPopUp">OK</button><div class="la-ball-fall">
                <div></div>
                <div></div>
                <div></div>
            </div>
        </div>
    </div>
</div>




<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog" style="margin: 110px auto;" role="document">
        <div class="modal-content">
            <div class="modal-header" style="padding: 8px;background-color: #346587 !important;">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel" style="color: white;">Credit Card Details</h4>
            </div>
            <div class="modal-body">
                <div class="form-body" id="DivCustomer">
                    <div class="row">
                        <div class="col-md-12">
                            @*<div class="form-group">
                                    <label class="control-label col-md-2" style="padding: 5px;">
                                        Invoice For&nbsp;:
                                    </label>
                                    <div class="col-md-5 inline-block">
                                        <input id="csearch-box" type="text" required name="customernumber" autocomplete="off" placeholder="Search Customer Name or Number" value="" class="form-control input-sm typeahead" />
                                    </div>
                                    <div class="col-md-2 inline-block">

                                    </div>
                                </div>*@
                            <div class="form-group">
                                <label class="control-label col-md-2" style="padding: 5px;">
                                    Amount&nbsp;:
                                </label>
                                <div class="col-md-5 inline-block">
                                    <input id="txtAmountToBePay" type="text" required name="txtAmountToBePay" autocomplete="off" placeholder="Amount" value="" class="form-control input-sm" />
                                </div>
                                <div class="col-md-2 inline-block">
                                </div>
                            </div>
                            <hr style="margin: 0px;" />
                        </div>

                    </div>
                </div>
                <div class="form-body" id="DivCustomerProfile" style="display:none;">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label class="control-label col-md-2" style="padding: 5px;">
                                    Previous Card &nbsp;:
                                </label>
                                <div class="col-md-5 inline-block">
                                    <label for="ChkCustomerProfile" id="lblAccount" style="margin-top: 8px;">Text</label>
                                    <input id="ChkCustomerProfile" type="checkbox" name="ChkCustomerProfile" onclick="CustomerChk(this)" style="width: 20px;margin-left: 60px;margin-top: -25px;" class="form-control input-sm" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <br />
                    <hr />
                    <br />
                </div>

                <div class="demo-container" style="display:none;">
                    <div class="card-wrapper"></div>
                    <br />
                    <div class="form-container active">
                        <form id="CCForm" action="">
                            <input placeholder="Card number" type="tel" id="txtCard" name="number" class="form-control"><br />
                            <input placeholder="Full name" type="text" id="txtCCName" name="name" class="form-control"><br />
                            <input placeholder="MM/YY" type="tel" name="expiry" id="txtCCExpiry" class="form-control"><br />
                            <input placeholder="CVC" type="number" name="cvc" id="txtCCcvc" class="form-control">
                        </form>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" id="btnCCCancle" data-dismiss="modal">Cancle</button>
                <button type="button" id="BtnCCPay" class="btn btn-primary">Pay</button>
            </div>
        </div>
    </div>
</div>


<div id="div_FeeFinderdetailResultData"></div>
@*<div class="form-horizontal" action="" id="form_FranchiseeCall"></div>*@
<div class="form-horizontal" action="" id="form_LogCall"></div>
<div class="modal fade custom-model custom-form-design" id="modal_showStatements" tabindex="-1" role="basic" aria-hidden="true" style="display: none; padding-right: 17px;">
    <div class="modal-dialog modal-lg ui-draggable ui-draggable-handle">
        <div class="modal-content" style="border-radius: 8px;">
            <div class="modal-header headerbox list" style="padding:0px!important;background:#3598DC !important;border-bottom-width:0px">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true" style="margin-top: 12px !important;margin-right: 12px !important;"></button>
                <h4 class="modal-title" style="padding:10px;font-size: 12px;font-weight: bold;background: #3598DC !important;color: #FFF !important;border-radius: 8px 8px 0 0;text-transform: uppercase;">
                    Statements
                </h4>
            </div>
            <div class="modal-body form form-horizontal">
                <div class="col-md-12" style="background-color:#67809F !important; color: #fff; padding: 5px">
                    <div class="col-md-1 col-md-offset-5 pnd5">
                        Date
                    </div>
                    <div class="col-md-3">
                        <select id="select_timedurationStatements" class="form-control input-sm">
                            <option value="1">This Week</option>
                            <option value="2">This Week-to-date</option>
                            <option value="3">This Month</option>
                            <option value="4">This Month-to-date</option>
                            <option value="5">This Quarter</option>
                            <option value="6">This Quarter-to-date</option>
                            <option value="7" selected="selected">This Fiscal Year</option>
                            <option value="8">This Fiscal Year-to-date</option>
                            <option value="9">Yesterday</option>
                            <option value="10">Last Week</option>
                            <option value="11">Last Month</option>
                            <option value="12">Last Quarter</option>
                            <option value="13">Last Year</option>
                            <option value="14">Custom Date</option>
                        </select>
                    </div>
                    <div class="col-md-2 pnd5" style="padding-top: 5px;padding-left: 0px;padding-right: 0px;" id="divspandateStatements">
                        <span id="spnStartDateStatements">08/01/2017</span> - <span id="spnEndtDateStatements">08/31/2017</span>
                    </div>
                    <div class="col-md-1 pnd5" style="padding-top: 7px;display:none;" id="divSDStatements">
                        <input type="text" name="txtStartDateStatements" value="" class="form-control input-sm date-picker" style="padding: 3px;" />
                    </div>
                    <div class="col-md-1 pnd5" style="padding-top: 7px;display:none;" id="divED">
                        <input type="text" name="txtEndtDateStatements" value="" class="form-control input-sm date-picker" style="padding: 3px;" />
                    </div>
                </div>
                <div class="form-body" style="padding-top: 0px;">
                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-8" style="padding-top: 12px;">
                                <div class="form-group">
                                    <div class="col-md-12">
                                        <div class="col-md-3 control-label">
                                            <span>Customer No.<span style="color:#000000;">&nbsp;:</span></span>
                                        </div>
                                        <div class="col-md-4" style="padding-top: 8px;">
                                            <span><b>@Html.DisplayFor(one => one.CustomerViewModel.CustomerNo)</b></span>
                                        </div>
                                        <div class="col-md-2 control-label">
                                            <span>Contact<span style="color:#000000;">&nbsp;:</span></span>
                                        </div>
                                        <div class="col-md-3" style="padding-top: 8px;">
                                            <span><b>@Html.DisplayFor(one => one.CustomerDetail.ContactName)</b></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-12">
                                        <div class="col-md-3 control-label" style="padding-top: 0px;">
                                            <span>Customer Name<span style="color:#000000;">&nbsp;:</span></span>
                                        </div>
                                        <div class="col-md-4" style="">
                                            <span><b>@Html.DisplayFor(one => one.CustomerDetail.CustomerName)</b></span>
                                        </div>
                                        <div class="col-md-2 control-label" style="padding-top: 0px;padding-left: 0px;">
                                            <span>Phone No.<span style="color:#000000;">&nbsp;:</span></span>
                                        </div>
                                        <div class="col-md-3">
                                            <span><b>@Html.DisplayFor(one => one.CustomerDetail.Phone)</b></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4" style="padding-top: 5px;">
                                <div class="table-responsive">
                                    <table class="table table-bordered">
                                        <tr>
                                            <td class="text-center">Previous Balance</td>
                                            <td class="text-right"><span id="spnStatements_PreviousBalance">&nbsp;</span></td>
                                        </tr>
                                        <tr>
                                            <td class="text-center">Credit/Payment</td>
                                            <td class="text-right">(<span id="spnStatements_Credits">&nbsp;</span>)</td>
                                        </tr>
                                        <tr>
                                            <td class="text-center">New Invoices</td>
                                            <td class="text-right"><span id="spnStatements_Debits">&nbsp;</span></td>
                                        </tr>
                                        <tr>
                                            <td class="text-center"><b>Total Balance Due</b></td>
                                            <td class="text-right"><b><span id="spnStatements_NewBalance">&nbsp;</span></b></td>
                                        </tr>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <div class="row" style="margin-top:5px">
                            <div class="col-md-12">
                                <div class="table-responsive">
                                    <table class="table table-striped table-bordered table-hover" id="tbl_statementTransactions">
                                        <thead>
                                            <tr>
                                                <th style="width:70px;text-align:center;background-color: #4b85cc;color:white">
                                                    Trx Type
                                                </th>
                                                <th style="text-align:center;width:30px;background-color: #4b85cc;color:white">
                                                    Trx Date
                                                </th>
                                                <th style="text-align:center;width:60px;background-color: #4b85cc;color:white">
                                                    Trx Number
                                                </th>
                                                <th style="text-align:center;width:200px;background-color: #4b85cc;color:white">
                                                    Description
                                                </th>
                                                <th style="text-align:center;width:70px;background-color: #4b85cc;color:white">
                                                    Charges
                                                </th>
                                                <th style="text-align:center;width:60px;background-color: #4b85cc;color:white">
                                                    Credits
                                                </th>
                                                <th style="text-align:center;width:60px;background-color: #4b85cc;color:white">
                                                    Balance
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody></tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <hr />
                        <div class="form-group">
                            <div class="col-md-12">
                                <div class="col-md-2 control-label" style="padding-top: 0px;">
                                    <button type="button" class="col-md-12 btn btn-primary" id="btnPrintStatement">Print<i class="fa fa-print" style="padding-left: 7px;"></i></button>
                                </div>
                                <div class="col-md-2 control-label" style="padding-top: 0px;">
                                    <button type="button" class="col-md-12 btn btn-primary" id="btnExportStatement">Export<i class="fa fa-download" style="padding-left: 7px;"></i></button>
                                </div>
                                <div class="col-md-2 control-label" style="padding-top: 0px;">
                                    <button type="button" class="col-md-12 btn btn-primary" id="btnEmailStatement" onclick="DetailInvoiceListSendEmail(@ViewBag.CustomerID)">Email<i class="fa fa-envelope" style="padding-left: 7px;"></i></button>
                                </div>
                                <div class="col-md-2 col-md-offset-4 control-label" style="padding-top: 0px;">
                                    <button type="button" class="col-md-12 btn btn-primary" id="btnCloseStatements">Close<i class="fa fa-close" style="padding-left: 7px;"></i></button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade custom-model custom-form-design" id="modal_invoicedetailEmail" tabindex="-1" role="basic" aria-hidden="true" style="display: none;">
    <div class="modal-dialog" style="width:600px">
        <div class="modal-content" style="border-radius: 8px;">
            <div class="modal-header headerbox list" style="padding:0px!important;border-bottom: none;">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true" style="margin-top: 12px !important;margin-right: 12px !important;"></button>
                <h4 class="modal-title" style="margin-top: 0px; margin-bottom: 4px;  padding: 7px!important;font-size: 12px;font-weight: bold;background: #3598DC !important;color: #FFF !important;border: 1px solid #3598DC !important;padding: 0px;border-radius: 8px 8px 0 0;text-transform: uppercase;">
                    Email
                </h4>
            </div>


            <div class="modal-body" style="padding: 0px 30px 15px 30px;">
                <div class="row">
                    <label class="control-label col-md-2">From</label>
                    <div class="col-md-10">
                        <input type="text" id="invdetail_txtfromemail" name="invdetail_txtfromemail" class="form-control input-sm" value="" />
                    </div>
                </div>
                <div class="row">
                    <label class="control-label col-md-2">To</label>
                    <div class="col-md-10">
                        <input type="text" id="invdetail_txttoemail" name="invdetail_txttoemail" class="form-control input-sm" value="@(ViewBag.CustBillingEmail != null ? ViewBag.CustBillingEmail :string.Empty )" />
                    </div>
                </div>
                <div class="row">
                    <label class="control-label col-md-2">CC</label>
                    <div class="col-md-10">
                        <input type="text" id="invdetail_txtccemail" name="invdetail_txtccemail" class="form-control input-sm" value="" />
                    </div>
                </div>
                <div class="row">
                    <label class="control-label col-md-2">Subject</label>
                    <div class="col-md-10">
                        <input type="text" id="invdetail_txtsubjectemail" name="invdetail_txtsubjectemail" class="form-control input-sm" value="Statements" />
                    </div>
                </div>
                <div class="row">
                    <label class="control-label col-md-2">Email Body</label>
                    <div class="col-md-10">
                        <textarea rows="5" id="invdetail_txtemailbodyemail" name="invdetail_txtemailbodyemail" class="form-control input-sm"></textarea>
                    </div>
                </div>
                <hr />
                <div class="row">
                    <label class="control-label col-md-2">Email Body</label>
                    <div class="col-md-10">
                        <span>
                            To open the attached pdf, You need the free Adobe Reader software which can be here <a javascript:void(0);>Adobe</a>
                        </span>
                        <hr />
                        <p>
                            This email is intended for the party listed in the 'Sold To' field of the attached invoice. Delivery of this email to anyone other than the party to which is was intended is unintentional. In the event this email was misdirected to a party other that the intended party, please notify the sender destroy this email.
                        </p>
                    </div>
                </div>
                <hr />
                <div class="row">
                    <div class="col-md-7"></div>
                    <div class="col-md-5">
                        <button type="button" id="invdetail_btnsendemail" class="btn btn-primary button-next pull-right" onclick="invdetail_sendemail()">Send&nbsp;<i class="fa fa-floppy-o"></i></button>
                    </div>

                </div>
            </div>
        </div>

    </div>
</div>
<div class="form-horizontal" id="form_CustomerTransfer"></div>

@*PartialView PaymentDetail*@
<div class="form-horizontal" id="form_paymentlist"></div>

@*PartialView CustomerCredit*@
<div class="form-horizontal" id="form_CusCreditDetails"></div>

<div class="modal fade in" id="ModelCustomerUploadDocumentPopup" tabindex="-1" role="basic" aria-hidden="true" style="display: none;">
    <div class="modal-dialog" style="width:810px">
        <div class="modal-content" style="border-radius: 8px;" id="RenderCustomerUploadDocumentPopup">
        </div>
    </div>
</div>


<div class="modal fade custom-model custom-form custom-form-design" id="modal_ExistsMaintenancePrompt" tabindex="-1" style="display: none;">
    <div class="modal-dialog" style="width:400px">
        <div class="modal-content" style="border-radius: 8px; font-size: 12px">
            <div class="modal-header" id="mdlAppendemail_header" style="padding-top: 7px;padding-bottom: 7px;background: #3598DC !important;">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                <h4 class="modal-title" style="font-weight: bold;color:white;font-size: 12px;">Warning</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12" style="text-align:center;">
                        <span id="spnExistsMaintenancePromptMsg"></span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@*MANUAL INVOICE Modal *@
<div id="form_modal_customermanualinvoice"></div>
<div class="form-horizontal" id="form_invoicedetail"></div>

@section pageplugins{

    @*<script src="@Url.Content("~/Content/admin/assets/global/plugins/jquery-ui/jquery-ui.min.js")" type="text/javascript"></script>*@
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/jquery-validation/js/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/jquery-inputmask/jquery.inputmask.bundle.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/scripts/datatable.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/datatables/datatables.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/pages/scripts/table-datatables-managed.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/moment.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/bootstrap-typeahead/bootstrap3-typeahead.min.js")" type="text/javascript"></script>
    <script src="~/Scripts/jquery-ui.js" type="text/javascript"></script>
    <script src="~/Content/admin/assets/Card/dist/jquery.card.js"></script>
    @if (Request.IsSecureConnection)
    {
        <script src="https://maps.google.com/maps/api/js?key=AIzaSyCrw533WZZijl0sItzXs-DjfyHMN5g4xD8" async defer></script>
    }
    else
    {
        <script src="http://maps.google.com/maps/api/js?key=AIzaSyCrw533WZZijl0sItzXs-DjfyHMN5g4xD8" async defer></script>
    }

    <script src="@Url.Content("~/Content/admin/assets/global/plugins/wow-alert-master/js/wow-alert.js")"></script>

    <link rel="stylesheet" type="text/css" href="/Content/chosen.css" />
    <script src="/Scripts/chosen.jquery.min.js" type="text/javascript"></script>
}
@section scripts{
    <script src="@Url.Content("~/Content/admin/assets/pages/scripts/components-date-time-pickers.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Areas/Portal/Scripts/ApplyCreditForm.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Areas/Portal/Scripts/ApplyCreditFormINV.js")" type="text/javascript"></script>
    <script type="text/javascript">
        var invoiceList;
        var saveAction;
        var saveInProgress = false;
        var currentPromptedInvoice = "";
        var promptedInvoices = [];
        var isLastPrompt = true;

        var Mxmarchant = false;
        function CCPAY() {
            var sURL = '@Url.Action("PayWithCC", "Customer", new { area = "Portal" })?CardNumber=' + $("#txtCard").val().replace(/ /g, '') + '&CardHolderName=' + $("#txtCCName").val() + '&CardExpiry=' + $("#txtCCExpiry").val() + '&CardCVC=' + $("#txtCCcvc").val() + '&Amount=' + $("#txtAmountToBePay").val() + '&ClassID=' + $("#hdfCustomerId").val() + '&IsProfile=' + true + '&CustomerNo=' + $("#CustomerNo").val() + '&IsCheckedPrevCard=' + $("#ChkCustomerProfile").prop("checked") + '&PaymentProfileID=' + $("#PaymentProfileID").val();
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {

                    if (data.aadata != null) {

                        if (data.aadata.messages != null && data.aadata.messages.message[0].code == "I00001") {
                            $("#paymentAmtMP").val(commaSeparateNumber($("#txtAmountToBePay").val()));
                            $("#balanceMP").val(commaSeparateNumber($("#txtAmountToBePay").val()));
                            $("#referenceNo").val(data.aadata.transactionResponse.authCode);
                            $("#txtNotes").val(data.aadata.transactionResponse.transId);
                            $("#Last4CC").val(data.aadata.transactionResponse.accountNumber);
                            $("#slPaymentType").prop("readonly", true);
                            $("#referenceNo").prop("readonly", true);
                            $("#txtNotes").prop("readonly", true);
                            $("#paymentAmtMP").prop("readonly", true);
                            $("#paymentDate").prop("readonly", true);
                            $("#btnCCCancle").trigger("click");
                            if (!$("#ChkCustomerProfile").prop("checked")) {
                                $("#swtModel").show();
                            }
                            else {
                                $("#swtModel").remove();
                                swal(
                                    'Payment Approved!',
                                    'Transaction ID: ' + data.aadata.transactionResponse.transId,
                                    'success'
                                )
                            }
                        }
                        else if (data.aadata.Status != null && data.aadata.Status == "Approved") {
                            $("#paymentAmtMP").val(commaSeparateNumber($("#txtAmountToBePay").val()));
                            $("#balanceMP").val(commaSeparateNumber($("#txtAmountToBePay").val()));
                            $("#referenceNo").val(data.aadata.AuthCode);
                            $("#txtNotes").val(data.aadata.BatchId);
                            $("#Last4CC").val(data.aadata.CardAccount.Last4);
                            $("#slPaymentType").prop("readonly", true);
                            $("#referenceNo").prop("readonly", true);
                            $("#txtNotes").prop("readonly", true);
                            $("#paymentAmtMP").prop("readonly", true);
                            $("#paymentDate").prop("readonly", true);
                            $("#btnCCCancle").trigger("click");
                            if (!$("#ChkCustomerProfile").prop("checked")) {
                                $("#swtModel").show();
                                Mxmarchant = true;
                            }
                            else {
                                $("#swtModel").remove();
                                swal(
                                    'Payment Approved!',
                                    'Transaction ID: ' + data.aadata.BatchId,
                                    'success'
                                )
                            }
                        }
                        else {
                            $("#btnCCCancle").trigger("click");
                            alert("Credit Card decline, please check Credit Card number or enter new Credit Card.", function (ctl) {
                                if (ctl) {
                                    location.reload();
                                }
                            });
                        }

                    }
                    else {
                        $("#btnCCCancle").trigger("click");
                        alert("Credit Card decline, please check Credit Card number or enter new Credit Card.", function (ctl) {
                            if (ctl) {
                                location.reload();
                            }
                        });
                    }
                },
                error: function () {
                    alert("Credit Card decline, please check Credit Card number or enter new Credit Card.");
                }
            });
            $("#input_Search").val($("#csearch-box").val());
            $("#input_Search").trigger("keyup");
        }
        function NextStepPayment() {
            var sURL = '@Url.Action("GetBillingAddress", "Customer", new { area = "Portal" })?Id=' + $("#hdfCustomerId").val();
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    
                    if (data.aadata != null) {
                        if (data.aadata.AccountNumber != null) {
                            $("#DivCustomerProfile").show();
                            $("#DivCustomer").hide();
                            $(".demo-container").show();
                            $("#lblAccount").text(data.aadata.AccountNumber);
                            $("#PaymentProfileID").val(data.aadata.Id);

                        }
                        else {
                            $(".demo-container").show();
                            $("#DivCustomer").hide();

                        }
                    }
                    else {
                        $(".demo-container").show();
                        $("#DivCustomer").hide();


                    }
                },
                error: function (err) {
                    console.log(err);
                }
            });
        }
        function calculateBalance() {
            var paymentAmount = parseFloat(removeFormatting($("#paymentAmtMP").val()));
            var creditAmount = parseFloat($("#customerCreditAmtMP").val());

            var allocatedPayments = 0;
            $("[id$=totalPayment]").each(function () {
                var amt = parseFloat(removeFormatting($(this).val()));
                if ($.isNumeric(amt))
                    allocatedPayments += amt;
            });

            var balance = paymentAmount + creditAmount - allocatedPayments; // todo: subtract all allocated payments

            setAmount(paymentAmount);
            setBalance(balance);
        }
        function setAmount(amt) {
            var txt = '';
            if (amt > 0)
                txt = commaSeparateNumber((amt).toFixed(2));
            $("#paymentAmtMP").val(txt);
        }

        function setBalance(amt) {
            var txt = commaSeparateNumber((amt).toFixed(2));
            $("#balanceMP").val(txt);
        }

        function selectInvoice(inv) {
            var invPrefix = "#" + getInvoicePrefix(inv);
            var balance = parseFloat(removeFormatting($("#balanceMP").val()));
            var invAmount = parseFloat(removeFormatting($(invPrefix + "amount").val()));

            var payment = 0.00;
            var isChecked = $(invPrefix + "chk").prop("checked");

            if (!isChecked) // currently selected, so deselect
                setInvoicePayment(invPrefix, 0);
            else {
                payment = Math.min(balance, invAmount); // get either the full invoice amount, or what's left in the balance
                //console.log(payment)
                //console.log(balance)
                //console.log(invAmount)
                setInvoicePayment(invPrefix, payment);
            }

            setInvoiceBalance(invPrefix, invAmount - payment);

            calculateBalance();
        }

        $(document).on('change', ".payment-checkbox", function () {
            var inv = getInvoiceIdChunk(this);
            selectInvoice(inv);
        });

        function getInvoiceIdChunk(elem) {
            return $(elem).attr("id").split('_')[0];
        }

        function getInvoiceFilter(inv) {
            return "[id^=" + getInvoicePrefix(inv) + "]";
        }

        function getInvoicePrefix(inv) {
            return inv + "_";
        }

        function getInvoiceParentFormFilter(inv) {
            return "#" + getInvoicePrefix(inv) + "modal_applypaymentform ";
        }

        function commaSeparateNumber(val) {
            if (val != "") {
                val = parseFloat(val).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString()

                //while (/(\d+)(\d{3})/.test(val.toString())) {
                //    val = val.toString().replace(/(\d+)(\d{3})/, '$1' + ',' + '$2');
                //}
            }
            return val;
        }

        function removeFormatting(i) {
            return typeof i === 'string' ?
                i.replace(/[\$,]/g, '') * 1 :
                typeof i === 'number' ?
                i : 0;
        }

        function setInvoicePayment(invPrefix, amt) {
            var txt = '';
            if (amt > 0)
                txt = commaSeparateNumber((amt).toFixed(2));
            $(invPrefix + "totalPayment").val(txt);
        }

        function onClickYesApplyPayment() {
            $("#modal_applypaymentprompt").modal('hide');

        }

        function setInvoiceBalance(invPrefix, amt) {
            $(invPrefix + "balance").val(commaSeparateNumber((amt).toFixed(2)));
        }

        function onClickNoApplyPayment() {
            saveInProgress = false;
            currentPromptedInvoice = "";
            $("#modal_applypaymentprompt").modal('hide');
        }
        function CreateProfile() {
            $.ajax({
                type: "GET",
                url: '@Url.Action("CreateProfile", "Customer", new { area = "Portal" })',
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {

                }
            });
        }

        function printCustomerStatement(data) {

            var afterPrint = function () {

            }

            var sURL = data;
            $('#iframe_statement').attr('src', document.location.origin + sURL);
            $('#iframe_statement').load(function () {

                // for ie and firefox
                window.onafterprint = afterPrint();

                // for chrome
                if (window.matchMedia) {
                    var mediaQueryList = window.matchMedia('print');
                    mediaQueryList.addListener(function (mql) {
                        if (mql.matches) {
                        } else {
                            afterPrint();
                        }
                    });
                }

                frames['iframe_statement'].print();
            });

        }

        jQuery(document).ready(function () {


            if ($("#hdnARStatusId").val() != "" && $("#hdnARStatusId").val() != "0" && $("#hdnARStatusId").val() != undefined)
            {
                $("#ArStatusList").val($("#hdnARStatusId").val());
            }
            $(".input-group-btn").click(function () {
                $(".input-group-btn").prev().trigger("focus");
                $(".input-group-btn").prev().trigger("focus");
            });

            $('#btnCloseStatements').click(function () {
                $('#modal_showStatements').modal('hide');
            })

            $('#btnPrintStatement').click(function () {
                printCustomerStatement('@Url.Action("CustomerStatementPrint", "Customer", new { area = "Portal" })?customerId=@(Html.DisplayFor(one => one.CustomerDetail.CustomerId))&start=' + $('#spnStartDateStatements').text() + '&end=' + $('#spnEndtDateStatements').text());
            });

            $('#btnExportStatement').click(function () {
                window.location.href = '@Url.Action("CustomerStatementExportToPDF", "Customer", new { area = "Portal" })?customerId=@(Html.DisplayFor(one => one.CustomerDetail.CustomerId))&start=' + $('#spnStartDateStatements').text() + '&end=' + $('#spnEndtDateStatements').text();
            });

            $("#slPaymentType").change(function () {
                if ($(this).val() == "2") {
                    var data = $(".payment-checkbox")
                    if (data.length >= 1) {
                        $('#myModal').modal('show');
                        $("#txtAmountToBePay").val($("#paymentAmtMP").val().replace(',', ''));
                    }
                    else {
                        alert("You Don't have invoice.");
                    }
                }
                else
                    $('#myModal').modal('hide');

            });

            $(document).on("change",
                "input[type='radio'][name='rdApplyAmtType']",
                function () {
                    toggleApplyAmtField();
                }
            );

            $("#BtnCCPay").click(function () {
                if ($("#DivCustomer").css("display") != "block") {
                    CCPAY();
                }
                else
                    NextStepPayment();
            });

            $("#btnSuccessPopUp").click(function () {
                $("#swtModel").remove();

                if (!Mxmarchant) {
                    swal({
                        title: "Do you want to save CC in your profile?",
                        text: "For Future Transaction You will be able to make payment without entering the CC Details.",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonColor: '#DD6B55',
                        confirmButtonText: 'Yes',
                        cancelButtonText: "No",
                        closeOnConfirm: false,
                        closeOnCancel: false
                    },
                        function (isConfirm) {
                            if (isConfirm) {

                                CreateProfile();
                                swal(
                                    'CC Saved in Profile.',
                                    '',
                                    'success'
                                )
                            }
                            else {
                                swal(
                                    'Cancelled.',
                                    '',
                                    'error'
                                )
                            }
                        });
                }

            });

            $("#paymentAmtMP").change(function () {
                calculateBalance();
            });







        });

        function showAddFee() {
            $('#modal_AddFee').modal('show');
        }

        function onClickSaveAndCloseMP() {
            $("#modal_ManualPayment").modal("hide");
            $("#SaveMethod").val("SaveClose");
            continueSaveProcessfrm();
            // go back to customer page?
        }

        function onClickSaveAndNewMP() {
            $("#modal_ManualPayment").modal("hide");
            $("#SaveMethod").val("SaveNew");
            continueSaveProcessfrm();
            // refresh to allow new payment entry?
        }

        function continueSaveProcessfrm() {

            saveInProgress = true;
            isLastPrompt = true;
            var nextPrompt = "";

            $("[id$=totalPayment]").each(function () {

                if (!isLastPrompt)
                    return;

                var inv = getInvoiceIdChunk(this);
                var invId = inv.substr(3);

                if (promptedInvoices.indexOf(invId) == -1) { // invoice not checked yet

                    var invPrefix = getInvoicePrefix(inv);

                    var isChecked = $("#" + invPrefix + "chk").prop("checked");
                    var newInvBalance = parseFloat($("#" + invPrefix + "balance").val());
                    var shouldPrompt = $.isNumeric(newInvBalance) && newInvBalance > 0 && isChecked;

                    if (shouldPrompt) { // invoice needs to be prompted
                        if (nextPrompt != "") {
                            isLastPrompt = false;
                            return;
                        }
                        else {
                            nextPrompt = invId;
                        }
                    }
                }
            });

            if (nextPrompt != "")
                promptApplyPaymentFormMP(nextPrompt);
            else
                finishSaveProcessfrm();
        }

        function finishSaveProcessfrm() {

            // disable fields for non-selected invoice to keep them out of the POST

            $(".payment-checkbox").each(function () {
                if (!$(this).prop("checked")) { // invoice checkbox is not checked, so disable fields
                    var inv = getInvoiceIdChunk(this);
                    var invFilter = getInvoiceFilter(inv);
                    $(invFilter).attr("disabled", "disabled");
                }
            });

            $("#form_applypayment").submit();
        }
        $('#modal_applypaymentprompt').on('hidden.bs.modal', function () {
            if (saveInProgress) {
                var invId = currentPromptedInvoice;
                var inv = "inv" + invId;
                var invPrefix = getInvoicePrefix(inv);
                var hasMultipleItems = $("#" + invPrefix + "hasMultipleItems").val() == "true";

                if (hasMultipleItems)
                    openApplyPaymentForm(currentPromptedInvoice);
                else
                    continueToNextInvoice(invId);
            }
        });
        function promptApplyPaymentFormMP(invId) {
            currentPromptedInvoice = invId;

            var inv = "inv" + invId;
            var invPrefix = getInvoicePrefix(inv);

            var invoiceNo = $("#" + invPrefix + "invoiceNo").val();

            $("#lblPromptInvoiceNo").text(invoiceNo.trim());
            $("#modal_applypaymentprompt").modal({ backdrop: 'static' });
        }

        function getInvoiceIdChunk(elem) {
            return $(elem).attr("id").split('_')[0];
        }

        function getInvoiceFilter(inv) {
            return "[id^=" + getInvoicePrefix(inv) + "]";
        }

        function getInvoicePrefix(inv) {
            return inv + "_";
        }

        function initPaymentForm(inv) {

            var invPrefix = getInvoicePrefix(inv);

            var totalPayment = parseFloat($("#" + invPrefix + "totalPayment").val());
            if ($.isNumeric(totalPayment)) {
                $("#" + invPrefix + "paymentAmt").val(totalPayment.toFixed(2));
            }

            refreshPaymentForm(inv);
            showFranchiseesForLineNumber(inv, 1);
            togglePaymentUnitColumns(inv);
        }



        function showApplyPaymentForm(inv) {

            var invPrefix = getInvoicePrefix(inv);

            var form = $("#" + invPrefix + "modal_applypaymentform");

            $("#" + invPrefix + "btnContinue").hide();
            $("#" + invPrefix + "btnFinish").hide();

            if (saveInProgress) {
                if (isLastPrompt)
                    $("#" + invPrefix + "btnFinish").show();
                else
                    $("#" + invPrefix + "btnContinue").show();
            }

            $(form).modal({ backdrop: 'static' });
        }

        function continueToNextInvoice(invId) {
            var invStr = invId.toString();

            if (saveInProgress) { // in the middle of save process, so continue to next invoice

                if (promptedInvoices.indexOf(invStr) == -1)
                    promptedInvoices.push(invStr);

                var form = $("#inv" + invStr + "_modal_applypaymentform");
                $(form).modal('hide');

                setTimeout(continueSaveProcessfrm);
            }
        }

        function showFranchiseesForLineNumber(inv, lineNo) {
            var invFormFilter = getInvoiceParentFormFilter(inv);
            $(invFormFilter + ".franchisee-row").hide();
            $(invFormFilter + ".franchisee-row-line" + lineNo).show();
        }

        function togglePaymentUnitColumns(inv, paymentUnit) {
            var invFilter = getInvoiceFilter(inv);
            var invFormFilter = getInvoiceParentFormFilter(inv);
            var paymentUnit = $("input[type=radio]" + invFilter + "[name=rdPaymentUnit]:checked").val();
            $(invFormFilter + ".franchisee-amt-col").hide();
            $(invFormFilter + ".franchisee-pct-col").hide();
            $(invFormFilter + ".franchisee-" + paymentUnit + "-col").show();
        }

        function refreshPaymentForm(inv) {
            updateLineItemData(inv);
            updateFranchiseeData(inv);
        }

        function getInvoiceParentFormFilter(inv) {
            return "#" + getInvoicePrefix(inv) + "modal_applypaymentform ";
        }

        function commaSeparateNumber(val) {
            if (val != "") {
                val = parseFloat(val).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString()

                //while (/(\d+)(\d{3})/.test(val.toString())) {
                //    val = val.toString().replace(/(\d+)(\d{3})/, '$1' + ',' + '$2');
                //}
            }
            return val;
        }

        function removeFormatting(i) {
            return typeof i === 'string' ?
                i.replace(/[\$,]/g, '') * 1 :
                typeof i === 'number' ?
                i : 0;
        }

        function formatJSONDate(jsonDate) {
            if (jsonDate != "") {
                var dateString = jsonDate.substr(6);
                var currentTime = new Date(parseInt(dateString));
                var month = currentTime.getMonth() + 1;
                var day = currentTime.getDate();
                var year = currentTime.getFullYear();
                var date = month+ "/" + day + "/" + year;
                return date;
            }
            else
                return '';
        }

        function formatJSONTime(jsonTime) {
            if (jsonTime != "") {
                var dateString = jsonTime.substr(6);
                var currentTime = new Date(parseInt(dateString));
                var hour = currentTime.getHours();
                var min = currentTime.getMinutes();
                var sec = currentTime.getSeconds();
                var time = hour + ":" + min + ":" + sec;
                return time;
            }
            else
                return '';
        }

        function getTableURL(id) {

            var _regionId = '@Model.CustomerDetail.RegionId';
            var _fromDateVal = $('#dtpfromCT').val();
            var _toDateVal = $('#dtptoCT').val();
            var _searchtextVal = "";
            //var _consolidated = $('#chkConsolidatedCT').prop("checked");
            var _open =$('#chkOpenMP').prop("checked");
            var _close =$('#chkCloseMP').prop("checked");
            //var sURL = '@Url.Action("GetCreditResultData", "Customer", new { area = "Portal" })?CustomerId=' + id
            var sURL = '@Url.Action("InvoicesSearchForCreditResultData", "AccountReceivable", new { area = "Portal" })?rgId=' + _regionId + '&fd=' + _fromDateVal + '&td=' + _toDateVal + '&st=' + _searchtextVal + '&consolidated=' + _open + '&closed=' + _close + '&customerId=' + id
            return sURL;
        }
        $(".search-field").change(function () {
            refreshCreditTransaction($("#hdfCustomerId").val());
        });
        function refreshTable() {
            var url = getManualPaymentTableURL($("#hdfCustomerId").val());
            ManualPaymentList.ajax.url(url).load();
        }
        function refreshCreditTransaction(id) {
            var sURL = getTableURL(id);
            console.log(sURL);
            invoiceList.ajax.url(sURL).load();
        }



        function applyDurationFilter(v) {
            $('#spnStartDate').html('');
            $('#spnEndtDate').html('');
            $('.divspandate').show();
            $('#divSD').hide();
            $('#divED').hide();
            $('#divmonth').hide();
            $('#divyear').hide();
            $('#spnStartDate').html('');
            $('#spnEndtDate').html('');
            $('#monthlist').val('');
            $('#yearlist').val('');
            switch (v) {
                case 1:
                    firstDay = moment().startOf('isoWeek').toString();
                    lastDay = moment().endOf('isoWeek').toString();
                    break;
                case 2:
                    //code block
                    firstDay = moment().startOf('isoWeek').toString();
                    lastDay = new Date().toString();
                    break;
                case 3:
                    firstDay = moment().subtract(0, 'month').startOf('month').toString();
                    lastDay = moment().subtract(0, 'month').endOf('month').toString();
                    break;
                case 4:
                    //code block
                    firstDay = moment().subtract(0, 'month').startOf('month').toString();
                    lastDay = new Date().toString();
                    break;
                case 5:
                    //code block
                    firstDay = moment().startOf('quarter').toString();
                    lastDay = moment().endOf('quarter').toString();
                    break;
                case 6:
                    //code block
                    firstDay = moment().startOf('quarter').toString();
                    lastDay = new Date().toString();
                    break;
                case 7:
                    //code block
                    firstDay = moment().startOf('year').toString();;
                    lastDay = moment().endOf('year').toString();
                    break;
                case 8:
                    //code block
                    firstDay = moment().startOf('year').toString();
                    lastDay = new Date().toString();
                    break;
                case 9:
                    //code block
                    firstDay = moment().toString();
                    lastDay = moment().toString();
                    break;
                case 10:
                    //code block
                    firstDay = moment().add(-1, 'days').toString();
                    lastDay = moment().add(-1, 'days').toString();
                    break;
                case 11:
                    //code block
                    firstDay = moment().subtract(1, 'week').startOf('week').toString();
                    lastDay = moment().subtract(1, 'week').endOf('week').toString();
                    break;
                case 12:
                    //code block
                    firstDay = moment().subtract(1, 'month').startOf('month').toString();
                    lastDay = moment().subtract(1, 'month').endOf('month').toString();
                    break;
                case 13:
                    //code block
                    firstDay = moment().subtract(1, 'quarter').startOf('quarter').toString();
                    lastDay = moment().subtract(1, 'quarter').endOf('quarter').toString();
                    break;
                case 14:
                    //code block
                    firstDay = moment().subtract(1, 'year').startOf('year').toString();
                    lastDay = moment().subtract(1, 'year').endOf('year').toString();
                    break;
                case 15:
                    //code block
                    $('.divspandate').hide();
                    $('#divSD').show();
                    $('#divED').show();
                    $('#txtStartDate').val('');
                    $('#txtEndtDate').val('')
                    break;
                case 16:
                    $('.divspandate').hide();
                    $('#divSD').hide();
                    $('#divED').hide();
                    $('#divmonth').show();
                    $('#divyear').show();
                    break
                default:
                    //code block
            }
            $('#spnStartDate').html(moment(firstDay).format('L'));
            $('#spnEndtDate').html(moment(lastDay).format('L'));
        }


        function setSearchTime(value) {
            value = parseInt(value);
            $("#select_dateRangeMP").val(value.toString());
            var custom_enabled = false;
            var firstDay;
            var lastDay;

            switch (parseInt(value)) {
                case 1:
                    firstDay = moment().startOf('isoWeek').toString();
                    lastDay = moment().endOf('isoWeek').toString();
                    break;
                case 2:
                    //code block
                    firstDay = moment().startOf('isoWeek').toString();
                    lastDay = new Date().toString();
                    break;
                case 3:
                    firstDay = moment().subtract(0, 'month').startOf('month').toString();
                    lastDay = moment().subtract(0, 'month').endOf('month').toString();
                    break;
                case 4:
                    //code block
                    firstDay = moment().subtract(0, 'month').startOf('month').toString();
                    lastDay = new Date().toString();
                    break;
                case 5:
                    //code block
                    firstDay = moment().startOf('quarter').toString();
                    lastDay = moment().endOf('quarter').toString();
                    break;
                case 6:
                    //code block
                    firstDay = moment().startOf('quarter').toString();
                    lastDay = new Date().toString();
                    break;
                case 7:
                    //code block
                    firstDay = moment().startOf('year').toString();;
                    lastDay = moment().endOf('year').toString();
                    break;
                case 8:
                    //code block
                    firstDay = moment().startOf('year').toString();
                    lastDay = new Date().toString();
                    break;
                case 9:
                    //code block
                    firstDay = moment().add(-1, 'days').toString();
                    lastDay = moment().add(-1, 'days').toString();
                    break;
                case 10:
                    //code block
                    firstDay = moment().subtract(1, 'week').startOf('week').toString();
                    lastDay = moment().subtract(1, 'week').endOf('week').toString();
                    break;
                case 11:
                    //code block
                    firstDay = moment().subtract(1, 'month').startOf('month').toString();
                    lastDay = moment().subtract(1, 'month').endOf('month').toString();
                    break;
                case 12:
                    //code block
                    firstDay = moment().subtract(1, 'quarter').startOf('quarter').toString();
                    lastDay = moment().subtract(1, 'quarter').endOf('quarter').toString();
                    break;
                case 13:
                    //code block
                    firstDay = moment().subtract(1, 'year').startOf('year').toString();
                    lastDay = moment().subtract(1, 'year').endOf('year').toString();
                    break;
                case 14:
                    custom_enabled = true;
                    //code block
                    $('#dtpfromMP').html(moment(firstDay).format('L'));
                    $('#dtptoMP').html(moment(lastDay).format('L'));
                    break;
                default:
                    //code block
            }
            $('#dtpfromMP').val(moment(firstDay).format('L'));
            $('#dtptoMP').val(moment(lastDay).format('L'));

            $(".search-date-field").prop('disabled', !custom_enabled);
        };

        //Search Time Credit Transaction
        function setCTSearchTime(value) {
            value = parseInt(value);
            $("#select_dateRangeCT").val(value.toString());
            var custom_enabled = false;
            var firstDay;
            var lastDay;

            $("#dtpfromCT").removeClass("date-picker");
            $("#dtptoCT").removeClass("date-picker");

            switch (parseInt(value)) {
                case 1:
                    firstDay = moment().startOf('isoWeek').toString();
                    lastDay = moment().endOf('isoWeek').toString();
                    break;
                case 2:
                    //code block
                    firstDay = moment().startOf('isoWeek').toString();
                    lastDay = new Date().toString();
                    break;
                case 3:
                    firstDay = moment().subtract(0, 'month').startOf('month').toString();
                    lastDay = moment().subtract(0, 'month').endOf('month').toString();
                    break;
                case 4:
                    //code block
                    firstDay = moment().subtract(0, 'month').startOf('month').toString();
                    lastDay = new Date().toString();
                    break;
                case 5:
                    //code block
                    firstDay = moment().startOf('quarter').toString();
                    lastDay = moment().endOf('quarter').toString();
                    break;
                case 6:
                    //code block
                    firstDay = moment().startOf('quarter').toString();
                    lastDay = new Date().toString();
                    break;
                case 7:
                    //code block
                    firstDay = moment().startOf('year').toString();;
                    lastDay = moment().endOf('year').toString();
                    break;
                case 8:
                    //code block
                    firstDay = moment().startOf('year').toString();
                    lastDay = new Date().toString();
                    break;
                case 9:
                    //code block
                    firstDay = moment().add(-1, 'days').toString();
                    lastDay = moment().add(-1, 'days').toString();
                    break;
                case 10:
                    //code block
                    firstDay = moment().subtract(1, 'week').startOf('week').toString();
                    lastDay = moment().subtract(1, 'week').endOf('week').toString();
                    break;
                case 11:
                    //code block
                    firstDay = moment().subtract(1, 'month').startOf('month').toString();
                    lastDay = moment().subtract(1, 'month').endOf('month').toString();
                    break;
                case 12:
                    //code block
                    firstDay = moment().subtract(1, 'quarter').startOf('quarter').toString();
                    lastDay = moment().subtract(1, 'quarter').endOf('quarter').toString();
                    break;
                case 13:
                    //code block
                    firstDay = moment().subtract(1, 'year').startOf('year').toString();
                    lastDay = moment().subtract(1, 'year').endOf('year').toString();
                    break;
                case 14:
                    custom_enabled = true;
                    //code block
                    $('#dtpfromCT').html(moment(firstDay).format('L'));
                    $('#dtptoCT').html(moment(lastDay).format('L'));
                    $("#dtpfromCT").addClass("date-picker");
                    $("#dtptoCT").addClass("date-picker");
                    break;
                default:
                    //code block
            }
            $('#dtpfromCT').val(moment(firstDay).format('L'));
            $('#dtptoCT').val(moment(lastDay).format('L'));

            $(".search-date-field").prop('disabled', !custom_enabled);
        };

        $(document).ready(function () {

            $('#ddlEmailNotesTo').chosen();
            $('#ddlEmailNotesTo2').chosen();

            $("#btnAddFee").click(function () {
                $('#modal_AddFee').modal('hide');
                $('#modal_SaveAddFee').modal('show');
            });

            //Credit Transaction Date Change
            $("#select_dateRangeCT").change(function () {
                var value = this.value;
                setCTSearchTime(value);
                refreshCreditTransaction($("#CTMC").val());
            });

            //Manual Payment Date Change
            $("#select_dateRangeMP").change(function () {
                var value = this.value;
                setSearchMPTime(value);
                refreshTable();
            });
            //Manual Payment
            setSearchMPTime(7);

            //Credit Transaction
            setCTSearchTime(3);

            $.validator.messages.required = '';
            $("#input_Search").autocomplete({
                appendTo: $("#container"),
                source: function (request, response) {
                    $.ajax({
                        url: "/Portal/Customer/CustomerAutoCompleteList",
                        type: "POST",
                        dataType: "json",
                        data: { namePrefix: request.term },
                        success: function (data) {
                            response($.map(data, function (item) {
                                return { label: item.Name, value: item.CustomerId };
                            }))
                        },
                        error: function (result) {

                        }
                    })
                }
            });

            $("#rdoDistance").prop("checked", true);
            $("#divShortBy").hide();
            $("#rdoDistance").change(function () {
                if (this.value == 1) {
                    $("#rdoDistance").prop("checked", true);
                    $("#rdoObligation").prop("checked", false);
                    $("#divShortBy").hide();
                    $("#divDistance").show();
                }
            });

            $("#rdoObligation").change(function () {
                if (this.value == 0) {
                    $("#rdoDistance").prop("checked", false);
                    $("#rdoObligation").prop("checked", true);
                    $("#divShortBy").show();
                    $("#divDistance").hide();
                }
            });



            function applyAutoSeacrh() {
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("GetAllCustomer", "Customer", new { area = "Portal" })',
                    data: {},
                    success: function (data) {

                        var typeaheadSource = [];
                        $.each(data, function (key, value) {
                            typeaheadSource.push({ id: value.CustomerId, name: value.CustomerNo + ' ' + $.trim(value.Name) })
                        });
                        var box = $('#csearch-box').data('typeahead');
                        if (box != null) {
                            box.source = typeaheadSource;
                        }
                        else {                            
                            $('#csearch-box').typeahead({
                                source: typeaheadSource,
                                updater: function (item) {
                                    
                                    redirect(item.id);
                                    return item;
                                },
                                minLength: 1
                            }).focus();
                        }
                    }
                });
            }

            $("#input_SearchCT").keyup(function () {
                var table = $("#tblCustomerCreditsList").DataTable();
                table.search($(this).val()).draw();
            });

            $("#input_SearchMP").on('keyup', function () {
                var table = $("#ManualPaymentList").DataTable();
                table.search($(this).val()).draw();
            });

            applyAutoSeacrh();
            //applyAutoInvoicePaymentSearch();
            $('#divspandateStatements').show();
            $('#divSDStatements').hide();
            $('#divEDStatements').hide();

            //$('#divspandate').show();
            $('#divSD').hide();
            $('#divED').hide();

            firstDay = moment().subtract(0, 'month').startOf('month').toString();
            lastDay = moment().subtract(0, 'month').endOf('month').toString();

            $('#spnStartDate').html(moment(firstDay).format('L'));
            $('#spnEndtDate').html(moment(lastDay).format('L'));

            $('#spnStartDateStatements').html(moment(firstDay).format('L'));
            $('#spnEndtDateStatements').html(moment(lastDay).format('L'));

            settimeduration_select(3);
            settimedurationStatements_select(3);

            //$('#txtStartDate').inputmask("mm/dd/yyyy", {});
            //$('#txtEndtDate').inputmask("mm/dd/yyyy", {});

            $("#txtFrom").val(moment(firstDay).format('L'));
            $("#txtTo").val(moment(lastDay).format('L'));
            $("#txtFrom").prop("disabled", true);
            $("#txtTo").prop("disabled", true);

            $('#txtStartDateStatements').inputmask("mm/dd/yyyy", {});
            $('#txtEndtDateStatements').inputmask("mm/dd/yyyy", {});

            $("#txtFromStatements").val(moment(firstDay).format('L'));
            $("#txtToStatements").val(moment(lastDay).format('L'));
            $("#txtFromStatements").prop("disabled", true);
            $("#txtToStatements").prop("disabled", true);

            $("#lblamount").inputmask("numeric", {
                decimal: ".",
                negative: false,
                scale: 2,
                groupSeparator: ",",
                digits: 2,
                autoGroup: true,
                prefix: "$",
                rightAlign: false,
                autoUnmask: true,
                removeMaskOnSubmit: true,
            });

            typeaheadSourceF = [];
            @*$.ajax({
                type: "GET",
                url: '@Url.Action("GetAllFranchisees", "Franchise", new { area = "Portal" })',
                success: function (data) {
                    custlist = data;

                    $.each(custlist, function (key, value) {
                        typeaheadSourceF.push({ value: value.FranchiseeId, label: value.FranchiseeNo + ' ' + $.trim(value.Name) })
                    });

                }
            });*@
            $('#MainPhone_Phone1').inputmask("mask", {
                "mask": "(999) 999-9999", removeMaskOnSubmit: true,
            });
            $('#MainPhone_Fax').inputmask("mask", {
                "mask": "(999) 999-9999", removeMaskOnSubmit: true,
            });


            $('#MainPhone2_Phone1').inputmask("mask", {
                "mask": "(999) 999-9999"
            });
            $('#MainPhone2_Fax').inputmask("mask", {
                "mask": "(999) 999-9999", removeMaskOnSubmit: true,
            });
            $('#MainPhone2_Cell').inputmask("mask", {
                "mask": "(999) 999-9999", removeMaskOnSubmit: true,
            });


            $('#BillingPhone_Phone1').inputmask("mask", {
                "mask": "(999) 999-9999", removeMaskOnSubmit: true,
            });
            $('#BillingPhone_Fax').inputmask("mask", {
                "mask": "(999) 999-9999", removeMaskOnSubmit: true,
            });
            $('#BillingPhone_Cell').inputmask("mask", {
                "mask": "(999) 999-9999", removeMaskOnSubmit: true,
            });


            $('#chkbillingsameas').click(function () {
                var checked = $('#chkbillingsameas').is(':checked');

                var MainAddress_Name = $('#BillingContact_Name'),
                    MainAddress_Address1 = $('#BillingAddress_Address1'),
                    MainAddress_City = $('#BillingAddress_City'),
                    MainAddress_State = $('#BillingStatesList'),
                    MainAddress_PostalCode = $('#BillingAddress_PostalCode');

                if (checked) {
                    MainAddress_Name.val($('#CustomerViewModel_Name').val());
                    MainAddress_Address1.val($('#MainAddress_Address1').val());
                    MainAddress_City.val($('#MainAddress_City').val());
                    MainAddress_State.val($('#MainStatesList').val());
                    MainAddress_PostalCode.val($('#MainAddress_PostalCode').val());

                    MainAddress_Name.attr("readonly", "readonly");
                    MainAddress_Address1.attr("readonly", "readonly");
                    MainAddress_City.attr("readonly", "readonly");
                    MainAddress_State.attr("readonly", "readonly");
                    MainAddress_PostalCode.attr("readonly", "readonly");

                }
                else {
                    MainAddress_Name.val('');
                    MainAddress_Address1.val('');
                    MainAddress_City.val('');
                    MainAddress_State.val('');
                    MainAddress_PostalCode.val('');

                    MainAddress_Name.removeAttr("readonly");
                    MainAddress_Address1.removeAttr("readonly");
                    MainAddress_City.removeAttr("readonly");
                    MainAddress_State.removeAttr("readonly");
                    MainAddress_PostalCode.removeAttr("readonly");
                }
            });
            $('#chkbillingcontactsameas').click(function () {
                var MainContactAddress_FName = $('#BillingContactInformation2_Name'),
                    //MainContactAddress_LastName = $('#BillingContact_LastName'),
                    MainContactAddress_Title = $('#BillingContactInformation2_Title'),
                    MainContactAddress_Phone = $('#BillingPhone_Phone1'),
                    MainContactAddress_PhoneExt = $('#BillingPhone_PhoneExt'),
                    MainContactAddress_Cell = $('#BillingPhone_Cell'),
                    MainContactAddress_Fax = $('#BillingPhone_Fax'),
                    MainContactAddress_Email = $('#BillingEmail_EmailAddress');
                if ($(this).prop('checked')) {
                    MainContactAddress_FName.val($('#MainContact_Name').val());
                    // MainContactAddress_LastName.val($('#ContactInformation_LastName').val());
                    MainContactAddress_Title.val($('#MainContact_Title').val());
                    MainContactAddress_Phone.val($('#MainPhone2_Phone1').val());
                    MainContactAddress_PhoneExt.val($('#MainPhone2_PhoneExt').val());
                    MainContactAddress_Cell.val($('#MainPhone2_Cell').val());
                    MainContactAddress_Fax.val($('#MainPhone2_Fax').val());
                    MainContactAddress_Email.val($('#MainEmail_EmailAddress').val());

                    MainContactAddress_FName.attr("readonly", "readonly");
                    //MainContactAddress_LastName.attr("readonly", "readonly");
                    MainContactAddress_Title.attr("readonly", "readonly");
                    MainContactAddress_Phone.attr("readonly", "readonly");
                    MainContactAddress_PhoneExt.attr("readonly", "readonly");
                    MainContactAddress_Cell.attr("readonly", "readonly");
                    MainContactAddress_Fax.attr("readonly", "readonly");
                    MainContactAddress_Email.attr("readonly", "readonly");
                }
                else {
                    MainContactAddress_FName.val('');
                    //MainContactAddress_LastName.val('');
                    MainContactAddress_Title.val('');
                    MainContactAddress_Phone.val('');
                    MainContactAddress_PhoneExt.val('');
                    MainContactAddress_Cell.val('');
                    MainContactAddress_Fax.val('');
                    MainContactAddress_Email.val('');

                    MainContactAddress_FName.removeAttr("readonly");
                    //MainContactAddress_LastName.removeAttr("readonly");
                    MainContactAddress_Title.removeAttr("readonly");
                    MainContactAddress_Phone.removeAttr("readonly");
                    MainContactAddress_PhoneExt.removeAttr("readonly");
                    MainContactAddress_Cell.removeAttr("readonly");
                    MainContactAddress_Fax.removeAttr("readonly");
                    MainContactAddress_Email.removeAttr("readonly");
                }
            });

            if(@ViewBag.CustomerID > 0)
                _bindTransactionsForCustomerTransaction($('#select_transactionstype').val(), $('#spnStartDate').text(), $('#spnEndtDate').text());

            $('.modal-dialog').draggable();


            $(document).on("click", ".submit-button", function () {
                var flg = true;
                if ($("#select_ReasonList").val() == "") {
                    flg = false;
                    $("#select_ReasonList").css("border-color", "red");
                }
                else {
                    $("#select_ReasonList").css("border-color", "#c2cad8")
                }
                if ($("#creditDesc").val() == "") {
                    flg = false;
                    $("#creditDesc").css("border-color", "red");
                }
                else {
                    if (flg)
                        flg = true;
                    else
                        flg = false;
                    $("#creditDesc").css("border-color", "#c2cad8");
                }

                var _customerLineAmount = 0.00;
                var _franchiseeLineAmount = 0.00;
                $(".credit-line-item-total-field").each(function () {
                    _customerLineAmount = _customerLineAmount + parseFloat($(this).val());
                });
                $(".credit-franchisee-field").each(function () {
                    _franchiseeLineAmount = _franchiseeLineAmount + parseFloat($(this).val());
                });


                if (_franchiseeLineAmount != _customerLineAmount) {
                    flg = false;
                    alert('Please enter franchisee distribution amount equal line amount total.')
                } else {
                    if (flg)
                        flg = true;
                    else
                        flg = false;
                }

                var CCflg = validateCreditAmount();

                if (flg && CCflg) {
                    var balance = parseFloat($("#newBalance").val());
                    var buttonName = $(this).attr("name");

                    saveAction = buttonName;
                    if (balance >= 0) // no customer credit necessary
                        submitForm();
                    else
                        promptCustomerCredit();
                }
            });

        });
        function submitForm() {

            $('.creditfieldcurrency').each(function () {
                $('#' + this.id).inputmask('remove');
            });
            $.ajax({
                type: "POST",
                url: '@Url.Action("ApplyCredit","AccountReceivable","Portal")',
                data: $("#form_applycreditform").serialize() + "&action=" + saveAction,
                dataType: 'json',
                success: function (data) {
                    if (saveAction != "SaveContinue")
                        document.location.reload();
                    else
                        continueCancellationProcess();
                }
            });
        }
        function promptCustomerCredit() {

            var creditAmt = parseFloat(removeFormatting($("#newBalance").val()));
            if (creditAmt < 0)
                creditAmt = -creditAmt;

            var customerName = $("#lblCustomerName").text();

            $("#lblPromptCreditAmt").text("$" + formatCurrency(creditAmt));
            $("#lblPromptCreditCustomerName").text(customerName.trim());
            $("#modal_customercreditprompt").modal({ backdrop: 'static' });
        }
        function onClickYesApplyCustomerCredit() {
            $("#modal_customercreditprompt").modal('hide');
            submitForm();
        }

        function onClickNoApplyCustomerCredit() {
            $("#modal_customercreditprompt").modal('hide');
        }

        var typeaheadSourceF = [];
        $(document).on('click', '#btnClosemodel', function () {
            $("#modal_invoicedetail").modal('hide');
        });

        function redirect(id) {
            var url = '@Url.Action("CustomerDetail", "Customer",new { area = "Portal", id =  -1})';
            var path = url.replace("-1", id);
            location.href = path;
        }

        function setSearchMPTime(value) {

            value = parseInt(value);
            $("#select_dateRangeMP").val(value.toString());
            var custom_enabled = false;
            var firstDay;
            var lastDay;

            switch (parseInt(value)) {
                case 1:
                    firstDay = moment().startOf('isoWeek').toString();
                    lastDay = moment().endOf('isoWeek').toString();
                    break;
                case 2:
                    //code block
                    firstDay = moment().startOf('isoWeek').toString();
                    lastDay = new Date().toString();
                    break;
                case 3:
                    firstDay = moment().subtract(0, 'month').startOf('month').toString();
                    lastDay = moment().subtract(0, 'month').endOf('month').toString();
                    break;
                case 4:
                    //code block
                    firstDay = moment().subtract(0, 'month').startOf('month').toString();
                    lastDay = new Date().toString();
                    break;
                case 5:
                    //code block
                    firstDay = moment().startOf('quarter').toString();
                    lastDay = moment().endOf('quarter').toString();
                    break;
                case 6:
                    //code block
                    firstDay = moment().startOf('quarter').toString();
                    lastDay = new Date().toString();
                    break;
                case 7:
                    //code block
                    firstDay = moment().startOf('year').toString();;
                    lastDay = moment().endOf('year').toString();
                    break;
                case 8:
                    //code block
                    firstDay = moment().startOf('year').toString();
                    lastDay = new Date().toString();
                    break;
                case 9:
                    //code block
                    firstDay = moment().add(-1, 'days').toString();
                    lastDay = moment().add(-1, 'days').toString();
                    break;
                case 10:
                    //code block
                    firstDay = moment().subtract(1, 'week').startOf('week').toString();
                    lastDay = moment().subtract(1, 'week').endOf('week').toString();
                    break;
                case 11:
                    //code block
                    firstDay = moment().subtract(1, 'month').startOf('month').toString();
                    lastDay = moment().subtract(1, 'month').endOf('month').toString();
                    break;
                case 12:
                    //code block
                    firstDay = moment().subtract(1, 'quarter').startOf('quarter').toString();
                    lastDay = moment().subtract(1, 'quarter').endOf('quarter').toString();
                    break;
                case 13:
                    //code block
                    firstDay = moment().subtract(1, 'year').startOf('year').toString();
                    lastDay = moment().subtract(1, 'year').endOf('year').toString();
                    break;
                case 14:
                    custom_enabled = true;
                    //code block
                    $('#dtpfrom').html(moment(firstDay).format('L'));
                    $('#dtpto').html(moment(lastDay).format('L'));
                    break;
                default:
                    //code block
            }
            $('#dtpfromMP').val(moment(firstDay).format('L'));
            $('#dtptoMP').val(moment(lastDay).format('L'));

            $(".search-date-field").prop('disabled', !custom_enabled);
        };

        var GetCustomerId = function () {
            var postData = {
                "parentname": $("#input_parentnamemodel").val(),
            };
            $.ajax({
                url: "/Portal/Customer/GetCustomerId",
                type: "POST",
                data: postData,
                dataType: "json",
                cache: false,
                success: function (response) {
                    if (response.success == true) {
                        var url = '@Url.Action("CustomerDetail", "Customer",new { area = "Portal", id =  -1})';
                        var path = url.replace("-1", response.id);
                        location.href = path;
                    }

                },
                error: function (error) {

                }
            });
        }

        function showInvoiceDetail(id) {

            var sURL = '@Url.Action("InvoiceDetail", "AccountReceivable", new { area = "Portal" })?Id=' + id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#form_invoicedetail').html(data);
                    $("#modal_invoicedetail").modal({ backdrop: 'static' });
                    //$("#modal_invoicedetail").modal('show');
                    $('.modal-dialog').draggable();
                    //$("#modal_showStatements").modal('hide');
                },
                error: function (err) {
                    console.log(err);
                }
            });
        }

        function OpenPaymentDetail(strNo) {
            $.blockUI();

            var sURL = '@Url.Action("PaymentDetailPopup", "AccountReceivable", new { area = "Portal" })?paymentId=' + strNo;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#form_paymentlist').html(data);
                    $("#modal_paymentdetail").modal({ backdrop: 'static' });
                    //$("#modal_paymentdetail").modal('show');
                    $('.modal-dialog').draggable();

                    $.unblockUI();
                },
                error: function (err) {
                    $.unblockUI();
                    console.log(err);
                }
            });
        }

        function OpenCustomerCreditDetail(id) {
            $.blockUI();
            var sURL = '@Url.Action("CustomerCreditDetailPopup", "AccountReceivable", new { area = "Portal" })?Id=' + id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#form_CusCreditDetails').html(data);
                    $("#modal_CusCreditDetail").modal({ backdrop: 'static' });
                    //$("#modal_CusCreditDetail").modal('show');
                    $('.modal-dialog').draggable();
                    $.unblockUI();
                },
                error: function (err) {
                    console.log(err);
                }
            });
        };

        function ShowAddNEwFeeFinder() {
            var id = 272;
            $('#div_FeeFinderdetailResultData').html('');
            var sURL = '@Url.Action("GetFeeFinderDetail", "Customer", new { area = "Portal" })?id=' + id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#div_FeeFinderdetailResultData').html(data);
                    $('.date-picker').datepicker({ autoclose: true ,dateFormat: 'mm/dd/yyyy'});
                    $('.date-picker').attr("placeholder","mm/dd/yyyy");
                    $('.edit-txtbx').prop("readonly", true);
                    $("#modal_FeeFinderdetailResult").modal({ backdrop: 'static' });
                },
                error: function (err) {
                    console.log(err);
                }
            });
        }

        function showFeeFinderList(id) {
            $('#divfinderfeelist').html('');
            var sURL = '@Url.Action("GetFeeFinderList", "Customer", new { area = "Portal" })?id=' + id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#divfinderfeelist').html(data);
                    $("#modal_CustomerFinderFeeDetailPopup").modal({ backdrop: 'static' });
                },
                error: function (err) {
                    console.log(err);
                }
            });
            //

        }

        function showBillsetting() {
            $(".edit").attr("disabled", "disabled");
            $(".edit").attr("readonly", "readonly");

            $("#btnSave").prop("disabled", "false");
            $("#btnSave").prop("readonly", "true");
            $("#btnCancel").prop("disabled", "false");
            $("#btnCancel").prop("readonly", "true");
            $("#btnSave").hide();
            $("#btnCancel").hide();

            $(".editmain1").attr("disabled", "disabled");
            $(".editmain1").attr("readonly", "readonly");
            $(".editmain").attr("disabled", "disabled");
            $(".editmain").attr("readonly", "readonly");

            $(".editbill1").attr("disabled", "disabled");
            $(".editbill1").attr("readonly", "readonly");
            $(".editbill").attr("disabled", "disabled");
            $(".editbill").attr("readonly", "readonly");

            $(".EditBtn").show();
            $(".SaveBtn").hide();
            $(".CancelBtn").hide();

            $("#modal_Billingsetting").modal({ backdrop: 'static' });


            $("#BillSetting_EffectiveDate").val('@Convert.ToDateTime(Model.BillSetting?.EffectiveDate).ToString("MM/dd/yyyy")');


        }

        function showServiceLog(Id) {

            var sURL = '@Url.Action("CustomerServiceCallLogPopup", "Customer", new { area = "Portal" })?id=' + Id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#Render_ServiceCallLogDetails').html(data);
                    //$("#CallBack").datepicker();
                    //$(".input-group-btn").click(function () {
                    //    $(this).prev().trigger("focus");
                    //    $(this).prev().trigger("focus");
                    //});
                    $("#modal_ServiceCallLog").modal({ backdrop: 'static' });
                    $(".date-picker").datepicker();
                    $(".timepicker").timepicker();

                    //$("#CustomerNos").append($(".clscustno").html());
                    //$("#ContactNames").append($(".clscustcont").html());
                    //$("#CustomerNames").append($(".clscustname").html());
                    //$("#Phones").append($(".clscustphon").html());
                    $('#ddlEmailNotesTo').chosen();
                    $('#ddlEmailNotesTo2').chosen();
                },
                error: function (err) {
                    console.log(err);
                }
            });

        }

        @*function ShowFranchiseeCall() {
            var sURL = '@Url.Action("GetFranchiseeCall", "Customer", new { area = "Portal" })';
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#form_FranchiseeCall').html(data);
                    $("#modal_FranchiseeCall").modal({ backdrop: 'static' });
                },
                error: function () {
                    alert("Error occured!!")
                }
            });
        }*@

        function ShowLogCall()
        {
            var sURL = '@Url.Action("GetLogCall", "Customer", new { area = "Portal" })';
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#form_LogCall').html(data);
                    $("#modal_LogCall").modal({ backdrop: 'static' });
                },
                error: function () {
                    alert("Error occured!!")
                }
            });
        }

        function btncloseFranchiseecall() {
            $("#modal_FranchiseeCall").modal('hide');
        }

        function btnlogcallClose() {
            $("#modal_LogCall").modal('hide');
        }

        function showCollectionLog(Id) {
            var sURL = '@Url.Action("CustomerCollectionLogPopup", "Customer", new { area = "Portal" })?id=' + Id; +
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#Render_CollectionCallLogDetails').html(data);
                    $("#strCallBack").datepicker();
                    $(".input-group-btn").click(function () {
                        $(this).prev().trigger("focus");
                        $(this).prev().trigger("focus");
                    });
                    $("#modal_CollectionCallLog").modal({ backdrop: 'static' });
                },
                error: function (err) {
                    console.log(err);
                }
            });
        }

        function showCreditTransaction(id) {
            var sURL = getTableURL(id);

            invoiceList = $('#tblCustomerCreditsList').DataTable({
                //"bProcessing": true,
                "bServerSide": false,
                "bDestroy": true,
                "sAjaxSource": sURL,
                "bLengthChange": false, //thought this line could hide the LengthMenu
                "bInfo": false,
                "bPaginate": false,

                "dom": '<"top">rt<"bottom"lp><"clear">'
                //"dom": "<'row'<'col-md-8 col-sm-12'pli><'col-md-4 col-sm-12'<'table-group-actions pull-right'>>r><'table-responsive't><'row'<'col-md-8 col-sm-12'pli><'col-md-4 col-sm-12'>>", // datatable layout
                ,
                columnDefs: [
                    {
                        targets: "tblInvoice_invoiceNo",
                        data: "InvoiceNo",
                        render: function (data, type, row, meta) {
                            return '<a href="javascript:void(0);" onclick="btnOpenApplyCreditForm(' + row.InvoiceId + ')">' + data + '</a>';
                        }
                    },
                    {
                        targets: "tblInvoice_invoiceDate",
                        data: "InvoiceDate",
                        type: "date",
                        render: function (data, type, row, meta) {
                            return moment(new Date(parseInt(data.substr(6)))).format("MM/DD/YYYY");
                        }
                    },
                    { targets: "tblInvoice_customerNo", data: "CustomerNo" },
                    { targets: "tblInvoice_customerName", data: "CustomerName" },
                    { targets: "tblInvoice_invoiceDesc", data: "Description" },
                    {
                        targets: "tblInvoice_invoiceAmt",
                        data: "Amount",
                        sClass: "txtright",
                        render: function (data, type, row, meta) {
                            return '$' + parseFloat(data, 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString()
                            //return '$' + parseFloat(data).toFixed(2);
                        }
                    },
                    {
                        targets: "tblInvoice_balance",
                        data: "Balance",
                        sClass: "txtright",
                        render: function (data, type, row, meta) {
                            return '$' + parseFloat(data, 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString()
                            //return '$' + parseFloat(data).toFixed(2);
                        }
                    },
                ]
            });

            $("#modal_CreditTransaction").modal('show');
        }

        var lstContractDetailServiceTypeList = [];
        var lineNo = 0;
        var flineNo = 0;

        var app = {};

        (function (app) {

            var _id;

            app.init = function (id) {
                if (id != '') {
                    _id = id;
                    $("#hdfCustomerId").val(_id);
                    bindcustomerdetail(_id);
                }
            }

        })(app);

        function bindcustomerdetail(customerid) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("CustomerDetaildata", "AccountReceivable", new { area = "Portal" })',
                data: 'customerid=' + customerid,
                success: function (data) {
                    //document.getElementById("chkTaxExcempt1").checked = false;
                    $("#spncustomerno").text($.trim(data.CustomerNo));
                    $("#spncustomername").text($.trim(data.Name));
                    $("#spncustomeraddress").text($.trim(data.Address1));
                    $("#spncustomercity").text($.trim(data.City))
                    $("#spncustomerstate").text($.trim(data.StateName));
                    $("#spncustomerpincode").text($.trim(data.PostalCode));


                    $("#spncustomerbname").text($.trim(data.BName));
                    $("#spncustomerbattname").text($.trim(data.Attention));
                    $("#spncustomeraddress1").text($.trim(data.BAddress1));
                    $("#spncustomercity1").text($.trim(data.BCity))
                    $("#spncustomerstate1").text($.trim(data.BStateName));
                    $("#spncustomerpincode1").text($.trim(data.PostalCode));

                    $("#hdfTaxRateId").val(data.TaxRateId);
                    $("#hdfContractTaxRate").val(data.ContractTaxRate);
                    $("#hdfLeaseTaxRate").val(data.LeaseTaxRate);
                    $("#hdfSupplyTaxRate").val(data.SupplyTaxRate);
                    $("#hdfcusisTaxExcempt").val((data.TaxExcempt == true?true:false));
                    
                    //if (data.TaxExcempt == true)
                    //    document.getElementById("chkTaxExcempt1").checked = true;
                    bindcCustomerDistributionDetailFranchiseedetail(customerid);
                }
            });
        }
        function bindcCustomerDistributionDetailFranchiseedetail(customerid) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("CustomerDistributionDetailFranchiseedata", "AccountReceivable", new { area = "Portal" })',
                data: 'customerid=' + customerid,
                success: function (data) {
                    $.each(data, function () {
                        bindfranchiseedetailUpdated(this.FranchiseeId, this.FranchiseeNo, this.Name);
                    });

                }
            });
        }

        function showTransfer(id) {
            $.blockUI();
            typeaheadSourceF = [];
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetAllFranchisees", "Franchise", new { area = "Portal" })',
                success: function (data) {
                    custlist = data;

                    $.each(custlist, function (key, value) {
                        typeaheadSourceF.push({ value: value.FranchiseeId, label: value.FranchiseeNo + ' ' + $.trim(value.Name) })
                    });

                    $('#form_CustomerTransfer').html("");
                    var sURL = '@Url.Action("CustomerDetailTransferDistribution", "Customer", new { area = "Portal" })?Id=' + id;
                    $.ajax({
                        type: "GET",
                        url: sURL,
                        contentType: "application/json; charset=utf-8",
                        datatype: "json",
                        success: function (data) {
                            $('#form_CustomerTransfer').html(data);

                            $(".editvalue").removeClass("editvaluetext");
                            $(".editvalue").addClass("editmode");
                            $(".editvalue").attr("readonly", "readonly");
                            $(".editcheck").attr("disabled", "disabled");
                            $(".editcheck").attr("readonly", "readonly");

                            CFranchiseeDistributionData(id);
                            $(".date-picker").datepicker({ autoclose: true });
                            $('.modal-dialog').draggable();
                            $('#trans_ddlTransferEffectiveDate').datepicker("setDate", new Date());

                            $('#btncust_trans').prop('disabled', false);
                            $.unblockUI();
                        },
                        error: function (err) {
                            console.log(err);
                            $.unblockUI();
                        }
                    });

                }
                ,
                error: function () {

                    $.unblockUI();
                }
            });

        }



        function showIncreaseDescrease(Id) {

            var sURL = '@Url.Action("CustomerDetailIncrease", "Customer", new { area = "Portal" })?id=' + Id;

            $.blockUI();//$.blockUI({ message: $('#throbberBlock'), theme: true, baseZ: 12000 });

            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#modal_IncreaseDecreaseDIV').html(data);

                    //$('#CustomerIncreaseDecreaseDetail_EffectiveDate').inputmask("mm/dd/yyyy", {});
                    //$('#CustomerIncreaseDecreaseDetail_StartDate').inputmask("mm/dd/yyyy", {});
                    //$('#CustomerIncreaseDecreaseDetail_StartDate').inputmask("mm/dd/yyyy", {});
                    //$('#CustomerIncreaseDecreaseDetail_SignDate').inputmask("mm/dd/yyyy", {});
                    //$('#CustomerIncreaseDecreaseDetail_StatusDate').inputmask("mm/dd/yyyy", {});
                    //$('#CustomerIncreaseDecreaseDetail_ExpirationDate').inputmask("mm/dd/yyyy", {});
                    //$('#CustomerIncreaseDecreaseDetail_ResumeDate').inputmask("mm/dd/yyyy", {});
                    $(".input-group-btn").click(function () {
                        $(this).prev().trigger("focus");
                        $(this).prev().trigger("focus");
                    });

                    IDFrmInIt();

                    $('#btncust_increase').prop('disabled', false);

                    $.unblockUI();

                    $("#modal_IncreaseDecrease").modal({ backdrop: 'static' });
                },
                error: function (err) {
                    console.log(err);
                    $.unblockUI();
                }
            });
        }


        function showManualInvoice(id, callFrom) {
            $.blockUI({
                theme: true,
                baseZ: 9000
            });
            lstContractDetailServiceTypeList = [];
            lineNo = 0;
            flineNo = 0;
            var sURL = '@Url.Action("RenderCustomerDetailManualInvoicePopup", "Customer", new { area = "Portal" })?id=' + id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#form_modal_customermanualinvoice').html(data);
                    $("#hdfCFCallFrom").val(callFrom);
                    onlyDecimal("#txtCommissionAmount");
                    $("#hdftotallineno").val(lineNo);
                    $("#hdfftotallineno").val(flineNo);
                    $("#txtInvoicedate").datepicker();
                    $("#txtInvoicedate").datepicker("option", "dateFormat", "mm/dd/yy");
                    $('#txtInvoicedate').datepicker('setDate', new Date());
                    var month = parseInt('@JKApi.Core.Common.ClaimView.Instance.GetCLAIM_PeriodAccess().Where(x=>x.PeriodId== JKApi.Core.Common.ClaimView.Instance.GetCLAIM_SELECTED_PERIOD_ID()).FirstOrDefault().Month');
                    var year = parseInt('@JKApi.Core.Common.ClaimView.Instance.GetCLAIM_PeriodAccess().Where(x=>x.PeriodId== JKApi.Core.Common.ClaimView.Instance.GetCLAIM_SELECTED_PERIOD_ID()).FirstOrDefault().Year');
                    $('#txtInvoicedate').datepicker("option", {
                        minDate: new Date(year, month - 1, 1),
                        maxDate: new Date(year, month, 0)
                    });

                     $.ajax({
                        type: "GET",
                        url: '@Url.Action("CustomerDetaildata", "AccountReceivable", new { area = "Portal" })',
                         data: 'customerid=' + $("#CustomerViewModel_CustomerId").val(),
                        success: function (data) {
                            //document.getElementById("chkTaxExcempt1").checked = false;
                            $("#spncustomerno").text($.trim(data.CustomerNo));
                            $("#spncustomername").text($.trim(data.Name));
                            $("#spncustomeraddress").text($.trim(data.Address1));
                            $("#spncustomercity").text($.trim(data.City))
                            $("#spncustomerstate").text($.trim(data.StateName));
                            $("#spncustomerpincode").text($.trim(data.PostalCode));


                            $("#spncustomerbname").text($.trim(data.BName));
                            $("#spncustomerbattname").text($.trim(data.Attention));
                            $("#spncustomeraddress1").text($.trim(data.BAddress1));
                            $("#spncustomercity1").text($.trim(data.BCity))
                            $("#spncustomerstate1").text($.trim(data.BStateName));
                            $("#spncustomerpincode1").text($.trim(data.PostalCode));

                            $("#hdfTaxRateId").val(data.TaxRateId);
                            $("#hdfContractTaxRate").val(data.ContractTaxRate);
                            $("#hdfLeaseTaxRate").val(data.LeaseTaxRate);
                            $("#hdfSupplyTaxRate").val(data.SupplyTaxRate);
                            $("#hdfcusisTaxExcempt").val((data.TaxExcempt == true?true:false));
                    
                            //if (data.TaxExcempt == true)
                            //    document.getElementById("chkTaxExcempt1").checked = true;
                            bindcCustomerDistributionDetailFranchiseedetail($("#CustomerViewModel_CustomerId").val());

                        $.ajax({
                        type: "GET",
                        url: '@Url.Action("GetServiceTypeListManualInvoice", "Customer", new { area = "Portal" })',
                        success: function (data) {
                            lstContractDetailServiceTypeList = data;
                            if (callFrom == "Increase") {
                                var amtDeffAmount = (parseFloat($("#lstContractDetail_0__Amount").val()) - parseFloat($("#lstContractDetail_0__OAmount").val())).toFixed(2)
                                $.blockUI({
                                    theme: true,
                                    baseZ: 9000
                                });
                                $('#txtInvoiceDescription').val('Customer Increase $ ' + amtDeffAmount + ' Effective Date: ' + $('#CustomerIncreaseDecreaseDetail_EffectiveDate').val())
                                $.ajax({
                                    url: '@Url.Action("GetCustomerIncreaseInvoice", "Customer",new { area = "Portal" })?customerid=' + id + '&effectivedate=' + $('#CustomerIncreaseDecreaseDetail_EffectiveDate').val() + '&applyamount=' + amtDeffAmount,
                                    success: function (res) {
                                        
                                        if (res.length > 0) {
                                            $.each(res, function (index, value) {
                                                addNewEntry(function () {
                                                    //console.log('T-' + $("#hdfcusisTaxExcempt").val())
                                                    document.getElementById("chkTaxExcempt" + lineNo).checked = ($("#hdfcusisTaxExcempt").val() == 'true' ? true : false);
                                                    $('#ContractDetailServiceTypeList' + lineNo).val(value.ServiceListId)
                                                    $('#txtdescription' + lineNo).val(value.ItemDescription)
                                                    $('#hdfunitprice' + lineNo).val(value.ItemAmount.toFixed(2));
                                                    CalculateAmount(lineNo);
                                                    $('#ddldetaillinenumber1').val(-1);
                                                    $('#ddldetaillinenumber1').trigger("change");
                                                });
                                            });
                                        } else {
                                            addNewEntry();
                                        }

                                       
                                    },
                                    error: function () { }
                                });

                                $("#btnCManualInvoiceSaveClose").hide();
                                $("#btnCManualInvoiceSaveCloseIncrease").show();
                                $("#form_manualinvoice_submitForm").submit(function (event) {
                                    $('#btnCManualInvoiceSaveCloseIncrease').prop("disabled", true);
                                    $.blockUI({
                                        theme: true,
                                        baseZ: 9000
                                    });
                                    var dataString;
                                    event.preventDefault();
                                    event.stopImmediatePropagation();
                                    var action = '/Portal/Customer/ManualInvoiceIncrease'; //$("#form_manualinvoice_submitForm").attr("action");
                                    // Setting.
                                    dataString = new FormData($("#form_manualinvoice_submitForm").get(0));
                                    contentType = false;
                                    processData = false;
                                    $.ajax({
                                        type: "POST",
                                        url: action,
                                        data: dataString,
                                        dataType: "json",
                                        contentType: contentType,
                                        processData: processData,
                                        success: function (result) {
                                            $.blockUI({
                                                theme: true,
                                                baseZ: 9000
                                            });
                                            $('#frm_CustomerDetailIncrease').submit();
                                        },
                                        error: function (jqXHR, textStatus, errorThrown) {
                                            //do your own thing
                                            alert("fail");
                                            $.unblockUI();
                                        }
                                    });
                                }); //end .submit()

                                $("#btnCManualInvoiceSaveCloseIncrease").click(function (e) {
                                    $('#form_manualinvoice_submitForm').submit();
                                    event.preventDefault();
                                });
                            }
                            else {

                                $('select [relddldetaillinenum=ddldetaillinenumber]').each(function (item) {
                                    console.log(this);

                                });


                                //$("#form_manualinvoice_submitForm").submit(function (event) {
                                //    $.blockUI();
                                //    var dataString;
                                //    event.preventDefault();
                                //    event.stopImmediatePropagation();
                                //    var action = '/Portal/Customer/ManualInvoice'; //$("#form_manualinvoice_submitForm").attr("action");
                                //    // Setting.
                                //    dataString = new FormData($("#form_manualinvoice_submitForm").get(0));
                                //    contentType = false;
                                //    processData = false;
                                //    $.ajax({
                                //        type: "POST",
                                //        url: action,
                                //        data: dataString,
                                //        dataType: "json",
                                //        contentType: contentType,
                                //        processData: processData,
                                //        success: function (result) {
                                //            $.blockUI();
                                //            $('#form_modal_customermanualinvoice').html('');
                                //            $("#modal_CustomerManualInvoice").modal('hide');
                                //        },
                                //        error: function (jqXHR, textStatus, errorThrown) {
                                //            //do your own thing
                                //            alert("fail");
                                //            $.unblockUI();
                                //        }
                                //    });
                                //}); //end .submit()

                                $("#btnCManualInvoiceSaveClose").click(function (e) {
                                    if (!ValidateInputSelect())
                                        return false;
                                    $('#form_manualinvoice_submitForm').submit();
                                    event.preventDefault();
                                });

                                addNewEntry();
                            }
                           
                            $.unblockUI();
                        }
                    });
                        }
                    });


                    //bindcustomerdetail($("#CustomerViewModel_CustomerId").val());

                    $.unblockUI();
                    $("#modal_CustomerManualInvoice").modal({ backdrop: 'static' });
                },
                error: function (err) {
                    console.log(err);
                    $.unblockUI();
                }
            });
            //$.unblockUI();
        }



        function ValidateInputSelect() {
            var IsValidItem = true;
            $("input.requiredValidation").each(function () {
                console.log($(this).val());
                if ($(this).val().length == 0) {
                    $(this).addClass('error');
                    IsValidItem = false;
                } else if ($(this).val() == 0) {
                    if (parseFloat($(this).val()) == 0) {
                        $(this).addClass('error');
                        IsValidItem = false;
                    } else {
                        $(this).removeClass('error');
                    }
                } else {
                    $(this).removeClass('error');
                }
            });

            $("select.requiredValidation").each(function () {
                console.log($(this).val());
                if ($(this).val() == "" || $(this).val() == "Select") {
                    $(this).addClass('error');
                    IsValidItem = false;
                }
                else {
                    $(this).removeClass('error');
                }
            });


            $("select.ddldetaillinenumber").each(function () {
                console.log($(this).val());
                if ($(this).val() == "" || $(this).val() == "Select") {
                    $(this).addClass('error');
                    IsValidItem = false;
                }
                else {
                    $(this).removeClass('error');
                }
            });


            $("textarea.requiredValidation").each(function () {
                console.log($(this).val());
                if ($(this).val() == "") {
                    $(this).addClass('error');
                    IsValidItem = false;
                }
                else {
                    $(this).removeClass('error');
                }
            });



            var amt = 0;
            $("input.frfranchiseeamount").each(function () {

                var tempFranchiseeAmt = parseFloat($(this).val())
                amt = amt + tempFranchiseeAmt;
            });

            var txtsubtotal = parseFloat($('#txtsubtotal').val());

            if (amt != txtsubtotal) {
                IsValidItem = false;
                $(".frfranchiseeamount").addClass('error');
            }
            else {
                $(".frfranchiseeamount").removeClass('error');
            }



            return IsValidItem;
            //var IsValidItem = true;
            //$("input.requiredValidation").each(function () {
            //    console.log($(this).val());
            //    if ($(this).val().length == 0) {
            //        $(this).addClass('error');
            //        IsValidItem = false;
            //    }
            //    else {
            //        $(this).removeClass('error');
            //    }
            //});

            //$("select.requiredValidation").each(function () {
            //    console.log($(this).val());
            //    if ($(this).val() == "" || $(this).val() == "Select") {
            //        $(this).addClass('error');
            //        IsValidItem = false;
            //    }
            //    else {
            //        $(this).removeClass('error');
            //    }
            //});


            //$("select.ddldetaillinenumber").each(function () {
            //    console.log($(this).val());
            //    if ($(this).val() == "") {
            //        $(this).addClass('error');
            //        IsValidItem = false;
            //    }
            //    else {
            //        $(this).removeClass('error');
            //    }
            //});


            //$("textarea.requiredValidation").each(function () {
            //    console.log($(this).val());
            //    if ($(this).val() == "") {
            //        $(this).addClass('error');
            //        IsValidItem = false;
            //    }
            //    else {
            //        $(this).removeClass('error');
            //    }
            //});



            //var amt = 0;
            //$("input.frfranchiseeamount").each(function () {

            //    var tempFranchiseeAmt = parseFloat($(this).val())
            //    amt = amt + tempFranchiseeAmt;
            //});

            //var txtsubtotal = parseFloat($('#txtsubtotal').val());

            //if (amt != txtsubtotal) {
            //    IsValidItem = false;
            //    $(".frfranchiseeamount").addClass('error');
            //}
            //else {
            //    $(".frfranchiseeamount").removeClass('error');
            //}



            //return IsValidItem;


        }

        //function showManualPayment_CalculateAmountAppyly(res,ln) {

        //    if (res.length > 0) {
        //        var iT = 1;
        //        $.each(res, function (index, value) {
                    
        //                $('#ContractDetailServiceTypeList' + iT).val(value.ServiceListId)
        //                $('#txtdescription' + iT).val(value.ItemDescription)
        //            $('#hdfunitprice' + iT).val(value.ItemAmount.toFixed(2));
        //                CalculateAmount(iT);
        //                $('#ddldetaillinenumber' + iT).val(-1);
        //                $('#ddldetaillinenumber' + iT).trigger("change");
        //            iT++;
        //        });
        //    } 
        //    //for (var iT = 1; iT <= totalLine; iT++) {
        //    //    CalculateAmount(iT)
        //    //    $('#ddldetaillinenumber' + iT).val(-1);
        //    //    $('#ddldetaillinenumber' + iT).trigger("change");
        //    //}
        //}


        /*Manual Payment */
        function showManualPayment(id) {

            var currenturl = '@Url.Action("ManualPaymentPopup", "Customer",new { area="Portal" })?id=' + id;
            $.ajax({
                type: "GET",
                url: currenturl,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#divmodal_ManualPayment').html(data);
                    manualPaymentInIt(id);
                    $('#modal_ManualPayment').modal('show');
                },
                error: function (err) {
                    console.log(err);
                }
            });
        }
        var ManualPaymentList;

        function getManualPaymentTableURL(id) {

            var _fromDateVal = $('#dtpfromMP').val();
            var _toDateVal = $('#dtptoMP').val();
            var _searchtextVal = "";
            var _incClosed = "false";
            var _open = $('#chkOpenMP').prop("checked");
            var _closed = $('#chkCloseMP').prop("checked");

            var sURL = '@Url.Action("InvoicesSearchForPaymentResultData", "Customer", new { area = "Portal" })?customerId=' + id

            return sURL;
        }

        function btnOpenApplyPaymentForm(id) {
            openApplyPaymentForm(id);
        }

        function showStatements(id) {

            _bindTransactions($('#tbl_statementTransactions tbody'), 0, $('#spnStartDateStatements').text(), $('#spnEndtDateStatements').text(), true);

            $("#modal_showStatements").modal('show');

        }

        function btnOpenApplyCreditForm(id) {

            var sURL = '@Url.Action("ApplyCreditForm", "AccountReceivable", new { area = "Portal" })?Id=' + id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#form_applycreditformDiv').html(data);
                    $(".date-picker").datepicker();
                    $("#creditDate").datepicker();
                    $(".input-group-btn").click(function () {
                        $(this).prev().trigger("focus");
                        $(this).prev().trigger("focus");
                    });
                    $("#modal_applycreditform").modal({ backdrop: 'static' });
                    initCreditForm();
                    $('.creditfieldcurrency').each(function () {
                        applyMaskCurrency('#' + this.id);
                    });
                },
                error: function (err) {
                    console.log(err);
                }
            });
        }
        //For Manual PopUp Open with Apply credit checkbok
        $("#chkApplyCredit").change(function () {
            var val = this.checked ? this.value : '';
            if (val == "on")
            {
                $(".manualpayment").click();
                setTimeout(function () {
                    $("#chkApplyCreditMP").prop("checked", true);
                    $("#chkApplyCreditMP").trigger("change");
                }, 2000);
            }
            else { $(".manualpayment").click();}



        });
        function openApplyCreditFormForCancellation(info,MaintenancetempId) {

            var id = info.InvoiceId;
            var lastServiceDate = $('#LastServiceDate').val();
            var sURL = '@Url.Action("ApplyCreditFormForCancellation", "AccountReceivable", new { area = "Portal" })?Id=' + id + '&lastServiceDate=' + lastServiceDate;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#form_applycreditformDiv').html(data);
                    $(".date-picker").datepicker();
                    $("#creditDate").datepicker();
                    $(".input-group-btn").click(function () {
                        $(this).prev().trigger("focus");
                        $(this).prev().trigger("focus");
                    });
                    initCreditForm();
                    $('.creditfieldcurrency').each(function () {
                        applyMaskCurrency('#' + this.id);
                    });

                    //workingdays calculation
                    var sURL1 = '@Url.Action("ApplyCreditFormForCancellationWorkingDays", "AccountReceivable", new { area = "Portal" })?Id=' + id + '&lastServiceDate=' + lastServiceDate;
                    $.ajax({
                        type: "GET",
                        url: sURL1,
                        contentType: "application/json; charset=utf-8",
                        datatype: "json",
                        success: function (data1) {

                            var defDays = data1.workingDays;
                            var workDays = data1.monthDays;

                            //var crAmt = (removeFormatting($("#invAmt").val()) / workDays) * defDays;
                            var crAmt = parseFloat(((removeFormatting($("#invAmt").val()) / workDays) * defDays).toFixed(2));

                            setCreditAmt(crAmt);
                            $("#creditDate").val($("#StatusDate").val())


                            //$('#form_applycreditform').html(data);
                            //$(".date-picker").datepicker();
                            //$("#creditDate").datepicker();
                            //$(".input-group-btn").click(function () {
                            //    $(this).prev().trigger("focus");
                            //    $(this).prev().trigger("focus");
                            //});
                            //initCreditForm();
                            //$('.creditfieldcurrency').each(function () {
                            //    applyMaskCurrency('#' + this.id);
                            //});
                            //setCreditAmt(removeFormatting($("#invAmt").val()) * info.CreditPercent);
                            //$("#select_ReasonList").val("1");

                            //$('#isForCancellationMaintenancetempId').val(MaintenancetempId);
                            //$("#modal_applycreditform").modal({ backdrop: 'static' });
                        },
                        error: function (err) {
                            console.log(err);
                        }
                    });


                    //end workingdays



                    //setCreditAmt(removeFormatting($("#invAmt").val()) * info.CreditPercent);
                    $("#select_ReasonList").val("1");

                    $('#isForCancellationMaintenancetempId').val(MaintenancetempId);
                    $("#modal_applycreditform").modal({ backdrop: 'static' });
                },
                error: function (err) {
                    console.log(err);
                }
            });
        }

        function formatCurrency(total, dollar) {
            dollar = (dollar == true ? true : false);
            var neg = false;
            if (total < 0) {
                neg = true;
                total = Math.abs(total);
            }
            return (neg ? "-" : '') + (dollar ? "$" : "") + parseFloat(total, 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString();
        }


        function removeFormatting(i) {
            return typeof i === 'string' ?
                i.replace(/[\$,]/g, '') * 1 :
                typeof i === 'number' ?
                i : 0;
        }


        function showFranchiseesForLineNumber(lineNo) {
            $(".franchisee-row").hide();
            $(".franchisee-row-line" + lineNo).show();
        }

        function toggleCreditUnitColumns(creditUnit) {
            var creditUnit = $("input[type=radio][name=rdCreditUnit]:checked").val();
            $(".franchisee-amt-col").hide();
            $(".franchisee-pct-col").hide();
            $(".franchisee-" + creditUnit + "-col").show();
        }


        function getstatus(id) {
            var sURL = '@Url.Action("GetStatus", "Customer", new { area = "Portal" })?id=' + id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    return data.response;
                },

            })
        }

        function OpenCustomerContractPopup(Id) {

            //var sURL = '@Url.Action("RenderCustomerContract", "Customer", new { area = "Portal" })?id=' + Id +"&callfrom=1"; //disable edit info
            var sURL = '@Url.Action("RenderCustomerContractDetails", "Customer", new { area = "Portal" })?id=' + Id +"&callfrom=1"; //disable edit info
            ////var sURL = '@Url.Action("RenderCustomerContractDetails", "Customer", new { area = "Portal" })?id=' + Id +"&callfrom=0";  //enable edit info
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#RenderCustomerContractDetails').html(data);
                    //$('#Contract_StartDate').inputmask("mm/dd/yyyy", {});
                    //$('#Contract_StartDate').inputmask("mm/dd/yyyy", {});
                    //$('#Contract_SignDate').inputmask("mm/dd/yyyy", {});
                    //$('#Contract_StatusDate').inputmask("mm/dd/yyyy", {});
                    //$('#Contract_ExpirationDate').inputmask("mm/dd/yyyy", {});
                    //$('#Contract_ResumeDate').inputmask("mm/dd/yyyy", {});
                    $(".date-picker").datepicker();
                    $(".input-group-btn").click(function () {
                        $(this).prev().trigger("focus");
                        $(this).prev().trigger("focus");
                    });
                    $("#modal_CustomerContractPopup").modal({ backdrop: 'static' });

                    $("#btnContractSave").hide();
                    $("#btnContractCancel").hide();
                    $("#btnEditContract").show();
                    $("#btnSubmit").hide();
                    $(".subsectionBtn").hide();
                    $(".clsContractview").attr("disabled", "disabled");
                },
                error: function (err) {
                    console.log(err);
                }
            });

            //$("#modal_CustomerContractPopup").modal({ backdrop: 'static' });
        }
        var editFranchiseeDistribution = function () {

            $(".editvalue").addClass("editvaluetext");
            $(".editvalue").removeClass("editmode");
            //$("#btnSaveDistribution").show();
            //$("#btnEditDistribution").hide();
            $(".editvalue").removeAttr("disabled").removeAttr("readonly");
            $(".editcheck").removeAttr("disabled").removeAttr("readonly");
        };

        function FranchiseeDistribution(id) {
            var sURL = '@Url.Action("CustomerDetailFranchiseeDistribution", "Customer", new { area = "Portal" })?Id=' + id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#form_FranchiseeDistribution').html(data);

                    $(".editvalue").removeClass("editvaluetext");
                    $(".editvalue").addClass("editmode");
                    $(".editvalue").attr("readonly", "readonly");
                    //$("#btnSaveDistribution").hide();
                    //$("#btnEditDistribution").show();
                    $(".editcheck").attr("disabled", "disabled");
                    $(".editcheck").attr("readonly", "readonly");

                    FranchiseeDistributionData(id);
                    bindcustomerDetailDisLoad(id);
                    $('.modal-dialog').draggable();
                },
                error: function (err) {
                    console.log(err);
                }
            });
        }
        // Franchisee Customer Distribution new code
        function BindFranchiseeCustomerDistribution(cid, fid) {

            $("#ModalFranchiseDistribution_CustomerPopup").modal("hide");

            //var sURL = '@Url.Action("RenderFranchiseCustomerDistributionPopup", "Customer", new { area = "Portal" })?cid=' + cid + '&fid=' + fid + '&callfrom=' + $('#hdfCustomerDetailCallFrom').val();
            var sURL = '@Url.Action("RenderFranchiseCustomerOnlyDistributionPopup", "Customer", new { area = "Portal" })?cid=' + cid + '&fid=' + fid + '&callfrom=CD';
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {

                    $('#form_FranchiseCustomersDistributionPopup').html(data);
                    $("#CustomerDetail_EffectiveDate").datepicker("setDate", new Date());
                    //$("#modal_CIDFranchiseeDistribution").modal({ backdrop: 'static' });
                    //$("#FD_modal_FranchiseeDistribution").modal({ backdrop: 'static' });

                    //$("#btnFDSaveDistribution").hide();
                    //$("#btnTransDistributionFeeSave").hide();
                },
                error: function (err) {
                    console.log(err);
                }
            });
        }
        function ShowCustomerSuggetionBox() {

            $('#fcsearch-box').val('');
            $('#hdfsearch_franchiseeid').val('');
            var box = $('#fcsearch-box').data('typeahead');
            if (box != null) {
                box.source = c_typeaheadSource;
            }
            else {
                $('#fcsearch-box').typeahead({
                    source: c_typeaheadSource,
                    updater: function (item) {
                        $('#hdfsearch_franchiseeid').val(item.id);
                        BindFranchiseeCustomerDistribution('@(Model.CustomerDetail != null? Model.CustomerDetail.CustomerId:"0")',$('#hdfsearch_franchiseeid').val());
                        return item;
                    },
                    minLength: 1
                }).focus();
            }

            $("#ModalFranchiseDistribution_CustomerPopup").modal({ backdrop: 'static' });
        }



        function bindcustomerDetailDisLoad(customerid) {

        }

        function viewDistributionFee() {
            $("#modal_Distribution").modal({ backdrop: 'static' });
        }
        function Franchiseeservice(mo, tu, we, th, fr, sa, su) {


            $("#chkScheduleMonday").prop('checked', false);
            $("#chkScheduleTuesday").prop('checked', false);
            $("#chkScheduleWednesday").prop('checked', false);
            $("#chkScheduleThursday").prop('checked', false);
            $("#chkScheduleFriday").prop('checked', false);
            $("#chkScheduleSaturday").prop('checked', false);
            $("#chkScheduleSunday").prop('checked', false);


            if (mo == 1)
                $("#chkScheduleMonday").prop('checked', true);
            if (tu == 1)
                $("#chkScheduleTuesday").prop('checked', true);
            if (we == 1)
                $("#chkScheduleWednesday").prop('checked', true);
            if (th == 1)
                $("#chkScheduleThursday").prop('checked', true);
            if (fr == 1)
                $("#chkScheduleFriday").prop('checked', true);
            if (sa == 1)
                $("#chkScheduleSaturday").prop('checked', true);
            if (su == 1)
                $("#chkScheduleSunday").prop('checked', true);




            $("#modal_service").modal({ backdrop: 'static' });
        }
        //function FranchiseeserviceDestribution() {
        //    $("#modal_Distribution").modal({ backdrop: 'static' });
        //}
        var FeeDataForDistribution = [];
        function FranchiseeserviceAddDestribution() {

            $.ajax({
                url: '@Url.Action("GetFeeData", "Customer","Portal")',
                success: function (res) {
                    
                    FeeDataForDistribution = res;
                    var tempRow = "";
                    $('#feeListAdd tbody').html('');
                    $.each(res, function (index, value) {
                        tempRow = "";
                        tempRow += '<tr>';
                        tempRow += '    <td><input type="checkbox" rel="feeid_distribution" value="' + value.FeeId + '" /></td>';
                        tempRow += '    <td>' + value.FeeName + '</td>';
                        tempRow += '    <td>' + value.FeeRateTypeName + '</td>';
                        tempRow += '    <td style="text-align: right;">' + (value.FeeRateTypeListId == 1 ? (value.Amount + '%') : ('$ ' + value.Amount)) + '</td>';
                        tempRow += '</tr>';
                        $('#feeListAdd tbody').append(tempRow);
                    });

                    $("#modal_AddDistribution").modal({ backdrop: 'static' });
                },
                error: function () { }
            });
        }

        function AccountOffringModel() {
            settimedurationAccountOffering_select(3);
            OnlyNumber('#txtAccountOfferingDistance');
            $("#modal_AccountOffring").modal("show");


        }

        function SearchAccountOffer(_id) {
            $('#_div_AccountOffringResult').html('');
            if ($('#txtAccountOfferingDistance').val() == '') {
                $('#txtAccountOfferingDistance').addClass("has-error");
                return;
            }
            else {
                $('#txtAccountOfferingDistance').removeClass("has-error");
            }


            //$("#modal_AccountOffringResult").modal("show");
            //var _id = @Model.CustomerDetail.CustomerId;
            var _frt = $('#select_AOFranchiseeTypeList').val()
            var _dis = $('#txtAccountOfferingDistance').val()
            //var _eDate = select_timedurationAccountOffering
            var _sDate = $('#sDateAccountOffering').val()
            var _eDate = $('#eDateAccountOffering').val()

            var sURL = '@Url.Action("GetAccountOffringResult", "Customer", new { area = "Portal" })?id=' + _id+'&frt=' + _frt+'&dis=' + _dis+'&sdate=' + _sDate+'&edate=' + _eDate;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#_div_AccountOffringResult').html('');
                    $('#_div_AccountOffringResult').html(data);
                    $("#modal_AccountOffringResult").modal({ backdrop: 'static' });
                },
                error: function (err) {
                    console.log(err);
                }
            });
            //

        }

        function Editfunction() {
            $(".edit").removeAttr("disabled").removeAttr("readonly");
            $("#btnSave").removeAttr("disabled");
            $("#btnCancel").removeAttr("disabled");

            $(".EditBtn").show();
            $(".SaveBtn").hide();
            $(".CancelBtn").hide();

            $("#EditBSetting").hide();
            $("#btnSave").show();
            $("#btnCancel").show();


            $(".editmain1").attr("disabled", "disabled");
            $(".editmain1").attr("readonly", "readonly");

            $(".editmain").attr("disabled", "disabled");
            $(".editmain").attr("readonly", "readonly");

            $(".editbill").attr("disabled", "disabled");
            $(".editbill").attr("readonly", "readonly");

        }

        function EditContactfunction1() {
            $(".editmain1").removeAttr("disabled").removeAttr("readonly");
            $("#btnContactSave1").removeAttr("disabled");
            $("#btnContactCancel1").removeAttr("disabled");

            $(".EditBtn").show();
            $(".SaveBtn").hide();
            $(".CancelBtn").hide();

            $("#EditContact1").hide();
            $("#btnContactSave1").show();
            $("#btnContactCancel1").show();


            $(".editmain").attr("disabled", "disabled");
            $(".editmain").attr("readonly", "readonly");

            $(".edit").attr("disabled", "disabled");
            $(".edit").attr("readonly", "readonly");

            $(".editbill1").attr("disabled", "disabled");
            $(".editbill1").attr("readonly", "readonly");

            $(".editbill").attr("disabled", "disabled");
            $(".editbill").attr("readonly", "readonly");
        }

        function EditContactfunction() {

            $(".editmain").removeAttr("disabled").removeAttr("readonly");
            $("#btnContactSave").removeAttr("disabled");
            $("#btnContactCancel").removeAttr("disabled");
            //$(".edit").removeAttr("disabled").removeAttr("readonly");

            $(".EditBtn").show();
            $(".SaveBtn").hide();
            $(".CancelBtn").hide();

            $("#EditContact").hide();
            $("#btnContactSave").show();
            $("#btnContactCancel").show();

            $(".editmain1").attr("disabled", "disabled");
            $(".editmain1").attr("readonly", "readonly");

            $(".edit").attr("disabled", "disabled");
            $(".edit").attr("readonly", "readonly");

            $(".editbill1").attr("disabled", "disabled");
            $(".editbill1").attr("readonly", "readonly");

            $(".editbill").attr("disabled", "disabled");
            $(".editbill").attr("readonly", "readonly");
        }

        function EditBContactfunction1() {
            $(".editbill1").removeAttr("disabled").removeAttr("readonly");
            $("#btnBContactSave1").removeAttr("disabled");
            $("#btnBContactCancel1").removeAttr("disabled");
            //$(".edit").removeAttr("disabled").removeAttr("readonly");

            $(".EditBtn").show();
            $(".SaveBtn").hide();
            $(".CancelBtn").hide();

            $("#EditBContact1").hide();
            $("#btnBContactSave1").show();
            $("#btnBContactCancel1").show();


            $(".editbill").attr("disabled", "disabled");
            $(".editbill").attr("readonly", "readonly");

            $(".edit").attr("disabled", "disabled");
            $(".edit").attr("readonly", "readonly");

            $(".editmain1").attr("disabled", "disabled");
            $(".editmain1").attr("readonly", "readonly");

            $(".editmain").attr("disabled", "disabled");
            $(".editmain").attr("readonly", "readonly");
        }
        function EditBContactfunction() {
            $(".editbill").removeAttr("disabled").removeAttr("readonly");
            $("#btnBContactSave").removeAttr("disabled");
            $("#btnBContactCancel").removeAttr("disabled");
            // $(".edit").removeAttr("disabled").removeAttr("readonly");

            $(".EditBtn").show();
            $(".SaveBtn").hide();
            $(".CancelBtn").hide();

            $("#EditBContact").hide();
            $("#btnBContactSave").show();
            $("#btnBContactCancel").show();


            $(".editbill1").attr("disabled", "disabled");
            $(".editbill1").attr("readonly", "readonly");

            $(".edit").attr("disabled", "disabled");
            $(".edit").attr("readonly", "readonly");

            $(".editmain1").attr("disabled", "disabled");
            $(".editmain1").attr("readonly", "readonly");

            $(".editmain").attr("disabled", "disabled");
            $(".editmain").attr("readonly", "readonly");
        }


        function _bindTransactionsForCustomerTransaction(typeid, sdate, edate) {

            //$('.datatableClass').show();
            //$('#customerTransList').show();
            var customerId = $('#CustomerID').val();
            if (customerId) {
                $('#totalAmount').text('');
                $('#totalTax').text('');
                $('#totalDebit').text('');
                $('#totalCredit').text('');
                $('#totalBalance').text('');

                var elem = $('#customerTransList tbody');
                var masterTrxTypeId = $("#CustomerTransactionType").val();
                var spnStartDate = $("#spnStartDate").text();
                var spnEndDate = $("#spnEndtDate").text();
                var _monthVal = $('#monthlist').val();
                var _yearVal = $('#yearlist').val();
                $.ajax({
                    url: '@Url.Action("GetAllCustomerTransactions", "Customer", new { area = "Portal" })?CustomerId='+customerId+'&TypeId=' + typeid + '&StartDate=' + sdate + '&EndDate=' + edate + '&month=' + _monthVal + '&year=' + _yearVal,
                    success: function (res) {

                        var tempRow = "";
                        $(elem).html('');
                        //var vBalamt = -parseFloat(res.StartingBalance);
                        var vBalamt = 0; // temporary until balance is fixed

                        var showAllTransactions = parseInt(masterTrxTypeId) == 0;

                        /*tempRow += '<tr>';
                        tempRow += '<td style="text-align: center;font-size: 12px;">&nbsp;</td>';
                        tempRow += '<td style="text-align: center;font-size: 12px;">' + spnStartDate + '</td>'
                        tempRow += '<td style="text-align: center;font-size: 12px;">&nbsp;</td>';
                        tempRow += '<td style="text-align: center;font-size: 12px;">Previous Balance (as of ' + spnStartDate + ')</td>';
                        tempRow += '<td style="text-align: center;font-size: 12px;">&nbsp;</td>';
                        tempRow += '<td style="text-align: center;font-size: 12px;border-right: 2px solid blue;">&nbsp;</td>';
                        tempRow += '<td style="text-align: center;font-size: 12px;">&nbsp;</td>';
                        tempRow += '<td style="text-align: center;font-size: 12px;border-right: 2px solid blue;">&nbsp;</td>';
                        tempRow += '<td style="float: right;font-size: 12px;">' + formatCurrency(vBalamt, true) + '</td>';
                        tempRow += '<td style="text-align: center;font-size: 12px;">&nbsp;</td>';
                        tempRow += '</tr>';
                        $(elem).append(tempRow);*/

                        var totalCredit = 0.0;
                        var totaldebit = 0.0;
                        var totalAmount = 0.0;
                        var totalTax = 0.0;
                        var totalBalance = parseFloat(vBalamt);

                        $.each(res.Transactions, function (index, value) {

                            tempRow = "";

                            totalBalance=totalBalance+parseFloat(value.CreditAmount)-parseFloat(value.DebitAmount);
                            totalAmount=totalAmount+parseFloat(value.Amount);
                            totalTax=totalTax+parseFloat(value.TotalTax);
                            totaldebit=totaldebit+parseFloat(value.DebitAmount);
                            totalCredit=totalCredit+parseFloat(value.CreditAmount);

                            // wrap calculation in parseFloat(x.toFixed(2)) to eliminate float precision error

                            var Number = (value.Number != null ? (value.TransactionTypeId == 1 || value.TransactionTypeId == 3 ? value.Number : value.TransactionNumber) : value.TransactionNumber);

                            tempRow += '<tr>';
                            tempRow += '<td colspan="2" style="text-align: center;font-size: 12px;">' + value.TransactionTypeName + '</td>';
                            tempRow += '<td style="text-align: center;font-size: 12px;">' + formatJSONDateUtc(value.TransactionDate)  + '</td>'
                            if (value.TransactionTypeId == 2)
                            {
                                tempRow += '<td style="text-align: center;font-size: 12px;"><a onclick="OpenPaymentDetail(' + value.RefId + ')">' + Number + '</a></td>';
                            }

                            else if (value.TransactionTypeId == 3)
                            {
                                tempRow += '<td style="text-align: center;font-size: 12px;"><a onclick="OpenCustomerCreditDetail(' + value.RefId + ')">' + Number + '</a></td>';
                            }
                            else if (value.TransactionTypeId == 1 || value.TransactionTypeId == 5)
                            {
                                tempRow += '<td style="text-align: center;font-size: 12px;"><a onclick="showInvoiceDetail(' + value.RefId + ')">' + Number + '</a></td>';
                            }
                            else
                            {
                                tempRow += '<td style="text-align: center;font-size: 12px;">' + Number + '</td>';
                            }
                            tempRow += '<td style="text-align: left;font-size: 12px;">' + value.Description + '</td>';

                            tempRow += '<td style="text-align: right;font-size: 12px;">' + formatCurrency(value.Amount, true) + '</td>';
                            tempRow += '<td style="text-align: right;font-size: 12px; border-right: 2px solid blue;">' + formatCurrency(value.TotalTax, true) + '</td>';

                            tempRow += '<td style="text-align: right;font-size: 12px; border-left: 2px solid blue;">' +  formatCurrency(value.DebitAmount, true)  + '</td>';
                            tempRow += '<td style="text-align: right;font-size: 12px; border-right: 2px solid blue;">' + formatCurrency(value.CreditAmount, true) + '</td>';
                            //tempRow += '<td style="text-align: right;font-size: 12px; border-left: 2px solid blue;">' + formatCurrency(totalBalance, true) + '</td>';

                            tempRow += '<td style="text-align: center;font-size: 12px;">' + value.StatusName + '</td>';
                            tempRow += '</tr>';

                            $(elem).append(tempRow);
                        });

                        $('#totalAmount').text(formatCurrency(totalAmount,true));
                        $('#totalTax').text(formatCurrency(totalTax,true));
                        $('#totalDebit').text(formatCurrency(totaldebit,true));
                        $('#totalCredit').text(formatCurrency(totalCredit,true));
                        $('#totalBalance').text(formatCurrency(totalBalance,true));

                    },
                    error: function () { }
                });
            }
        }

        function formatJSONDateUtc(jsonDate) {
            if (jsonDate != null) {
                var dtstr = jsonDate.substr(6);
                var dateString = dtstr.substring(0, dtstr.length - 2);
                var currentTime = new Date(parseInt(dateString));
                var date = moment.utc(currentTime).format("MM/DD/YYYY");
                return date;
            }
            return null;
        }

        function _bindTransactions(elem, typeid, sdate, edate, isForStatements) {
            isForStatements = (isForStatements == true ? true : false);
            var customerId = $('#CustomerID').val();
            if (customerId){

                $.ajax({
                    url: '@Url.Action("CustomerDetailTransactions", "Customer","Portal")&CustomerId='+customerId+'&TypeId=' + typeid + '&StartDate=' + sdate + '&EndDate=' + edate,
                    success: function (res) {

                        var tempRow = "";
                        $(elem).html('');
                        //var vBalamt = -parseFloat(res.StartingBalance);
                        var vBalamt = 0; // temporary until balance is fixed

                        var showAllTransactions = parseInt(typeid) == 0;

                        /*tempRow += '<tr>';
                        tempRow += '<td style="text-align: center;font-size: 12px;">&nbsp;</td>';
                        tempRow += '<td style="text-align: center;font-size: 12px;">' + moment(new Date(sdate)).format("MM/DD/YYYY") + '</td>'
                        tempRow += '<td style="text-align: center;font-size: 12px;">&nbsp;</td>';
                        tempRow += '<td style="text-align: center;font-size: 12px;">Previous Balance (as of ' + moment(new Date(sdate)).format("MM/DD/YYYY") + ')</td>';
                        tempRow += '<td style="text-align: right;font-size: 12px;">&nbsp;</td>';
                        tempRow += '<td style="text-align: right;font-size: 12px;">&nbsp;</td>';
                        tempRow += '<td style="text-align: right;font-size: 12px;' + ((vBalamt < 0 && showAllTransactions) ? 'color:red' : '') + '">' + formatCurrency(vBalamt, true) + '</td>';
                        tempRow += '</tr>';
                        $(elem).append(tempRow);*/

                        var credits = 0;
                        var debits = 0;

                        $.each(res.Transactions, function (index, value) {
                            tempRow = "";

                            var amtBal = parseFloat(value.Amount);

                            if (value.AmountTypeListId == 1)
                                credits += amtBal;
                            else if (value.AmountTypeListId == 2)
                                debits += amtBal;

                            // wrap calculation in parseFloat(x.toFixed(2)) to eliminate float precision error
                            vBalamt = parseFloat((vBalamt + (value.AmountTypeListId == 2 ? parseFloat(value.Amount) : (-parseFloat(value.Amount)))).toFixed(2));

                            //var Number = (value.Number != null ? (value.TransactionTypeId == 1 || value.TransactionTypeId == 3 ? value.Number : value.TransactionNumber) : value.TransactionNumber);
                            //var Number = (value.Number != null ? (value.TransactionTypeId == 1 || value.TransactionTypeId == 3 || value.TransactionTypeId == 5 ? value.Number : value.TransactionNumber) : value.TransactionNumber);
                            var Number = (value.Number != null ? value.Number : '');
                            tempRow += '<tr>';
                            tempRow += '<td style="text-align: center;font-size: 12px;">' + value.TransactionTypeName + '</td>';
                            tempRow += '<td style="text-align: center;font-size: 12px;">' + moment(new Date(parseInt(value.TransactionDate.substr(6)))).format("MM/DD/YYYY") + '</td>'
                            tempRow += '<td style="text-align: center;font-size: 12px;"><a onclick="showInvoiceDetail(' + value.RefId + ')">' + Number + '</a></td>';
                            tempRow += '<td style="text-align: center;font-size: 12px;">' + value.Description + '</td>';
                            tempRow += '<td style="text-align: right;font-size: 12px;">' + ((value.AmountTypeListId == 2) ? formatCurrency(value.Amount, true) : "&nbsp;") + '</td>';
                            tempRow += '<td style="text-align: right;font-size: 12px;">' + ((value.AmountTypeListId == 1) ? formatCurrency(value.Amount, true) : "&nbsp;") + '</td>';
                            tempRow += '<td style="text-align: right;font-size: 12px;' + ((vBalamt < 0 && showAllTransactions) ? 'color:red' : '') + '">' + formatCurrency(showAllTransactions ? vBalamt : value.Amount, true) + '</td>';
                            tempRow += '</tr>';

                            $(elem).append(tempRow);
                        });

                        if (isForStatements) {
                            $("#spnStatements_PreviousBalance").text(formatCurrency(-res.StartingBalance, true));
                            $("#spnStatements_Credits").text(formatCurrency(credits, true));
                            $("#spnStatements_Debits").text(formatCurrency(debits, true));
                            $("#spnStatements_NewBalance").text(formatCurrency(-res.StartingBalance + credits - debits, true));
                        }
                    },
                    error: function () { }
                });
            }
        }

        $('#select_transactionstype').change(function () {
            _bindTransactionsForCustomerTransaction($('#select_transactionstype').val(), $('#spnStartDate').text(), $('#spnEndtDate').text());
        });

        var firstDay;
        var lastDay;


        $('#txtStartDate').change(function () {
            $('#spnStartDate').html($(this).val());
            if( $('#txtStartDate').val()!='' &&  $('#txtEndtDate').val()!='' && @ViewBag.CustomerID > 0)
                _bindTransactionsForCustomerTransaction($('#select_transactionstype').val(), $('#spnStartDate').text(), $('#spnEndtDate').text());
        });
        $('#txtEndtDate').change(function () {
            $('#spnEndtDate').html($(this).val());
            if( $('#txtStartDate').val()!='' &&  $('#txtEndtDate').val()!='' && @ViewBag.CustomerID > 0)
                _bindTransactionsForCustomerTransaction($('#select_transactionstype').val(), $('#spnStartDate').text(), $('#spnEndtDate').text());
        });

        $('#monthlist').change(function () {
            $('#spnStartDate').html('');
            if ($('#monthlist').val() != '' && $('#yearlist').val() != '')
                _bindTransactionsForCustomerTransaction($('#select_transactionstype').val(), $('#spnStartDate').text(), $('#spnEndtDate').text());
        });
        $('#yearlist').change(function () {
            $('#spnEndtDate').html('');
            if ($('#monthlist').val() != '' && $('#yearlist').val() != '')
                _bindTransactionsForCustomerTransaction($('#select_transactionstype').val(), $('#spnStartDate').text(), $('#spnEndtDate').text());
        });

        $('#select_timeduration').change(function () {
            $('#spnStartDate').html('');
            $('#spnEndtDate').html('');
            $('#divspandate').show();
            $('#divSD').hide();
            $('#divED').hide();
            $('#divmonth').hide();
            $('#divyear').hide();
            $('#monthlist').val('');
            $('#yearlist').val('');
            switch (parseInt($(this).val())) {
                case 1:
                    firstDay = moment().startOf('isoWeek').toString();
                    lastDay = moment().endOf('isoWeek').toString();
                    break;
                case 2:
                    //code block
                    firstDay = moment().startOf('isoWeek').toString();
                    lastDay = new Date().toString();
                    break;
                case 3:
                    firstDay = moment().subtract(0, 'month').startOf('month').toString();
                    lastDay = moment().subtract(0, 'month').endOf('month').toString();
                    break;
                case 4:
                    //code block
                    firstDay = moment().subtract(0, 'month').startOf('month').toString();
                    lastDay = new Date().toString();
                    break;
                case 5:
                    //code block
                    firstDay = moment().startOf('quarter').toString();
                    lastDay = moment().endOf('quarter').toString();
                    break;
                case 6:
                    //code block
                    firstDay = moment().startOf('quarter').toString();
                    lastDay = new Date().toString();
                    break;
                case 7:
                    //code block
                    firstDay = moment().startOf('year').toString();;
                    lastDay = moment().endOf('year').toString();
                    break;
                case 8:
                    //code block
                    firstDay = moment().startOf('year').toString();
                    lastDay = new Date().toString();
                    break;
                case 9:
                    //code block
                    firstDay = moment().toString();
                    lastDay = moment().toString();
                    break;
                case 10:
                    //code block
                    firstDay = moment().add(-1, 'days').toString();
                    lastDay = moment().add(-1, 'days').toString();
                    break;
                case 11:
                    //code block
                    firstDay = moment().subtract(1, 'week').startOf('week').toString();
                    lastDay = moment().subtract(1, 'week').endOf('week').toString();
                    break;
                case 12:
                    //code block
                    firstDay = moment().subtract(1, 'month').startOf('month').toString();
                    lastDay = moment().subtract(1, 'month').endOf('month').toString();
                    break;
                case 13:
                    //code block
                    firstDay = moment().subtract(1, 'quarter').startOf('quarter').toString();
                    lastDay = moment().subtract(1, 'quarter').endOf('quarter').toString();
                    break;
                case 14:
                    //code block
                    firstDay = moment().subtract(1, 'year').startOf('year').toString();
                    lastDay = moment().subtract(1, 'year').endOf('year').toString();
                    break;
                case 15:
                    //code block
                    $('#divspandate').hide();
                    $('#divSD').show();
                    $('#divED').show();
                    $('#txtStartDate').val('');
                    $('#txtEndtDate').val('')
                    break;
                case 16:
                    //code block
                    $('#divspandate').hide();
                    $('#divSD').hide();
                    $('#divED').hide();
                    $('#divmonth').show();
                    $('#divyear').show();
                    break;
                default:
                    //code block
            }
            $('#spnStartDate').html(moment(firstDay).format('L'));
            $('#spnEndtDate').html(moment(lastDay).format('L'));
            //alert(firstDay)
            //alert(lastDay)
            if(parseInt($(this).val())!=15 && parseInt($(this).val())!=16)
                _bindTransactionsForCustomerTransaction($('#select_transactionstype').val(), moment(firstDay).format('L'), moment(lastDay).format('L'));
        });

        $('#txtStartDateStatements').change(function () {
            $('#spnStartDateStatements').html($(this).val());
        });
        $('#txtEndtDateStatements').change(function () {
            $('#spnEndtDateStatements').html($(this).val());
        });

        $('#select_timedurationStatements').change(function () {
            $('#spnStartDateStatements').html('');
            $('#spnEndtDateStatements').html('');
            $('#divspandateStatements').show();
            $('#divSDStatements').hide();
            $('#divEDStatements').hide();
            switch (parseInt($(this).val())) {
                case 1:
                    firstDay = moment().startOf('isoWeek').toString();
                    lastDay = moment().endOf('isoWeek').toString();
                    break;
                case 2:
                    //code block
                    firstDay = moment().startOf('isoWeek').toString();
                    lastDay = new Date().toString();
                    break;
                case 3:
                    firstDay = moment().subtract(0, 'month').startOf('month').toString();
                    lastDay = moment().subtract(0, 'month').endOf('month').toString();
                    break;
                case 4:
                    //code block
                    firstDay = moment().subtract(0, 'month').startOf('month').toString();
                    lastDay = new Date().toString();
                    break;
                case 5:
                    //code block
                    firstDay = moment().startOf('quarter').toString();
                    lastDay = moment().endOf('quarter').toString();
                    break;
                case 6:
                    //code block
                    firstDay = moment().startOf('quarter').toString();
                    lastDay = new Date().toString();
                    break;
                case 7:
                    //code block
                    firstDay = moment().startOf('year').toString();;
                    lastDay = moment().endOf('year').toString();
                    break;
                case 8:
                    //code block
                    firstDay = moment().startOf('year').toString();
                    lastDay = new Date().toString();
                    break;
                case 9:
                    //code block
                    firstDay = moment().add(-1, 'days').toString();
                    lastDay = moment().add(-1, 'days').toString();
                    break;
                case 10:
                    //code block
                    firstDay = moment().subtract(1, 'week').startOf('week').toString();
                    lastDay = moment().subtract(1, 'week').endOf('week').toString();
                    break;
                case 11:
                    //code block
                    firstDay = moment().subtract(1, 'month').startOf('month').toString();
                    lastDay = moment().subtract(1, 'month').endOf('month').toString();
                    break;
                case 12:
                    //code block
                    firstDay = moment().subtract(1, 'quarter').startOf('quarter').toString();
                    lastDay = moment().subtract(1, 'quarter').endOf('quarter').toString();
                    break;
                case 13:
                    //code block
                    firstDay = moment().subtract(1, 'year').startOf('year').toString();
                    lastDay = moment().subtract(1, 'year').endOf('year').toString();
                    break;
                case 14:
                    //code block
                    $('#divspandateStatements').hide();
                    $('#divSDStatements').show();
                    $('#divEDStatements').show();
                    break;
                default:
                    //code block
            }
            $('#spnStartDateStatements').html(moment(firstDay).format('L'));
            $('#spnEndtDateStatements').html(moment(lastDay).format('L'));

            _bindTransactions($('#tbl_statementTransactions tbody'), 0, $('#spnStartDateStatements').text(), $('#spnEndtDateStatements').text(), true);
        });

        function settimeduration_select(id) {
            $('#select_timeduration').val(id)
            $('#spnStartDate').html('');
            $('#spnEndtDate').html('');
            $('#divspandate').show();
            $('#divSD').hide();
            $('#divED').hide();
            $('#divmonth').hide();
            $('#divyear').hide();
            $('#monthlist').val('');
            $('#yearlist').val('');
            switch (parseInt(id)) {
                case 1:
                    firstDay = moment().startOf('isoWeek').toString();
                    lastDay = moment().endOf('isoWeek').toString();
                    break;
                case 2:
                    //code block
                    firstDay = moment().startOf('isoWeek').toString();
                    lastDay = new Date().toString();
                    break;
                case 3:
                    firstDay = moment().subtract(0, 'month').startOf('month').toString();
                    lastDay = moment().subtract(0, 'month').endOf('month').toString();
                    break;
                case 4:
                    //code block
                    firstDay = moment().subtract(0, 'month').startOf('month').toString();
                    lastDay = new Date().toString();
                    break;
                case 5:
                    //code block
                    firstDay = moment().startOf('quarter').toString();
                    lastDay = moment().endOf('quarter').toString();
                    break;
                case 6:
                    //code block
                    firstDay = moment().startOf('quarter').toString();
                    lastDay = new Date().toString();
                    break;
                case 7:
                    //code block
                    firstDay = moment().startOf('year').toString();;
                    lastDay = moment().endOf('year').toString();
                    break;
                case 8:
                    //code block
                    firstDay = moment().startOf('year').toString();
                    lastDay = new Date().toString();
                    break;
                case 9:
                    //code block
                    firstDay = moment().toString();
                    lastDay = moment().toString();
                    break;
                case 10:
                    //code block
                    firstDay = moment().add(-1, 'days').toString();
                    lastDay = moment().add(-1, 'days').toString();
                    break;
                case 11:
                    //code block
                    firstDay = moment().subtract(1, 'week').startOf('week').toString();
                    lastDay = moment().subtract(1, 'week').endOf('week').toString();
                    break;
                case 12:
                    //code block
                    firstDay = moment().subtract(1, 'month').startOf('month').toString();
                    lastDay = moment().subtract(1, 'month').endOf('month').toString();
                    break;
                case 13:
                    //code block
                    firstDay = moment().subtract(1, 'quarter').startOf('quarter').toString();
                    lastDay = moment().subtract(1, 'quarter').endOf('quarter').toString();
                    break;
                case 14:
                    //code block
                    firstDay = moment().subtract(1, 'year').startOf('year').toString();
                    lastDay = moment().subtract(1, 'year').endOf('year').toString();
                    break;
                case 15:
                    //code block
                    $('#divspandate').hide();
                    $('#divSD').show();
                    $('#divED').show();
                    $('#txtStartDate').val('');
                    $('#txtEndtDate').val('')
                    break;
                default:
                    //code block
            }
            $('#spnStartDate').html(moment(firstDay).format('L'));
            $('#spnEndtDate').html(moment(lastDay).format('L'));
        }

        function settimedurationStatements_select(id) {
            $('#select_timedurationStatements').val(id)
            $('#spnStartDateStatements').html('');
            $('#spnEndtDateStatements').html('');
            $('#divspandateStatements').show();
            $('#divSDStatements').hide();
            $('#divEDStatements').hide();
            switch (parseInt(id)) {
                case 1:
                    firstDay = moment().startOf('isoWeek').toString();
                    lastDay = moment().endOf('isoWeek').toString();
                    break;
                case 2:
                    //code block
                    firstDay = moment().startOf('isoWeek').toString();
                    lastDay = new Date().toString();
                    break;
                case 3:
                    firstDay = moment().subtract(0, 'month').startOf('month').toString();
                    lastDay = moment().subtract(0, 'month').endOf('month').toString();
                    break;
                case 4:
                    //code block
                    firstDay = moment().subtract(0, 'month').startOf('month').toString();
                    lastDay = new Date().toString();
                    break;
                case 5:
                    //code block
                    firstDay = moment().startOf('quarter').toString();
                    lastDay = moment().endOf('quarter').toString();
                    break;
                case 6:
                    //code block
                    firstDay = moment().startOf('quarter').toString();
                    lastDay = new Date().toString();
                    break;
                case 7:
                    //code block
                    firstDay = moment().startOf('year').toString();;
                    lastDay = moment().endOf('year').toString();
                    break;
                case 8:
                    //code block
                    firstDay = moment().startOf('year').toString();
                    lastDay = new Date().toString();
                    break;
                case 9:
                    //code block
                    firstDay = moment().add(-1, 'days').toString();
                    lastDay = moment().add(-1, 'days').toString();
                    break;
                case 10:
                    //code block
                    firstDay = moment().subtract(1, 'week').startOf('week').toString();
                    lastDay = moment().subtract(1, 'week').endOf('week').toString();
                    break;
                case 11:
                    //code block
                    firstDay = moment().subtract(1, 'month').startOf('month').toString();
                    lastDay = moment().subtract(1, 'month').endOf('month').toString();
                    break;
                case 12:
                    //code block
                    firstDay = moment().subtract(1, 'quarter').startOf('quarter').toString();
                    lastDay = moment().subtract(1, 'quarter').endOf('quarter').toString();
                    break;
                case 13:
                    //code block
                    firstDay = moment().subtract(1, 'year').startOf('year').toString();
                    lastDay = moment().subtract(1, 'year').endOf('year').toString();
                    break;
                case 14:
                    //code block
                    $('#divspandateStatements').hide();
                    $('#divSDStatements').show();
                    $('#divEDStatements').show();
                    break;
                default:
                    //code block
            }
            $('#spnStartDateStatements').html(moment(firstDay).format('L'));
            $('#spnEndtDateStatements').html(moment(lastDay).format('L'));
        }
        $('#select_timedurationAccountOffering').change(function () {
            //alert($(this).val());
            $("#sDateAccountOffering").prop("disabled", true);
            $("#eDateAccountOffering").prop("disabled", true);
            switch (parseInt($(this).val())) {
                case 1:
                    firstDay = moment().startOf('isoWeek').toString();
                    lastDay = moment().endOf('isoWeek').toString();
                    break;
                case 2:
                    //code block
                    firstDay = moment().startOf('isoWeek').toString();
                    lastDay = new Date().toString();
                    break;
                case 3:
                    firstDay = moment().subtract(0, 'month').startOf('month').toString();
                    lastDay = moment().subtract(0, 'month').endOf('month').toString();
                    break;
                case 4:
                    //code block
                    firstDay = moment().subtract(0, 'month').startOf('month').toString();
                    lastDay = new Date().toString();
                    break;
                case 5:
                    //code block
                    firstDay = moment().startOf('quarter').toString();
                    lastDay = moment().endOf('quarter').toString();
                    break;
                case 6:
                    //code block
                    firstDay = moment().startOf('quarter').toString();
                    lastDay = new Date().toString();
                    break;
                case 7:
                    //code block
                    firstDay = moment().startOf('year').toString();;
                    lastDay = moment().endOf('year').toString();
                    break;
                case 8:
                    //code block
                    firstDay = moment().startOf('year').toString();
                    lastDay = new Date().toString();
                    break;
                case 9:
                    //code block
                    firstDay = moment().add(-1, 'days').toString();
                    lastDay = moment().add(-1, 'days').toString();
                    break;
                case 10:
                    //code block
                    firstDay = moment().subtract(1, 'week').startOf('week').toString();
                    lastDay = moment().subtract(1, 'week').endOf('week').toString();
                    break;
                case 11:
                    //code block
                    firstDay = moment().subtract(1, 'month').startOf('month').toString();
                    lastDay = moment().subtract(1, 'month').endOf('month').toString();
                    break;
                case 12:
                    //code block
                    firstDay = moment().subtract(1, 'quarter').startOf('quarter').toString();
                    lastDay = moment().subtract(1, 'quarter').endOf('quarter').toString();
                    break;
                case 13:
                    //code block
                    firstDay = moment().subtract(1, 'year').startOf('year').toString();
                    lastDay = moment().subtract(1, 'year').endOf('year').toString();
                    break;
                case 14:
                    //code block
                    $("#sDateAccountOffering").prop("disabled", false);
                    $("#eDateAccountOffering").prop("disabled", false);

                    break;
                default:
                    //code block
            }
            $('#sDateAccountOffering').val(moment(firstDay).format('L'));
            $('#eDateAccountOffering').val(moment(lastDay).format('L'));
        });
        function settimedurationAccountOffering_select(id) {
            $('#select_timedurationAccountOffering').val(id)
            $("#sDateAccountOffering").prop("disabled", true);
            $("#eDateAccountOffering").prop("disabled", true);
            switch (parseInt(id)) {
                case 1:
                    firstDay = moment().startOf('isoWeek').toString();
                    lastDay = moment().endOf('isoWeek').toString();
                    break;
                case 2:
                    //code block
                    firstDay = moment().startOf('isoWeek').toString();
                    lastDay = new Date().toString();
                    break;
                case 3:
                    firstDay = moment().subtract(0, 'month').startOf('month').toString();
                    lastDay = moment().subtract(0, 'month').endOf('month').toString();
                    break;
                case 4:
                    //code block
                    firstDay = moment().subtract(0, 'month').startOf('month').toString();
                    lastDay = new Date().toString();
                    break;
                case 5:
                    //code block
                    firstDay = moment().startOf('quarter').toString();
                    lastDay = moment().endOf('quarter').toString();
                    break;
                case 6:
                    //code block
                    firstDay = moment().startOf('quarter').toString();
                    lastDay = new Date().toString();
                    break;
                case 7:
                    //code block
                    firstDay = moment().startOf('year').toString();;
                    lastDay = moment().endOf('year').toString();
                    break;
                case 8:
                    //code block
                    firstDay = moment().startOf('year').toString();
                    lastDay = new Date().toString();
                    break;
                case 9:
                    //code block
                    firstDay = moment().add(-1, 'days').toString();
                    lastDay = moment().add(-1, 'days').toString();
                    break;
                case 10:
                    //code block
                    firstDay = moment().subtract(1, 'week').startOf('week').toString();
                    lastDay = moment().subtract(1, 'week').endOf('week').toString();
                    break;
                case 11:
                    //code block
                    firstDay = moment().subtract(1, 'month').startOf('month').toString();
                    lastDay = moment().subtract(1, 'month').endOf('month').toString();
                    break;
                case 12:
                    //code block
                    firstDay = moment().subtract(1, 'quarter').startOf('quarter').toString();
                    lastDay = moment().subtract(1, 'quarter').endOf('quarter').toString();
                    break;
                case 13:
                    //code block
                    firstDay = moment().subtract(1, 'year').startOf('year').toString();
                    lastDay = moment().subtract(1, 'year').endOf('year').toString();
                    break;
                case 14:
                    //code block
                    $("#sDateAccountOffering").prop("disabled", false);
                    $("#eDateAccountOffering").prop("disabled", false);
                    break;
                default:
                    //code block
            }
            $('#sDateAccountOffering').val(moment(firstDay).format('L'));
            $('#eDateAccountOffering').val(moment(lastDay).format('L'));
        }
        function deleteFrenchisee(linenumber, flineNo) {
            $("tr[id=row_" + flineNo + "]").remove();
        }

        function bindfranchiseedetail(linenumber, franchiseeid, franchiseename) {
            flineNo++;


            //var txtmarkup = parseFloat($('#txtmarkup' + linenumber).val() == '' ? 0 : $('#txtmarkup' + linenumber).val())
            var txtqty = parseFloat($('#txtqty' + linenumber).val() == '' ? 0 : $('#txtqty' + linenumber).val())
            var txtunitprice = parseFloat($('#txtunitprice' + linenumber).inputmask('unmaskedvalue') == '' ? 0 : $('#txtunitprice' + linenumber).inputmask('unmaskedvalue'))
            var txttotal = (txtqty * txtunitprice)

            var lineTotalAmount = 0;
            $('input[relLinea="' + linenumber + '"]').each(function (el) {
                lineTotalAmount += parseFloat(this.defaultValue);
            });

            if (lineTotalAmount + txttotal > txttotal) {
                if (lineTotalAmount < txttotal) {
                    txttotal = txttotal - lineTotalAmount;
                }
                else {
                    txttotal = 0;
                }
            }



            //var tempRow = '<tr id=row_' + flineNo + '><td><input type="hidden" relLine="' + linenumber + '" id="hdfFrenchiseeId' + flineNo + '_' + linenumber + '" name="hdfFrenchiseeId' + flineNo + '_' + linenumber + '" value="' + franchiseeid + '" /><input type="text" readonly id="frlinenumber' + flineNo + '_' + linenumber + '" name="frlinenumber' + flineNo + '_' + linenumber + '" value="' + linenumber + '" class="form-control input-sm cnumeric" style="padding: 5px;border-radius: 0px;" /></td>'
            //tempRow = tempRow + '<td><input type="text" required relLine="' + linenumber + '" readonly id="frfranchiseeno' + flineNo + '_' + linenumber + '" name="frfranchiseeno' + flineNo + '_' + linenumber + '" value="' + $.trim(franchiseename.split('   ')[0]) + '" class="form-control input-sm cnumeric" style="padding: 5px;border-radius: 0px;" /></td>'
            //tempRow = tempRow + '<td><input type="text" required relLine="' + linenumber + '" readonly id="frfranchiseename' + flineNo + '_' + linenumber + '" name="frfranchiseename' + flineNo + '_' + linenumber + '" value="' + $.trim(franchiseename.split('   ')[1]) + '" class="form-control input-sm cnumeric" style="padding: 5px;border-radius: 0px;" /></td>'
            //tempRow = tempRow + '<td><input type="text" required relLine="' + linenumber + '"  relLinea="' + linenumber + '" id="frfranchiseeamount' + flineNo + '_' + linenumber + '" name="frfranchiseeamount' + flineNo + '_' + linenumber + '" value="' + txttotal + '" class="form-control input-sm cnumeric" style="padding: 5px;border-radius: 0px;" /></td>';
            //tempRow = tempRow + '<td><a style="font-size: 16px;padding: 3px;color: mediumvioletred;" href="javascript:deleteFrenchisee(' + linenumber + ',' + flineNo + ');"><i class="fa fa-trash" aria-hidden="true"></i></a></td></tr>';
            console.log(franchiseename);
            var tempRow = '<tr id=row_' + flineNo + '><td>'
            tempRow = tempRow + '<input relLine="' + flineNo + '" type="hidden" id="hdfFrenchiseeId' + flineNo + '" name="hdfFrenchiseeId' + flineNo + '" value="' + franchiseeid + '" />'
            tempRow = tempRow + '<select relLine="' + flineNo + '"  relddldetaillinenum="ddldetaillinenumber" class="form-control input-sm ddldetaillinenumber" style="border-radius: 0px;" id="ddldetaillinenumber' + flineNo + '" name="ddldetaillinenumber' + flineNo + '"></select>';
            tempRow = tempRow + '</td>'
            tempRow = tempRow + '<td><input type="text" required relLine="' + flineNo + '" id="frfranchiseeno' + flineNo + '" name="frfranchiseeno' + flineNo + '" value="' + $.trim(franchiseename.split('   ')[0]) + '" readonly class="form-control input-sm cnumeric" style="padding: 5px;border-radius: 0px;" /></td>'
            tempRow = tempRow + '<td><input type="text" required relLine="' + flineNo + '" id="frfranchiseename' + flineNo + '" name="frfranchiseename' + flineNo + '" value="' + $.trim(franchiseename.split('   ')[1]) + '" readonly class="form-control input-sm cnumeric" style="padding: 5px;border-radius: 0px;" /></td>'
            tempRow = tempRow + '<td><input type="text" relLine="' + flineNo + '" id="frfranchiseeamount' + flineNo + '" name="frfranchiseeamount' + flineNo + '" value="' + txttotal + '" class="form-control input-sm cnumeric requiredValidation frfranchiseeamount" style="padding: 5px;border-radius: 0px;" /></td>';
            tempRow = tempRow + '<td><a style="font-size: 16px;padding: 3px;color: mediumvioletred;" href="javascript:deleteFrenchisee(' + flineNo + ');"><i class="fa fa-trash" aria-hidden="true"></i></a></td></tr>';


            $('#frdestributionTable tbody').append(tempRow);
            applyMaskCurrency('#frfranchiseeamount' + flineNo + '_' + linenumber);
            $("#hdfftotallineno").val(flineNo);


            setTimeout(function () {
                $("#hdfFrenchiseeId").val(0);
                //document.getElementById('ddldetaillinenumber').selectedIndex = 0;
                $('#fsearch-box').val('');
            }, 500);

        }
        $('#fsearch-box').keypress(function (event) {
            //var keycode = (event.keyCode ? event.keyCode : event.which);
            //if (keycode == '13') {
            //    $(this).typeahead('val', '');
            //    $("#ddldetaillinenumber").val('')
            //}
            $.ajax({
                type: "GET",
                url: '@Url.Action("Frenchiseedata", "AccountReceivable", new { area = "Portal" })',
                data: 'keyword=' + $(this).val(),
                success: function (data) {
                    custlist = data;
                    var typeaheadSource = [];
                    $.each(custlist, function (key, value) {
                        typeaheadSource.push({ id: value.FranchiseeId, name: value.FranchiseeNo + '   ' + $.trim(value.Name) })
                    });

                    $('#fsearch-box').typeahead({
                        source: typeaheadSource,
                        updater: function (item) {
                            $("#hdfFrenchiseeId").val(item.id);
                            console.log(item.name);
                            bindfranchiseedetailUpdated(item.id, $.trim(item.name.split('   ')[0]), $.trim(item.name.split('   ')[1]));

                            return item;
                        }
                    });
                }
            });
        });
        function bindfranchiseedetailUpdated(franchiseeid, franchiseeno, franchiseename) {

            flineNo++;



            var linenumber = 0;
            var txttotal = ''
            var lineTotalAmount = 0;

            var tempRow = '<tr id=row_' + flineNo + '><td>'
            tempRow = tempRow + '<input relLine="' + flineNo + '" type="hidden" id="hdfFrenchiseeId' + flineNo + '" name="hdfFrenchiseeId' + flineNo + '" value="' + franchiseeid + '" />'
            tempRow = tempRow + '<select relLine="' + flineNo + '"  relddldetaillinenum="ddldetaillinenumber" class="form-control input-sm ddldetaillinenumber" style="border-radius: 0px;" id="ddldetaillinenumber' + flineNo + '" name="ddldetaillinenumber' + flineNo + '"></select>';
            tempRow = tempRow + '</td>'
            tempRow = tempRow + '<td><input type="text" required relLine="' + flineNo + '" id="frfranchiseeno' + flineNo + '" name="frfranchiseeno' + flineNo + '" value="' + $.trim(franchiseeno) + '" readonly class="form-control input-sm cnumeric" style="padding: 5px;border-radius: 0px;" /></td>'
            tempRow = tempRow + '<td><input type="text" required relLine="' + flineNo + '" id="frfranchiseename' + flineNo + '" name="frfranchiseename' + flineNo + '" value="' + $.trim(franchiseename) + '" readonly class="form-control input-sm cnumeric" style="padding: 5px;border-radius: 0px;" /></td>'
            tempRow = tempRow + '<td><input type="text" relLine="' + flineNo + '" id="frfranchiseeamount' + flineNo + '" name="frfranchiseeamount' + flineNo + '" value="' + txttotal + '" class="form-control input-sm cnumeric requiredValidation frfranchiseeamount" style="padding: 5px;border-radius: 0px;" /></td>';
            tempRow = tempRow + '<td><a style="font-size: 16px;padding: 3px;color: mediumvioletred;" href="javascript:deleteFrenchisee(' + flineNo + ');"><i class="fa fa-trash" aria-hidden="true"></i></a></td></tr>';


            $('#frdestributionTable tbody').append(tempRow);
            applyMaskCurrency('#frfranchiseeamount' + flineNo);
            $("#hdfftotallineno").val(flineNo);

            var lineitems = []; lineitems.push("<option value=''>Select</option>");
            for (var i = 1; i <= lineNo; i++) { lineitems.push("<option value=" + i + ">" + i + "</option>"); }
            if (flineNo == 1) {
                lineitems.push("<option value='-1'>All</option>");
            }else if (flineNo > 1 && $('#ddldetaillinenumber1').val() == '-1') {

                $('#ddldetaillinenumber' + 1).html('');
                $('#ddldetaillinenumber' + 1).html(lineitems.join(' '));
                $("#frfranchiseeamount" + 1).val(0);
            }

            $('#ddldetaillinenumber' + flineNo).html('');
            $('#ddldetaillinenumber' + flineNo).html(lineitems.join(' '));


            $('#ddldetaillinenumber' + flineNo).change(function (event) {
                var _valAMT = $(this).val();
                var fln = $(this).attr("relLine");
                if ($(this).attr("relLine") != "Select") {

                    $('#frfranchiseeamount' + fln).prop("required", true);
                }
                else {
                    $('#frfranchiseeamount' + fln).prop("required", false);
                }
                if (_valAMT == "-1") {
                    UnitData = $("#txtsubtotal").val();
                    $("#frfranchiseeamount" + fln).val(UnitData);
                }
                else if ($("#frfranchiseeamount" + fln).val() != "" && $("txtExtendedPrice" + fln).val() != "") {
                    var UnitData;
                    var FrData;
                    //if ($("#txtExtendedPrice" + fln).val().indexOf(",") > 0)
                    //    UnitData = $("#txtExtendedPrice" + fln).val().replace("$ ", "").replace(",", "");
                    //else
                    UnitData = $("#txtExtendedPrice" + fln).val();
                    $("#frfranchiseeamount" + fln).val(UnitData);

                    if ($("#frfranchiseeamount" + fln).val().indexOf(",") > 0)
                        FrData = $("#frfranchiseeamount" + fln).val().replace("$ ", "").replace(",", "");
                    else
                        FrData = $("#frfranchiseeamount" + fln).val().replace("$ ", "");


                    if (parseFloat(FrData) > parseFloat(UnitData)) {
                        {
                            alert("Franchisee amount should not be greater than Extended Price.");
                            $("#frfranchiseeamount" + fln).focus();
                            $("#frfranchiseeamount" + fln).select();
                        }
                    }
                }
                else if ($("#frfranchiseeamount" + fln).val() == "" && $("txtExtendedPrice" + fln).val() != "")
                {
                    UnitData = $("#txtExtendedPrice" + fln).val();
                    $("#frfranchiseeamount" + fln).val(UnitData);
                }

            });
            $("#frfranchiseeamount" + flineNo).change(function () {
                var ddlLine = $(this).parent().parent().find("td")[0];
                var Line_No = $(ddlLine).find("select option:selected").val();
                if ($("#txtExtendedPrice" + Line_No).val() != "" && $(this).val() != "") {
                    var UnitData;
                    var FrData;
                    //if ($("#txtExtendedPrice" + Line_No).val().indexOf(",") > 0)
                    //    UnitData = $("#txtExtendedPrice" + Line_No).val().replace("$ ", "").replace(",", "");
                    //else
                    UnitData = $("#txtExtendedPrice" + Line_No).val();
                    if ($(this).val().indexOf(",") > 0)
                        FrData = $(this).val().replace("$ ", "").replace(",", "");
                    else
                        FrData = $(this).val().replace("$ ", "");
                    if (parseFloat(UnitData) < parseFloat(FrData)) {
                        alert("Frenchisee amount should not grater than Extended Price.");
                        $(this).focus();
                        $(this).select();
                    }
                }
            });

            setTimeout(function () {
                $("#hdfFrenchiseeId").val(0);
                $('#fsearch-box').val('');
            }, 500);

        }


        function addNewEntry(cbFn) {


            lineNo++;
            //<label for="chkPrintInvoice' + lineNo + '" style="padding-left: 0px;float: right;">Print Invoice</label><input style="float: right;" type="checkbox" id="chkPrintInvoice' + lineNo + '" name="chkPrintInvoice' + lineNo + '">
            var tr = "";
            tr = tr + '<tr relline="S' + lineNo + '" style="background-color:#eef1f5;border-right: 1px solid #eef1f5;">';
            tr = tr + '<td colspan="9" style="padding:0!important;">';
            tr = tr + '<table class="col-md-12" style="margin: 0px!important;">';
            tr = tr + '<tr class="theadRow">';
            tr = tr + '<td style="width:72px;padding: 0px !important;text-align:center;">Line No</td>';
            tr = tr + '<td style="padding: 0px !important;text-align:right;"></td>';
            tr = tr + '<td style="padding: 0px !important;text-align:right;"><label for="chkPrintInvoice' + lineNo + '" style="padding-left: 0px;float: right;"></td>';
            tr = tr + '<td style="width: 110px;"></td>';
            tr = tr + '<td style="width: 110px;padding: 0 0px !important;"></td>';
            tr = tr + '<td style="width: 159px;"><label class="check-inline" style="margin-right: 5px;" ><input type="radio" name="tablerdo' + lineNo + '" value="1" class="i-checks" id = "rdoAdditional' + lineNo + '" checked /><span>Additional Billing Office</span></label ></td>';
            tr = tr + '<td style="width: 60px;padding: 0 0px !important;"><input type="text" id="txtCommissionAmount' + lineNo + '" name="txtCommissionAmount' + lineNo + '" value="0" maxlength="10" class="form-control input-sm" /></td>';
            tr = tr + '<td><span id="spnPer' + lineNo + '">%</span></td>';
            tr = tr + '<td><div class="icheck-inline" style="margin-top: 0px;"><label class="check-inline" style="margin-right: 5px;" ><input type = "radio" name="tablerdo' + lineNo + '" value = "2" class="i-checks" id = "rdoExtraWork' + lineNo + '" checked /><span>ExtraWork</span></label ><label class="check-inline"><input type="radio" name="tablerdo' + lineNo + '" value="3" class="i-checks" id="rdoRegularBilling' + lineNo + '" /><span>Regular Billing</span></label>'
            tr = tr + '<label class="check-inline"><input type="radio" name="tablerdo' + lineNo + '" value="4" class="i-checks" id="rdoclientsupplies' + lineNo + '" /><span>Client Supplies</span></label></div ></td>';
            tr = tr + '<td><input type="checkbox" id="chkTaxExcempt' + lineNo + '" name="chkTaxExcempt' + lineNo + '"><label for="chkTaxExcempt' + lineNo + '" style="padding-left: 0px;">Tax Exempt</label> </td>';
            tr = tr + '</tr>';
            tr = tr + '</table>';
            tr = tr + '</td>';
            tr = tr + '</tr>';


            $('#tblcontractdetailrows>tbody').append(tr);
            tr = "";
            tr = tr + '<tr relline="S' + lineNo + '" class="theadRowH" style="background-color:#eef1f5;">';
            tr = tr + '<td style="text-align:center;width:60px;padding: 0px !important;"><input type="text" readonly="" id="txtlinenumber' + lineNo + '" name="txtlinenumber' + lineNo + '" value="' + lineNo + '" class="form-control input-sm cnumeric" style="text-align:center;"></td>';
            tr = tr + '<td style="text-align:center;width:150px;">Service</td>';
            tr = tr + '<td style="text-align:center;">Detail Description</td>';
            tr = tr + '<td style="width:60px;text-align:center;">MarkUp</td>';
            tr = tr + '<td style="width:60px;text-align:center;">Qty</td>';
            tr = tr + '<td style="width:100px;text-align:center;">Unit Price</td>';
            tr = tr + '<td style="width:100px;text-align:center;">Extended Price</td>';
            tr = tr + '<td style="width:90px;text-align:center;">Tax</td>';
            tr = tr + '<td style="width:100px;text-align:center;">Total</td>';
            tr = tr + '</tr>';


            $('#tblcontractdetailrows>tbody').append(tr);
            tr = "";
            tr = tr + '<tr relline="S' + lineNo + '" class="theadRowH remove-padding">';
            tr = tr + '<td style="background-color:#eef1f5;"></td>';
            tr = tr + '<td  style="width: 200px;"><select class="form-control input-sm requiredValidation ContractDetailServiceTypeList" id="ContractDetailServiceTypeList' + lineNo + '" name="ContractDetailServiceTypeList' + lineNo + '" ></select></td>';
            tr = tr + '<td><textarea required="" id="txtdescription' + lineNo + '" name="txtdescription' + lineNo + '" class="form-control input-sm" row="1" style="padding: 5px;border-radius: 0px;resize:vertical;max-height:100px;min-height:30px;"></textarea></td>';

            tr = tr + '<td><input type="text" required="" onchange="CalculateAmount(' + lineNo + ')" id="txtmarkup' + lineNo + '" name="txtmarkup' + lineNo + '" value="0" class="form-control input-sm" style="padding: 5px;border-radius: 0px;" ></td>';
            tr = tr + '<td><input type="text" required="" onchange="CalculateAmount(' + lineNo + ')" id="txtqty' + lineNo + '" name="txtqty' + lineNo + '" value="1" class="form-control input-sm" style="padding: 5px;border-radius: 0px;"></td>';
            tr = tr + '<td><input type="hidden" id="hdfunitprice' + lineNo + '" name="hdfunitprice' + lineNo + '"/>'
            tr = tr + '<input type="text" required="" onblur="CalculateAmount(' + lineNo + ')" id="txtunitprice' + lineNo + '" name="txtunitprice' + lineNo + '" value="" class="form-control input-sm requiredValidation unitPrice" style="padding: 5px;border-radius: 0px;"></td>';
            tr = tr + '<td><input type="text" required="" readonly="" onchange="CalculateAmount(' + lineNo + ')" id="txtExtendedPrice' + lineNo + '" name="txtExtendedPrice' + lineNo + '" value="" class="form-control input-sm" style="padding: 5px;border-radius: 0px;"></td>';
            tr = tr + '<td><input type="text" required="" readonly="" onchange="CalculateAmount(' + lineNo + ')" id="txttax' + lineNo + '" name="txttax' + lineNo + '" value="" class="form-control input-sm" style="padding: 5px;border-radius: 0px;"></td>';
            tr = tr + '<td><input type="text" required="" readonly="" onchange="CalculateAmount(' + lineNo + ')" id="txttotal' + lineNo + '" name="txttotal' + lineNo + '" value="" class="form-control input-sm" style="padding: 5px;border-radius: 0px;"></td>';
            tr = tr + '</tr>';

            $('#tblcontractdetailrows>tbody').append(tr);
            applyMaskCurrency('#txtExtendedPrice' + lineNo);
            applyMaskCurrency('#txtunitprice' + lineNo);
            applyMaskCurrency('#txttax' + lineNo);
            applyMaskCurrency('#txttotal' + lineNo);
            applyMaskNumber('#txtqty' + lineNo);
            applyTaxExcempt(lineNo)
            applyCommission(lineNo)

            var items = [];
            items.push("<option>Select</option>");
            $.each(lstContractDetailServiceTypeList, function () {
                items.push("<option value=" + this.ServiceTypeListid + ">" + this.name + "</option>");
            });
            $('#ContractDetailServiceTypeList' + lineNo).html(items.join(' '));


            ContractDetailServiceTypeListOnChange('ContractDetailServiceTypeList' + lineNo, lineNo);

            //$('#txtunitprice' + lineNo).keyup(function () {
            //    $('#hdfunitprice' + lineNo).val($('#txtunitprice' + lineNo).val());
            //});

            $('.unitPrice').keyup(function () {
                var fieldId = $(this).attr('id');
                fieldId = fieldId.replace('txtunitprice', '');
                //unitPrice
                $('#hdfunitprice' + fieldId).val($('#txtunitprice' + fieldId).val());
            });


            //$('#ddldetaillinenumber').html('');
            var lineitems = []; lineitems.push("<option value=''>Select</option>");
            for (var i = 1; i <= lineNo; i++) { lineitems.push("<option value=" + i + ">" + i + "</option>"); }

            if (flineNo == 1) {
                lineitems.push("<option value='-1'>All</option>");
            }
            //$('#ddldetaillinenumber').html(lineitems.join(' '));


            $('select[relddldetaillinenum="ddldetaillinenumber" ]').each(function (item) {

                $(this).html('');
                $(this).html(lineitems.join(' '));

            });


            $("#hdftotallineno").val(lineNo);
            OnlyNumber('#txtmarkup' + lineNo)
            OnlyNumber('#txtqtycc' + lineNo)
            onlyDecimal('#txtunitprice' + lineNo)


            if (cbFn != undefined) {
                cbFn();
            }
        }
        function DeleteEntry() {
            lineNo;
            if (lineNo > 1) {
                $("#tblcontractdetailrows tbody tr[relline='S" + lineNo + "']").remove();
                lineNo--;

                CalculateAmount(lineNo);

                $('.unitPrice').keyup(function () {
                    var fieldId = $(this).attr('id');
                    fieldId = fieldId.replace('txtunitprice', '');
                    //unitPrice
                    $('#hdfunitprice' + fieldId).val($('#txtunitprice' + fieldId).val());
                });


                $('#ddldetaillinenumber').html('');
                var lineitems = []; lineitems.push("<option value=''>Select</option>");
                for (var i = 1; i <= lineNo; i++) { lineitems.push("<option value=" + i + ">" + i + "</option>"); }
                //$('#ddldetaillinenumber').html(lineitems.join(' '));


                $('select[relddldetaillinenum="ddldetaillinenumber" ]').each(function (item) {

                    $(this).html('');
                    $(this).html(lineitems.join(' '));

                });
            }

        }
        function CalculateAmount(ln) {
            
            if ($("#hdfContractTaxRate").val() == undefined)
                $("#hdfContractTaxRate").val("0.0");
            var temptax = parseFloat($("#hdfContractTaxRate").val());

            var txtmarkup = parseFloat($('#txtmarkup' + ln).val() == '' ? 0 : $('#txtmarkup' + ln).val())

            var txtunitpriceT = parseFloat($('#hdfunitprice' + ln).inputmask('unmaskedvalue').replace('$', '').replace(' ', '').replace(',', '') == '' ? 0 : $('#hdfunitprice' + ln).inputmask('unmaskedvalue').replace('$', '').replace(' ', '').replace(',', ''));

            var txtqty = parseFloat($('#txtqty' + ln).val() == '' ? 0 : $('#txtqty' + ln).val())
            var txtunitprice = (txtunitpriceT + (txtunitpriceT * txtmarkup / 100));
            var txttax = $('#txttax' + ln)
            var txttotal = $('#txttotal' + ln)
            var txtExtetotal = 0;

            $('#txtunitprice' + ln).val(txtunitprice);
            txtExtetotal = (txtunitprice * txtqty);
            //txtExtetotal = ((txtunitprice + (txtunitprice * txtmarkup / 100)) * txtqty);
            $('#txtExtendedPrice' + ln).val(txtExtetotal);
            if ($('#chkTaxExcempt' + ln).is(":checked")) {
                txttax.val(0);
            }
            else {
                txttax.val((txtunitprice * txtqty) * temptax / 100)
            }

            txttotal.val((txtqty * txtunitprice) + parseFloat(txttax.inputmask('unmaskedvalue')))

            var toAmt = 0;
            var toTaxAmt = 0;
            for (var i = 1; i <= lineNo; i++) {

                toTaxAmt = toTaxAmt + parseFloat($('#txttax' + i).inputmask('unmaskedvalue') == '' ? 0 : $('#txttax' + i).inputmask('unmaskedvalue'));
                toAmt = toAmt + parseFloat($('#txttotal' + i).inputmask('unmaskedvalue') == '' ? 0 : $('#txttotal' + i).inputmask('unmaskedvalue'));
            }
            $('#txtsubtotal').val(toAmt - toTaxAmt)
            $('#txttaxamount').val(toTaxAmt)
            $('#txttotalamount').val(toAmt)

            applyMaskCurrency('#txtsubtotal');
            applyMaskCurrency('#txttaxamount');
            applyMaskCurrency('#txttotalamount');
        };

        function applyCommission(id) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetAdditionalBilling", "AccountReceivable", new { area = "Portal" })',
                data: {},
                success: function (data) {

                    $('#txtCommissionAmount' + id).hide();
                    $('#spnPer' + id).hide();
                    $('#rdoAdditional' + id).change(function () {
                        if ($(this).is(":checked")) {
                            $('#txtCommissionAmount' + id).show();
                            $('#txtCommissionAmount' + id).val(data);
                            $('#spnPer' + id).show();
                        }
                        else {
                            $('#txtCommissionAmount' + id).val("0");
                            $('#txtCommissionAmount' + id).hide();
                            $('#spnPer' + id).hide();
                        }
                    });
                    $('#rdoRegularBilling' + id).change(function () {
                        if ($(this).is(":checked")) {
                            $('#txtCommissionAmount' + id).val("0");
                            $('#txtCommissionAmount' + id).hide();
                            $('#spnPer' + id).hide();
                        }
                    });
                    $('#rdoExtraWork' + id).change(function () {
                        if ($(this).is(":checked")) {
                            $('#txtCommissionAmount' + id).val("0");
                            $('#txtCommissionAmount' + id).hide();
                            $('#spnPer' + id).hide();
                        }
                    });
                    $('#rdoclientsupplies' + id).change(function () {
                        if ($(this).is(":checked")) {
                            $('#txtCommissionAmount' + id).val("0");
                            $('#txtCommissionAmount' + id).hide();
                            $('#spnPer' + id).hide();
                            $('#ContractDetailServiceTypeList' + id).val(29);
                            $('#rdoclientsupplies' + id).prop('checked', true);
                            $('#rdoclientsupplies' + id).prop('disabled', false);


                            $('#rdoExtraWork' + id).prop('disabled', true);
                            $('#rdoAdditional' + id).prop('disabled', true);
                            $('#rdoRegularBilling' + id).prop('disabled', true);
                           

                            $('#txtCommissionAmount' + id).val("0");
                            $('#txtCommissionAmount' + id).hide();
                            $('#spnPer' + id).hide();

                            $('#txtmarkup' + id).prop("readonly", false);
                        } else {
                            if ($('#ContractDetailServiceTypeList' + id).val() != 29 && $('#rdoclientsupplies' + id).is(':Checked')) {
                                $('#rdoExtraWork' + id).prop('checked', true);
                            }
                            $('#rdoExtraWork' + id).prop('disabled', false);
                            $('#rdoAdditional' + id).prop('disabled', false);
                            $('#rdoRegularBilling' + id).prop('disabled', false);
                            $('#rdoclientsupplies' + id).prop('disabled', false);

                            $('#txtmarkup' + id).prop("readonly", true);
                            $('#txtmarkup' + id).val(0);

                        }

                    });


                }
            });
        }

        function ContractDetailServiceTypeListOnChange(id, line) {
            $('#' + id).change(function () {

                if ($('#' + id).val() == 5 || $('#' + id).val() == 29) {
                    $('#rdoclientsupplies' + line).prop('checked', true);
                    $('#rdoclientsupplies' + line).prop('disabled', false);

                    $('#rdoExtraWork' + line).prop('disabled', true);
                    $('#rdoAdditional' + line).prop('disabled', true);
                    $('#rdoRegularBilling' + line).prop('disabled', true);
                    

                    $('#txtCommissionAmount' + line).val("0");
                    $('#txtCommissionAmount' + line).hide();
                    $('#spnPer' + line).hide();

                    $('#txtmarkup' + line).prop("readonly", false);
                }
                else {
                    if ($('#' + id).val() != 29 && $('#rdoclientsupplies' + line).is(':Checked')) {
                        $('#rdoExtraWork' + line).prop('checked', true);
                    }

                    $('#rdoExtraWork' + line).prop('disabled', false);
                    $('#rdoAdditional' + line).prop('disabled', false);
                    $('#rdoRegularBilling' + line).prop('disabled', false);
                    $('#rdoclientsupplies' + line).prop('disabled', false);

                    $('#txtmarkup' + line).prop("readonly", true);
                    $('#txtmarkup' + line).val(0);
                }

                //if (this.value == 5) {
                //    $('#txtmarkup' + line).prop("readonly", false);
                //    $('#txtmarkup' + line).val(0);
                //}
                //else {
                //    $('#txtmarkup' + line).prop("readonly", true);
                //    $('#txtmarkup' + line).val(0);
                //}
                CalculateAmount(line);
            });
        }

        function applyTaxExcempt(id) {
            $('#chkTaxExcempt' + id).change(function () { CalculateAmount(id); });
        }
        function onlyDecimal(id) {
            $(id).keydown(function (event) {
                if (event.shiftKey == true) { event.preventDefault(); }
                if ((event.keyCode >= 48 && event.keyCode <= 57) || (event.keyCode >= 96 && event.keyCode <= 105) || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 37 || event.keyCode == 39 || event.keyCode == 46 || event.keyCode == 190 || event.keyCode == 110) { }
                else { event.preventDefault(); }
                if ($(this).val().toString().indexOf('.') !== -1 && (event.keyCode == 190 || event.keyCode == 110)) event.preventDefault();
            });
        }
        function OnlyNumber(id) {
            $(id).keydown(function (event) {
                if (event.shiftKey == true) { event.preventDefault(); }
                if ((event.keyCode >= 48 && event.keyCode <= 57) || (event.keyCode >= 96 && event.keyCode <= 105) || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 37 || event.keyCode == 39 || event.keyCode == 46) { }
                else { event.preventDefault(); }
            });
        }
        function applyMaskCurrency(id) {
            $(id).inputmask("currency", {
                alias: 'currency',
                prefix: '$ ',
                digits: 2,
                autoUnmask: true,
                removeMaskOnSubmit: true,
                unmaskAsNumber: true,
                allowPlus: false,
                allowMinus: false,
                autoGroup: true,
                groupSeparator: ",",
            });
        }
        //function applyMaskCurrency(id) {

        //    $(id).inputmask('decimal', {
        //        allowMinus: false,
        //        allowPlus: false,
        //        autoGroup: true,
        //        groupSeparator: ',',
        //        rightAlign: true,
        //        digits: 2,
        //        autoUnmask: true,
        //        removeMaskOnSubmit: true,
        //    });
        //    //$(id).inputmask("currency", {
        //    //    radixPoint: ".",
        //    //    groupSeparator: ",",
        //    //    digits: 2,
        //    //    autoGroup: true,
        //    //    prefix: '$ ', //Space after $, this will not truncate the first character.
        //    //    rightAlign: true,
        //    //    autoUnmask: true,
        //    //    removeMaskOnSubmit: true,
        //    //    oncleared: function () { self.Value(''); }
        //    //});
        //}

        function applyMaskNumber(id) {
            $(id).inputmask("numeric", {
                autoUnmask: true,
                removeMaskOnSubmit: true,
                oncleared: function () { self.Value(''); }
            });
        }

    </script>
    <script>
        $("#btnSave").click(function () {

            var isvalid = true;

            if ($('#BillSetting_EffectiveDate').val().trim() == '')
            {
                $('#BillSetting_EffectiveDate').css('border-color', 'red');
                if (isvalid == true) { isvalid = false; }
            }
            else {
                $('#BillSetting_EffectiveDate').css('border-color', '');
            }

            if ($("#BillSetting_PrintInvoice").is(':checked')) {
                if($("#BillSetting_EBill").is(':checked') == false && $("#BillSetting_PBill").is(':checked') == false)
                {
                    if (isvalid == true) { isvalid = false; }
                    $("#Errmsg").show();
                }
                else{
                    $("#Errmsg").hide();
                }
                //if (!$("#BillSetting_EBill").is(':checked')) {
                //    if (isvalid == true) { isvalid = false; }
                //    $('#lblEBill').css('color', 'red');
                //}
                //else
                //{
                //    $('#lblEBill').css('color', '');
                //}
                //if (!$("#BillSetting_PBill").is(':checked')) {
                //    if (isvalid == true) { isvalid = false; }
                //    $('#lblPBill').css('color', 'red');
                //}
                //else
                //{
                //    $('#lblPBill').css('color', '');
                //}
            }
            else
            {
                //$('#lblEBill').css('color', '');
                //$('#lblPBill').css('color', '');
                $("#Errmsg").hide();
            }

            if (isvalid == true) {

                var BillSettingsId = 0;
                var EBill = 0;
                var CreateInvoice = 0;
                var PrintPastDue = 0;
                var TaxExcempt = 0;
                var ConsolidatedInvoice = 0;
                var EffectiveDate= '';
                var PBill = 0;

                if ($("#BillSetting_BillSettingsId").val() != undefined && $("#BillSetting_BillSettingsId").val() != "") {
                    BillSettingsId = $("#BillSetting_BillSettingsId").val();
                }
                if ($("#BillSetting_EBill").is(':checked')) {
                    EBill = 1;
                }
                if ($("#BillSetting_PBill").is(':checked')) {
                    PBill = 1;
                }
                if ($("#BillSetting_CreateInvoice").is(':checked')) {
                    CreateInvoice = 1;
                }
                if ($("#BillSetting_PrintPastDue").is(':checked')) {
                    PrintPastDue = 1;
                }
                if ($("#BillSetting_TaxExcempt").is(':checked')) {
                    TaxExcempt = 1;
                }
                if ($("#BillSetting_ConsolidatedInvoice").is(':checked')) {
                    ConsolidatedInvoice = 1;
                }
                if($("#BillSetting_EffectiveDate").val() != ''&& $("#BillSetting_EffectiveDate").val() != null)
                {
                    EffectiveDate = $("#BillSetting_EffectiveDate").val();
                }

                var CustBillSettings = { CustomerId: $("#CustomerViewModel_CustomerId").val(), BillSettingsId: BillSettingsId, ArStatus: $(".ddlArStatus").val(), EffectiveDate: EffectiveDate, InvoiceDateListId: $(".ddlInvoiceDate").val(), InvoiceTermListId: $(".ddlTermDate").val(), EBill: EBill,  PrintPastDue: PrintPastDue, TaxExcempt: TaxExcempt, ConsolidatedInvoice: ConsolidatedInvoice, Note: $("#BillSetting_Notes").val(), EBillEmails: $("#hdfEBill_Emails").val(), PBill: PBill, CreateInvoice : CreateInvoice };
                $(".SaveBtn").hide();
                $.ajax({
                    url: '@Url.Action("SaveBillSettings", "Customer")',
                    dataType: "json",
                    data: CustBillSettings,
                    traditional: true,
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        if (data != null) {
                            $("#BillSetting_BillSettingsId").val(data.BillSettingsId);
                        }
                        $(".SaveBtn").hide();
                        $(".CancelBtn").hide();
                        $("#EditBSetting").show();
                        $(".edit").attr("disabled", "disabled");
                        $(".edit").attr("readonly", "readonly");
                    },
                    error: function () { }
                });
                //window.location.href = window.location.href;
            }

        });

        $('#btnCancel').click(function () {

            $(".edit").attr("disabled", "disabled");
            $(".edit").attr("readonly", "readonly");
            $("#btnSave").prop("disabled", "false");
            $("#btnSave").prop("readonly", "true");

            $("#btnCancel").prop("disabled", "false");
            $("#btnCancel").prop("readonly", "true");

            $("#EditBSetting").show();
            $("#btnSave").hide();
            $("#btnCancel").hide();

            //$('#modal_Billingsetting').hide();
            //$("#modal_Billingsetting").close();
            //$('.modal-backdrop').remove();
            // $('#modal_Billingsetting').dismiss('Cancel');

        });

        $('#btnContactSave1').click(function () {

            var isvalid = true;

            if ($('#CustomerViewModel_Name').val().trim() == '') { $('#CustomerViewModel_Name').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#CustomerViewModel_Name').css('border-color', ''); }
            //if ($('#MainContact_FirstName').val().trim() == '') { $('#MainContact_FirstName').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#MainContact_FirstName').css('border-color', ''); }
            if ($('#MainAddress_Address1').val().trim() == '') { $('#MainAddress_Address1').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#MainAddress_Address1').css('border-color', ''); }
            if ($('#MainAddress_City').val().trim() == '') { $('#MainAddress_City').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#MainAddress_City').css('border-color', ''); }
            if ($('#MainStatesList').val().trim() == '') { $('#MainStatesList').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#MainStatesList').css('border-color', ''); }
            if ($('#MainAddress_PostalCode').val().trim() == '' || $('#MainAddress_PostalCode').val().length != 5) { $('#MainAddress_PostalCode').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#MainAddress_PostalCode').css('border-color', ''); }

            if ($('#MainPhone_Phone1').val().trim() == '' || $('#MainPhone_Phone1').val() == NaN || parseInt($("#MainPhone_Phone1").val().replace(/[^0-9\.]/g, ''), 10).toString().length < 10) {
                $('#MainPhone_Phone1').css('border-color', 'red');
                if (isvalid == true) {
                    isvalid = false;
                }
            }
            else {
                $('#MainPhone_Phone1').css('border-color', '');
            }

            if (isvalid == true) {

                var AddressId = 0;
                var PhoneId = 0;

                if ($("#MainAddress_AddressId").val() != undefined && $("#MainAddress_AddressId").val() != "") {
                    AddressId = $("#MainAddress_AddressId").val();
                }
                if ($("#MainPhone_PhoneId").val() != undefined && $("#MainPhone_PhoneId").val() != "") {
                    PhoneId = $("#MainPhone_PhoneId").val();
                }

                var EditCustM1data = { CustomerId: $("#CustomerViewModel_CustomerId").val(), AddressId: AddressId, Address1: $("#MainAddress_Address1").val(), Address2: $("#MainAddress_Address2").val(), City: $("#MainAddress_City").val(), StateId: $("#MainStatesList").val(), PostalCode: $("#MainAddress_PostalCode").val(), PhoneId: PhoneId, Phone1: $("#MainPhone_Phone1").val(), Fax: $("#MainPhone_Fax").val(),CustName:$('#CustomerViewModel_Name').val() };

                $.ajax({
                    url: '@Url.Action("EditCustomerPopupMainContactTab1", "Customer")',
                    dataType: "json",
                    data: EditCustM1data,
                    traditional: true,
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        if (data != null) {
                            $("#MainAddress_AddressId").val(data.AddressId);
                            $("#MainPhone_PhoneId").val(data.PhoneId)
                        }
                        $(".SaveBtn").hide();
                        $(".CancelBtn").hide();
                        $("#EditContact1").show();
                        $(".editmain1").attr("disabled", "disabled");
                        $(".editmain1").attr("readonly", "readonly");
                    },
                    error: function () { }
                });
                //window.location.href = window.location.href;
            }
        });

        $('#btnContactCancel1').click(function () {
            $(".editmain1").attr("disabled", "disabled");
            $(".editmain1").attr("readonly", "readonly");

            $("#btnContactSave1").prop("disabled", "false");
            $("#btnContactSave1").prop("readonly", "true");

            $("#btnContactCancel1").prop("disabled", "false");
            $("#btnContactCancel1").prop("readonly", "true");

            $(".EditBtn").show();
            $(".SaveBtn").hide();
            $(".CancelBtn").hide();
        });

        $('#btnContactSave').click(function () {

            var isvalid = true;

            if ($('#MainContact_Name').val().trim() == '') { $('#MainContact_Name').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#MainContact_Name').css('border-color', ''); }
            if ($('#MainPhone2_Phone1').val().trim() == '' || $('#MainPhone2_Phone1').val() == NaN || parseInt($("#MainPhone2_Phone1").val().replace(/[^0-9\.]/g, ''), 10).toString().length < 10) {
                $('#MainPhone2_Phone1').css('border-color', 'red'); if (isvalid == true) { isvalid = false; }
            } else { $('#MainPhone2_Phone1').css('border-color', ''); }

            if ($('#MainEmail_EmailAddress').val().trim() != '') {
                if (!ValidateEmail($('#MainEmail_EmailAddress').val())) {
                    if (isvalid == true) { isvalid = false; }
                    $('#MainEmail_EmailAddress').css('border-color', 'red');
                } else { $('#MainEmail_EmailAddress').css('border-color', ''); }
            }
            if ($('#MainPhone2_Cell').val().trim() != '') {
                if (parseInt($("#MainPhone2_Cell").val().replace(/[^0-9\.]/g, ''), 10).toString().length < 10) {
                    $('#MainPhone2_Cell').css('border-color', 'red'); if (isvalid == true) { isvalid = false; }
                    $('#MainPhone2_Cell').css('border-color', 'red');
                } else { $('#MainPhone2_Cell').css('border-color', ''); }
            }


            if (isvalid == true) {

                var ContactId = 0;
                var PhoneId = 0;
                var EmailId = 0;

                if ($("#MainContact_ContactId").val() != undefined && $("#MainContact_ContactId").val() != "") {
                    ContactId = $("#MainContact_ContactId").val();
                }
                if ($("#MainPhone2_PhoneId").val() != undefined && $("#MainPhone2_PhoneId").val() != "") {
                    PhoneId = $("#MainPhone2_PhoneId").val();
                }
                if ($("#MainEmail_EmailId").val() != undefined && $("#MainEmail_EmailId").val() != "") {
                    EmailId = $("#MainEmail_EmailId").val();
                }

                var EditCustM2data = { CustomerId: $("#CustomerViewModel_CustomerId").val(), ContactId: ContactId, Name: $("#MainContact_Name").val(), Title: $("#MainContact_Title").val(), PhoneId: PhoneId, Phone1: $("#MainPhone2_Phone1").val(), PhoneExt: $("#MainPhone2_PhoneExt").val(), Cell: $("#MainPhone2_Cell").val(), Fax: $("#MainPhone2_Fax").val(), EmailId: EmailId, EmailAddress: $("#MainEmail_EmailAddress").val() };

                $.ajax({
                    url: '@Url.Action("EditCustomerPopupMainContactTab2", "Customer")',
                    dataType: "json",
                    data: EditCustM2data,
                    traditional: true,
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        if (data != null) {
                            $("#MainContact_ContactId").val(data.ContactId);
                            $("#MainEmail_EmailId").val(data.EmailId);
                            $("#MainPhone2_PhoneId").val(data.PhoneId)

                        }
                        $(".SaveBtn").hide();
                        $(".CancelBtn").hide();
                        $("#EditContact").show();
                        $(".editmain").attr("disabled", "disabled");
                        $(".editmain").attr("readonly", "readonly");
                    },
                    error: function () { }
                });
                //window.location.href = window.location.href;
            }


        });
        $('#btnContactCancel').click(function () {
            $(".editmain").attr("disabled", "disabled");
            $(".editmain").attr("readonly", "readonly");

            $("#btnContactSave").prop("disabled", "false");
            $("#btnContactSave").prop("readonly", "true");

            $("#btnContactCancel").prop("disabled", "false");
            $("#btnContactCancel").prop("readonly", "true");


            $(".EditBtn").show();
            $(".SaveBtn").hide();
            $(".CancelBtn").hide();
        });

        $('#btnBContactSave1').click(function () {

            var isvalid = true;
            if ($('#BillingContact_Name').val().trim() == '') { $('#BillingContact_Name').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#BillingContact_Name').css('border-color', ''); }
            if ($('#BillingAddress_Address1').val().trim() == '') { $('#BillingAddress_Address1').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#BillingAddress_Address1').css('border-color', ''); }
            if ($('#BillingAddress_City').val().trim() == '') { $('#BillingAddress_City').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#BillingAddress_City').css('border-color', ''); }
            if ($('#BillingStatesList').val().trim() == '') { $('#BillingStatesList').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#BillingStatesList').css('border-color', ''); }
            if ($('#BillingAddress_PostalCode').val().trim() == '' || $('#BillingAddress_PostalCode').val().length != 5) { $('#BillingAddress_PostalCode').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#BillingAddress_PostalCode').css('border-color', ''); }

            if (isvalid == true) {

                var ContactId = 0;
                var BAddressId = 0;

                if ($("#BillingContact_ContactId").val() != undefined && $("#BillingContact_ContactId").val() != "") {
                    ContactId = $("#BillingContact_ContactId").val();
                }
                if ($("#BillingAddress_AddressId").val() != undefined && $("#BillingAddress_AddressId").val() != "") {
                    BAddressId = $("#BillingAddress_AddressId").val();
                }

                var EditCustB1data = { CustomerId: $("#CustomerViewModel_CustomerId").val(), ContactId: ContactId, Name: $("#BillingContact_Name").val(), Attention: $("#BillingContact_Attention").val(), AddressId: BAddressId, Address1: $("#BillingAddress_Address1").val(), Address2: $("#BillingAddress_Address2").val(), City: $("#BillingAddress_City").val(), StateId: $("#BillingStatesList").val(), PostalCode: $("#BillingAddress_PostalCode").val() };

                $.ajax({
                    url: '@Url.Action("EditCustomerPopupBillingTab1", "Customer")',
                    dataType: "json",
                    data: EditCustB1data,
                    traditional: true,
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        if (data != null) {
                            $("#BillingContact_ContactId").val(data.ContactId);
                            $("#BillingAddress_AddressId").val(data.AddressId);
                        }
                        $(".SaveBtn").hide();
                        $(".CancelBtn").hide();
                        $("#EditBContact1").show();
                        $(".editbill1").attr("disabled", "disabled");
                        $(".editbill1").attr("readonly", "readonly");
                    },
                    error: function () { }
                });
                //window.location.href = window.location.href;
            }
        });
        $('#btnBContactCancel1').click(function () {
            $(".editbill1").attr("disabled", "disabled");
            $(".editbill1").attr("readonly", "readonly");

            $("#btnBContactSave1").prop("disabled", "false");
            $("#btnBContactSave1").prop("readonly", "true");

            $("#btnBContactCancel1").prop("disabled", "false");
            $("#btnBContactCancel1").prop("readonly", "true");

            $(".EditBtn").show();
            $(".SaveBtn").hide();
            $(".CancelBtn").hide();

        });

        $('#btnBContactSave').click(function () {

            //var data = $("form").serialize();
            //alert(data);

            var isvalid = true;

            if ($('#BillingContactInformation2_Name').val().trim() == '') { $('#BillingContactInformation2_Name').css('border-color', 'red'); if (isvalid == true) { isvalid = false; } } else { $('#BillingContactInformation2_Name').css('border-color', ''); }
            if ($('#BillingPhone_Phone1').val().trim() == '' || $('#BillingPhone_Phone1').val() == NaN || parseInt($("#BillingPhone_Phone1").val().replace(/[^0-9\.]/g, ''), 10).toString().length < 10) {
                $('#BillingPhone_Phone1').css('border-color', 'red');
                if (isvalid == true) { isvalid = false; }
            }
            else {
                $('#BillingPhone_Phone1').css('border-color', '');
            }
            if ($('#BillingEmail_EmailAddress').val().trim() != '') {
                if (!ValidateEmail($('#BillingEmail_EmailAddress').val())) {
                    if (isvalid == true) { isvalid = false; }
                    $('#BillingEmail_EmailAddress').css('border-color', 'red');
                } else { $('#BillingEmail_EmailAddress').css('border-color', ''); }
            }
            if ($('#BillingPhone_Cell').val().trim() != '') {
                if (parseInt($("#BillingPhone_Cell").val().replace(/[^0-9\.]/g, ''), 10).toString().length < 10) {
                    $('#BillingPhone_Cell').css('border-color', 'red'); if (isvalid == true) { isvalid = false; }
                    $('#BillingPhone_Cell').css('border-color', 'red');
                } else { $('#BillingPhone_Cell').css('border-color', ''); }
            }

            if (isvalid == true) {

                var ContactId = 0;
                var BPhoneId = 0;
                var BEmailId = 0;

                if ($("#BillingContactInformation2_ContactId").val() != undefined && $("#BillingContactInformation2_ContactId").val() != "") {
                    ContactId = $("#BillingContactInformation2_ContactId").val();
                }
                if ($("#BillingPhone_PhoneId").val() != undefined && $("#BillingPhone_PhoneId").val() != "") {
                    BPhoneId = $("#BillingPhone_PhoneId").val();
                }
                if ($("#BillingEmail_EmailId").val() != undefined && $("#BillingEmail_EmailId").val() != "") {
                    BEmailId = $("#BillingEmail_EmailId").val();
                }

                var EditCustB2data = { CustomerId: $("#CustomerViewModel_CustomerId").val(), ContactId: ContactId, Name: $("#BillingContactInformation2_Name").val(), Title: $("#BillingContactInformation2_Title").val(), PhoneId: BPhoneId, Phone1: $("#BillingPhone_Phone1").val(), PhoneExt: $("#BillingPhone_PhoneExt").val(), Cell: $("#BillingPhone_Cell").val(), Fax: $("#BillingPhone_Fax").val(), EmailId: BEmailId, EmailAddress: $("#BillingEmail_EmailAddress").val() };

                $.ajax({
                    url: '@Url.Action("EditCustomerPopupBillingTab2", "Customer")',
                    dataType: "json",
                    data: EditCustB2data,
                    traditional: true,
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        if (data != null) {
                            $("#BillingContactInformation2_ContactId").val(data.ContactId);
                            $("#BillingPhone_PhoneId").val(data.PhoneId);
                            $("#BillingEmail_EmailId").val(data.EmailId);
                        }
                        $(".SaveBtn").hide();
                        $(".CancelBtn").hide();
                        $("#EditBContact").show();
                        $(".editbill").attr("disabled", "disabled");
                        $(".editbill").attr("readonly", "readonly");
                    },
                    error: function () { }
                });
                //window.location.href = window.location.href;

            }
        });
        $('#btnBContactCancel').click(function () {
            $(".editbill").attr("disabled", "disabled");
            $(".editbill").attr("readonly", "readonly");

            $("#btnBContactSave").prop("disabled", "false");
            $("#btnBContactSave").prop("readonly", "true");

            $("#btnBContactCancel").prop("disabled", "false");
            $("#btnBContactCancel").prop("readonly", "true");

            $("#EditBContact").show();
            $("#btnBContactSave").hide();
            $("#btnBContactCancel").hide();
        });


        $("#btnEditDistribution").click(function () {

            $(".editvalue").addClass("editvaluetext");
            $(".editvalue").removeClass("editmode");
            //$("#btnSaveDistribution").show();
            //$("#btnEditDistribution").hide();
            $(".editvalue").removeAttr("disabled").removeAttr("readonly");
            $(".editcheck").removeAttr("disabled").removeAttr("readonly");
        });

        $("#btnSaveDistribution").click(function () {

            if (tempFRowLineNo > 0) {
                alert('save')
            }
            $(".editvalue").removeClass("editvaluetext");
            $(".editvalue").addClass("editmode");
            //$("#btnSaveDistribution").hide();
            //$("#btnEditDistribution").show();
            $(".editvalue").attr("readonly", "readonly");
            $(".editcheck").attr("disabled", "disabled");
            $(".editcheck").attr("readonly", "readonly");
        });

        function onlyDecimal(id) {
            $(id).keydown(function (event) {
                if (event.shiftKey == true) { event.preventDefault(); }
                if ((event.keyCode >= 48 && event.keyCode <= 57) || (event.keyCode >= 96 && event.keyCode <= 105) || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 37 || event.keyCode == 39 || event.keyCode == 46 || event.keyCode == 190 || event.keyCode == 110) { }
                else { event.preventDefault(); }
                if ($(this).val().toString().indexOf('.') !== -1 && (event.keyCode == 190 || event.keyCode == 110)) event.preventDefault();
            });
        }
        function OnlyNumber(id) {
            $(id).keydown(function (event) {
                if (event.shiftKey == true) { event.preventDefault(); }
                if ((event.keyCode >= 48 && event.keyCode <= 57) || (event.keyCode >= 96 && event.keyCode <= 105) || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 37 || event.keyCode == 39 || event.keyCode == 46) { }
                else { event.preventDefault(); }
            });
        }

        function OnClickContractDetailCancel() {
            $('#modal_CustomerContractPopup').modal("hide");
        }
        function ValidateEmail(email) {
            // Validate email format
            var expr = /^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
            return expr.test(email);
        };
    </script>
    <script>


        function checkExistManintenance() {
            var retV = true;
            if ($('#hdfCustomerMaintenanceId').val() != 0)
            {
                retV = false;
                $("#spnExistsMaintenancePromptMsg").html('This customer currently pending approve for  "' + $('#hdfCustomerMaintenanceTypeName').val() + '", Please check with system admin.');
                $("#modal_ExistsMaintenancePrompt").modal({ backdrop: 'static' });
                //swal('This customer currently pending approve for  "' + $('#hdfCustomerMaintenanceTypeName').val() + '", Please check with system admin')
                //swal({ title: "Hooray", text: "You did it!", type: "success" });
            }

            return retV;
        }

        function hasExistManintenance(cid, callType) {
            if (callType == 'transfer') {
                $.blockUI()
                $('#btncust_trans').prop('disabled', true);
            } else if (callType == 'increase') {
                 $.blockUI()
                $('#btncust_increase').prop('disabled', true);
            } else if (callType == 'cancel') {
                $.blockUI()
                $('#btncust_cancel').prop('disabled', true);
            }
            

            var sURL = '@Url.Action("hasExistManintenance", "customer", new { area = "Portal" })?cid=' + cid;
            var retV = true;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {

                    //$("#spnExistsMaintenancePromptMsg").html('This customer currently pending approve for  "' + data.MaintenanceTypeName + '", Please check with system admin.');
                    //$("#modal_ExistsMaintenancePrompt").modal({ backdrop: 'static' });
                    if (data.MaintenanceTypeName != "") {
                        alert('This customer currently pending approve for  "' + data.MaintenanceTypeName + '", Please check with system admin.');
                        retV = false;
                        $('#btncust_trans').prop('disabled', false);
                        $('#btncust_increase').prop('disabled', false);
                        $('#btncust_cancel').prop('disabled', false);
                        $.unblockUI()

                    } else {
                        if (callType == "cancel") {
                            showCustomerMaintenance(cid)
                        } else if (callType == "transfer") {                            
                            showTransfer(cid)
                            $.unblockUI()
                        } else if (callType == "increase") {
                            showIncreaseDescrease(cid)
                        }
                    }

                },
                error: function (err) {
                    console.log(err);
                }
            });
            return retV;
        }

        function showCustomerMaintenance(id) {



            var sURL = '@Url.Action("CustomerMaintenancePartial", "customer", new { area = "Portal" })?id=' + id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#form_customermaintenancem').html(data);

                    $('#form_customermaintenance').validate({ // initialize the plugin
                        // your rules and options,
                        errorPlacement: function () {
                            return false;  // suppresses error message text
                        }
                    });                 
                    getCancellationInvoiceData();
                    $('#btncust_trans').prop('disabled', false);
                    $("#modal_customermaintenanceDetail").modal({ backdrop: 'static' });
                    $('#btncust_cancel').prop('disabled', false);
                },
                error: function (err) {
                    console.log(err);
                }
            });
        }


        function bindCustomerMaintenanceLoad_popup(id) {
            var value = id;
            if (value == 1 || value == 4 || value == 0) {
                $("#manediv").hide();

                $("#ResumeDate").prop('required', false);
                $("#LastServiceDate").prop('required', false);
                $("#ddlReason").prop('required', false);
                $("#StatusNotes").prop('required', false);
            }
            else if (value == 3) {
                $("#manediv").show();
                $("#divtable").hide();
                $('#divlastservicedate').hide();
                $("#divresumedate").show();

                $("#ResumeDate").prop('required', true);
                $("#LastServiceDate").prop('required', false);
                $("#ddlReason").prop('required', true);
                $("#StatusNotes").prop('required', true);
            }
            else if (value == 2) {
                $("#manediv").show();
                $("#divresumedate").hide();
                $('#divlastservicedate').show();
                $("#divtable").show();

                $("#ResumeDate").prop('required', false);
                $("#LastServiceDate").prop('required', true);
                $("#ddlReason").prop('required', true);
                $("#StatusNotes").prop('required', true);
            }
        }


        function saveCustomerMaintenance() {
            var isValid = $('#form_customermaintenance').valid();
            if (!isValid || parseInt($('#hdfCustomerId').val()) == 0) {
                e.preventDefault(); //prevent the default action
            }
            else {
                $.ajax({
                    url: '@Url.Action("CustomerMaintenancePartial", "Customer",new { area = "Portal" })',
                    type: "POST",
                    data: $('#form_customermaintenance').serialize(),
                    success: function (res) {
                        $('#modal_customermaintenanceDetail').modal('hide');
                        $('#modal_applycreditform').modal('hide');

                        if($("#ddlStatus").val()==1)
                        {
                            location.reload();
                        }
                    },
                    error: function () { }
                });
            }
        }

        function continueCustomerMaintenanceToCancellationCredits() {
            var isValid = $('#form_customermaintenance').valid();
            if (!isValid || parseInt($('#hdfCustomerId').val()) == 0) {
                //e.preventDefault(); //prevent the default action
            }
            else {

                $.ajax({
                    url: '@Url.Action("CustomerMaintenancePartialJson", "Customer",new { area = "Portal" })',
                    type: "POST",
                    data: $('#form_customermaintenance').serialize(),
                    success: function (res) {
                        var MaintenancetempId = res;
                        var info = getNextCancellationInvoiceInfo();
                        if (info != null)
                            openApplyCreditFormForCancellation(info, MaintenancetempId);
                    },
                    error: function () { }
                });
            }
        }

        function continueCancellationProcess() {

            $('#modal_applycreditform').modal('hide');
            cancellationInvoiceData.shift();

            var info = getNextCancellationInvoiceInfo();
            if (info != null)
                openApplyCreditFormForCancellation(info, $('#isForCancellationMaintenancetempId').val());
            else {
                //saveCustomerMaintenance();
                $('#modal_customermaintenanceDetail').modal('hide');
                $('#modal_applycreditform').modal('hide');
            }
        }

        var cancellationInvoiceData = null;

        function getCancellationInvoiceData() {
            var date = $('#LastServiceDate').val();
            var sURL = '@Url.Action("GetCustomerMaintenanceCancellationInvoiceDetails", "customer", new { area = "Portal" })?customerId=' + parseInt($('#hdfCustomerId').val()) + '&date=' + date;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    cancellationInvoiceData = data;
                    toggleSubmitButton();
                },
                error: function () {
                }
            });
        }

        function getNextCancellationInvoiceInfo() {
            if (cancellationInvoiceData == null || cancellationInvoiceData.length == 0) return null;
            return cancellationInvoiceData[0];
        }

        function ValidateEmail(email) {
            var expr = /^([\w-\.]+@@([\w-]+\.)+[\w-]{2,4})?$/;
            return expr.test(email);
        };
        $('#BillSetting_EBill').click(function () {
            var checkvalue = $('#BillSetting_EBill').prop('checked')
            if (checkvalue) {
                $('#btnshowbillingcontactemail').show();
            }
            else {
                $('#btnshowbillingcontactemail').hide();
            }

        });
        $('#btnshowbillingcontactemail').click(function () {

            bindEBillEmails();
            $('#divEBill_Emails').html('');
            $('#txtemailaddress_ebill').val('')
            var strEmail = '';
            $.each(ebill_email, function (index, value) {
                $('#divEBill_Emails').append('<span style="padding:3px;float:left;width:100%">' + value + '</span><br />');
                strEmail += (strEmail != "" ? "," : "") + value;
            });
            $('#mdlAppendemail').modal({ backdrop: 'static' });

        });

        $('#btnaddemailaddress_ebill').click(function () {

            if (!ValidateEmail($("#txtemailaddress_ebill").val())) {
                alert("Invalid email address.");
            }
            else {
                var strEmail = $('#hdfEBill_Emails').val();
                ebill_email.push($('#txtemailaddress_ebill').val());
                $('#divEBill_Emails').append('<span style="padding:3px;float:left;width:100%">' + $('#txtemailaddress_ebill').val() + '</span><br />');
                strEmail += (strEmail != "" ? "," : "") + $('#txtemailaddress_ebill').val();
                $('#hdfEBill_Emails').val(strEmail);
                $('#txtemailaddress_ebill').val('')
            }
        });


        function bindEBillEmails() {
            ebill_email = [];
            var strEma = $('#hdfEBill_Emails').val();
            $('#divEBill_Emails').html('');
            if (strEma.length > 0) {
                $.each(strEma.split(','), function (index, value) {
                    console.log(value);
                    ebill_email.push(value);
                });
            }
            else {
                if ($('#BillingEmail_EmailAddress').val() != '') {
                    $('#divEBill_Emails').append('<span style="padding:3px;float:left;width:100%">' + $('#BillingEmail_EmailAddress').val() + '</span><br />');
                    ebill_email.push($('#txtemailaddress_ebill').val());
                }
            }
        }
        function showAccountHistoryPopup(Id)
        {
            var sURL = '@Url.Action("CustomerAccountHistoryPopup", "Customer", new { area = "Portal" })?id=' + Id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#Render_CustomerAccountHistoryPopup').html(data);
                    $("#modal_CustomerAccountHistoryPopup").modal({ backdrop: 'static' });
                },
                error: function () {
                    console.log(err);err
                }
            });
        }
        function showIncreaseDecreasePopup(Id)
        {
            var sURL = '@Url.Action("IncreaseDecreaseReportPopup", "Customer", new { area = "Portal" })?id=' + Id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#Render_IncreaseDecreaseReportPopup').html(data);
                    $("#modal_IncreaseDecreaseReportPopup").modal({ backdrop: 'static' });
                },
                error: function (err) {
                    console.log(err);
                }
            });
        }
        function getAccountHistoryDetails(Id)
        {
            var numMonths = $("#txtAccountHistoryMonths").val();

            var sURL = '@Url.Action("CustomerAccountHistoryPopupDetails", "Customer", new { area = "Portal" })?customerId=' + Id + '&numberOfMonths=' + numMonths;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#divAccountHistoryDetails').html(data);
                },
                error: function (err) {
                    console.log(err);
                }
            });
        }
        function btnInvoiceWinClose() {
            $("#modal_invoicedetail").modal('hide');
        }
        function btnInvoicePopupClose() {
            $("#modal_invoicedetail").modal('hide');
        }
        function btnInvoiceBillClose() {
            $("#form_FranchiseeBillingDetail").modal('hide');
        }
        function getAccountHistoryExportPdf(Id)
        {
            var numMonths = $("#txtAccountHistoryMonths").val();
            window.location.href = '@Url.Action("CustomerAccountHistoryExportPdf", "Customer", new { area = "Portal" })?customerId=' + Id + '&numberOfMonths=' + numMonths;
        }
        function getAccountHistoryPrints(Id)
        {
            var numMonths = $("#txtAccountHistoryMonths").val();
            //window.location.href = '@Url.Action("CustomerAccountHistoryDetailsPrint", "Customer", new { area = "Portal" })?customerId=' + Id + '&numberOfMonths=' + numMonths;

            if (Id != "") {
                var sURL = '@Url.Action("CustomerAccountHistoryDetailsPrint", "Customer", new { area = "Portal" })?customerId=' + Id + '&numberOfMonths=' + numMonths;
                $.ajax({
                    type: "GET",
                    url: sURL,
                    contentType: "application/json; charset=utf-8",
                    datatype: "json",
                    success: function (data) {
                        var tUrl = data;
                        printJS({ printable: document.location.origin + tUrl, type: 'pdf', showModal: false });
                    },
                    error: function (err) {
                        console.log(err);
                    }
                });
            }
            else {
                alert('Please select payment no to print.')
            }
        }
    </script>
    <script>
        $('#CCForm').card({
            // a selector or DOM element for the container
            // where you want the card to appear
            container: '.card-wrapper', // *required*

            // all of the other options from above
        });
        $(function () {
            $("#myModal").draggable();
        });



        function OpenCustomerUploadDocumentPopup(Id) {

            var sURL = '@Url.Action("CustomerUploadDocumentPopup", "Customer", new { area = "Portal" })?id=' + Id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#RenderCustomerUploadDocumentPopup').html(data);
                    $("#ModelCustomerUploadDocumentPopup").modal({ backdrop: 'static' });
                },
                error: function (err) {
                    console.log(err);
                }
            });
        }

        function invdetail_sendemail() {

            var txFromEmail = $("#invdetail_txtfromemail").val();
            var txToEmail = $("#invdetail_txttoemail").val();
            var txCCEmail = $("#invdetail_txtccemail").val();
            var txSubjectEmail = $("#invdetail_txtsubjectemail").val();
            var txBodyEmail = $("#invdetail_txtemailbodyemail").val();

            var sURL = '@Url.Action("CustomerStatementSendEmailPopup", "Customer", new { area = "Portal" })?FromEmail=' + txFromEmail+'&ToEmail=' + txToEmail+'&CCEmail=' + txCCEmail+'&SubjectEmail=' + txSubjectEmail+'&BodyEmail=' + txBodyEmail +'&customerId=@(Html.DisplayFor(one => one.CustomerDetail.CustomerId))&start=' + $('#spnStartDateStatements').text() + '&end=' + $('#spnEndtDateStatements').text();
            $.ajax({
                type: "GET",
                url: encodeURI(sURL),
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {

                    $("#modal_invoicedetailEmail").modal('hide');
                },
                error: function (err) {
                    console.log(err);
                }
            });

            //$("#invdetail_txtfromemail").val('');
            //$("#invdetail_txttoemail").val('');
            $("#invdetail_txtccemail").val('');
            //$("#invdetail_txtsubjectemail").val('');
            $("#invdetail_txtemailbodyemail").val('');
            $("#modal_invoicedetailEmail").modal('hide');
        }
        function DetailInvoiceListSendEmail(Id) {
            var sURL = '@Url.Action("GetEmailsforSendEmail", "AccountReceivable", new { area = "Portal" })?CustomerId=' + Id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    var obj = $.parseJSON(data);
                    
                    $("#invdetail_txtfromemail").val(obj.FromEmail);
                    $("#invdetail_txtccemail").val(obj.CCEmail);
                    $("#modal_invoicedetailEmail").modal('show');
                },
                error: function (err) {
                    console.log(err);
                }
            });
        }
        function closeFranchiseeCallPopup() {
            $("#modal_FranchiseeCall").modal("hide");
            //$('.modal-backdrop').remove();
        }
    </script>
}

















