@model JKViewModels.Customer.FullCustomerViewModel
@{
    ViewBag.Title = "MaintenanceStepFour";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@section styles{
    <link href="@Url.Content("~/Content/admin/assets/global/plugins/datatables/datatables.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/admin/assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.css")" rel="stylesheet" type="text/css" />


}




<div class="col-md-12 page-custom-header"><h5>Customer Maintenance</h5></div>

<div class="custom-form portlet light" id="">
    <div class="portlet-body">
        @using (Html.BeginForm("MaintenanceStepFour", "Customer", FormMethod.Post, new { @id = "form_wizard_1", @role = "form", @class = "form form-horizontal" }))
        {

            @Html.HiddenFor(one => one.ButtonType)
            @Html.HiddenFor(one => one.CustomerViewModel.CustomerId)
            @Html.HiddenFor(one => one.CustomerViewModel.CreatedBy)
            @Html.HiddenFor(one => one.CustomerViewModel.CreatedDate)
            @Html.HiddenFor(one => one.CustomerViewModel.CustomerNo)
            @Html.HiddenFor(one => one.MainContact.ContactId)
            @Html.HiddenFor(one => one.MainContact.IsActive)
            @Html.HiddenFor(one => one.MainContact.CreatedBy)
            @Html.HiddenFor(one => one.MainContact.CreatedDate)
            @Html.HiddenFor(one => one.MainAddress.AddressId)
            @Html.HiddenFor(one => one.MainAddress.IsActive)
            @Html.HiddenFor(one => one.MainAddress.CreatedBy)
            @Html.HiddenFor(one => one.MainAddress.CreatedDate)
            @Html.HiddenFor(one => one.MainEmail.EmailId)
            @Html.HiddenFor(one => one.MainEmail.IsActive)
            @Html.HiddenFor(one => one.MainEmail.CreatedBy)
            @Html.HiddenFor(one => one.MainEmail.CreatedDate)
            @Html.HiddenFor(one => one.MainPhone.PhoneId)
            @Html.HiddenFor(one => one.MainPhone.IsActive)
            @Html.HiddenFor(one => one.MainPhone.CreatedBy)
            @Html.HiddenFor(one => one.MainPhone.CreatedDate)

            @Html.HiddenFor(one => one.BillingContact.ContactId)
            @Html.HiddenFor(one => one.BillingContact.IsActive)
            @Html.HiddenFor(one => one.BillingContact.CreatedBy)
            @Html.HiddenFor(one => one.BillingContact.CreatedDate)
            @Html.HiddenFor(one => one.BillingAddress.AddressId)
            @Html.HiddenFor(one => one.BillingAddress.IsActive)
            @Html.HiddenFor(one => one.BillingAddress.CreatedBy)
            @Html.HiddenFor(one => one.BillingAddress.CreatedDate)

            @Html.HiddenFor(one => one.ContactInformation.ContactId)
            @Html.HiddenFor(one => one.ContactInformation.IsActive)
            @Html.HiddenFor(one => one.ContactInformation.CreatedDate)

            @Html.HiddenFor(one => one.ContactInformationAddress.AddressId)
            @Html.HiddenFor(one => one.ContactInformationAddress.CreatedBy)
            @Html.HiddenFor(one => one.ContactInformationAddress.CreatedDate)

            @Html.HiddenFor(one => one.ContactInformationEmail.EmailId)
            @Html.HiddenFor(one => one.ContactInformationEmail.IsActive)
            @Html.HiddenFor(one => one.ContactInformationEmail.CreatedBy)
            @Html.HiddenFor(one => one.ContactInformationEmail.CreatedDate)
            @Html.HiddenFor(one => one.ContactInformationPhone.PhoneId)
            @Html.HiddenFor(one => one.ContactInformationPhone.IsActive)
            @Html.HiddenFor(one => one.ContactInformationPhone.CreatedBy)
            @Html.HiddenFor(one => one.ContactInformationPhone.CreatedDate)
            @Html.HiddenFor(one => one.BillingInformation.IsActive)
            @Html.HiddenFor(one => one.BillingInformation.CreatedBy)
            @Html.HiddenFor(one => one.BillingInformation.CreatedDate)
            @Html.HiddenFor(one => one.BillingInformationAddress.AddressId)
            @Html.HiddenFor(one => one.BillingInformationAddress.IsActive)
            @Html.HiddenFor(one => one.BillingInformationAddress.CreatedBy)
            @Html.HiddenFor(one => one.BillingInformationAddress.CreatedDate)
            @Html.HiddenFor(one => one.BillingInformationEmail.EmailId)
            @Html.HiddenFor(one => one.BillingInformationEmail.IsActive)
            @Html.HiddenFor(one => one.BillingInformationEmail.CreatedBy)
            @Html.HiddenFor(one => one.BillingInformationEmail.CreatedDate)
            @Html.HiddenFor(one => one.BillingInformationPhone.PhoneId)
            @Html.HiddenFor(one => one.BillingInformationPhone.IsActive)
            @Html.HiddenFor(one => one.BillingInformationPhone.CreatedBy)
            @Html.HiddenFor(one => one.BillingInformationPhone.CreatedDate)

            
            @Html.HiddenFor(one => one.BillSetting.CustomerId)
            @Html.HiddenFor(one => one.BillSetting.BillSettingsId)

            @Html.HiddenFor(one => one.Contract.CustomerId)
            @Html.HiddenFor(one => one.Contract.ContractId)

            @Html.HiddenFor(one => one.ContractDetail.ContractDetailId)
            @Html.HiddenFor(one => one.ContractDetail.ContractId)

            <div class="tab-pane" id="tb_fr_page4">
                <h4 class="blocktop">Customer Contract Detail</h4>
                <div class="form-group">
                    <label class="control-label col-md-2" style="font-weight:600;">
                        Customer No.
                    </label>
                    <div class="col-md-4">
                        <label class="control-label col-md-4" style="width:auto;">
                            @Html.DisplayFor(one => one.CustomerViewModel.CustomerNo)
                        </label>
                    </div>
                    <div class="col-md-1 col-md-offset-1">
                        <label style="margin-bottom: 8px;margin:8px;font-weight:600;">
                            Address
                        </label>
                    </div>
                    <div class="col-md-4">
                        <label class="control-label col-md-11" style="width:auto;">
                            @Html.Raw(ViewBag.Address)
                        </label>
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-2" style="font-weight:600;">
                        Customer Name
                    </label>
                    <div class="col-md-4">
                        <label class="control-label col-md-9" style="width:auto;">
                            @Html.DisplayFor(one => one.CustomerViewModel.Name)
                        </label>
                    </div>

                </div>
                <div class="form-group">
                    <div class="col-md-12">
                        <hr />
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-4">
                       Account Type<span class="required"> * </span>
                    </label>
                    <div class="col-md-3">
                        @Html.DropDownList("AccountTypeList", null, "Select", new { @class = "form-control input-sm", required = "required", @id = "AccountTypeList" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-4">
                        Frequency
                    </label>
                    <div class="col-md-3">
                        @Html.DropDownList("FrequencyTypeList", null, "Select", new { @class = "form-control input-sm", @id = "FrequencyTypeList" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-4">
                        Line No.<span class="required"> * </span>
                    </label>
                    <div class="col-md-3">
                        @Html.TextBoxFor(one => one.ContractDetail.LineNumber, new { @class = "form-control", id = "ContractDetail_LineNo" } )
                        @Html.ValidationMessageFor(one => one.ContractDetail.LineNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-4">
                        Square Footage 
                    </label>
                    <div class="col-md-3">
                        @Html.TextBoxFor(one => one.ContractDetail.SquareFootage, new { @class = "form-control", id = "ContractDetail_SquareFootage" })
                        @Html.ValidationMessageFor(one => one.ContractDetail.SquareFootage, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-4">
                        Clean Times 
                    </label>
                    <div class="col-md-3">
                        @Html.TextBoxFor(one => one.ContractDetail.CleanTimes, new { @class = "form-control", id = "ContractDetail_CleanTimes" } )
                        @Html.ValidationMessageFor(one => one.ContractDetail.CleanTimes, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-4">
                        Clean Frequency <span class="required"> * </span>
                    </label>
                    <div class="col-md-3">
                      @*  @Html.TextBoxFor(one => one.ContractDetail.CleanFrequency, new { @class = "form-control", id = "ContractDetail_CleanFrequency" } )*@
                        @Html.DropDownListFor(one => one.ContractDetail.CleanFrequencyListId, new List<SelectListItem>
                                                    { new SelectListItem{Text="Weekday", Value="Weekday"},
                                                      new SelectListItem{Text="Weekend", Value="Weekend"},
                                                      new SelectListItem{Text="EveryDay", Value="EveryDay"}}, new { @class = "form-control", id = "ContractDetail_CleanFrequency" })
                        @Html.ValidationMessageFor(one => one.ContractDetail.CleanFrequencyListId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-4">
                       Amount <span class="required"> * </span>
                    </label>
                    <div class="col-md-3">
                        @Html.TextBoxFor(one => one.ContractDetail.Amount, new { @class = "form-control", id = "ContractDetail_Amount" })
                        @Html.ValidationMessageFor(one => one.ContractDetail.Amount, "", new { @class = "text-danger" })
                    </div>
                </div>
               
                <div class="form-group"> 
                    <div class="col-md-3"> 
                    </div>
                    @*<div class="col-md-3">
                        <label class="mt-checkbox">
                          @Html.CheckBoxFor(one => one.ContractDetail.BPPAdmin, new { @class = "i-checks", @checked = "true" })  BPPAdmin
                            <span></span>
                        </label>
                    </div>*@
                  
                    <div class="col-md-3">
                        <label class="mt-checkbox">
                            @Html.CheckBoxFor(one => one.ContractDetail.SeparateInvoice, new { @class = "i-checks", @checked = "true" }) Separate Invoice
                            <span></span>
                        </label>
                    </div>
                </div>
                <div class="form-group"> 
                    <div class="col-md-3">
                    </div>
                    @*<div class="col-md-3">
                        <label class="mt-checkbox">
                            @Html.CheckBoxFor(one => one.ContractDetail.SubjectToFees, new { @class = "i-checks", @checked = "true" }) Subject To Fees   
                            <span></span>
                        </label>
                    </div>*@
                    <div class="col-md-3">
                        <label class="mt-checkbox">
                            @Html.CheckBoxFor(one => one.ContractDetail.SubjectToFees, new { @class = "i-checks", @checked = "true" }) CPI Increase    
                            <span></span>
                        </label>
                    </div>

                    @*<div class="col-md-3">
                        <label class="mt-checkbox">
                            @Html.CheckBoxFor(one => one.ContractDetail.AccountRebate, new { @class = "i-checks", @checked = "true" }) Account Rebate
                            <span></span>
                        </label>
                    </div>*@ 
                </div>
                <div class="form-group"> 
                </div>
                <h4 class="block">Contract Detail Description</h4>

                <div id="tblContractDescriptionData">
                    @if (Model != null && Model.ContractDetailDescription != null)
                    {
                     @Html.Partial("~/Areas/Portal/Views/Customer/_ContractDetailDescription.cshtml", Model.ContractDetailDescription)
                    }

                </div> 
            </div>
            <div class="form-actions">
                <div class="col-md-12" style="padding-right: 28px;">
                    <button type="submit" class="btn btn-primary  pull-right" id="btnSubmit" style="margin-left: 10px;">
                        Submit
                        <i class="fa fa-check"></i>
                    </button>&nbsp;&nbsp;&nbsp;&nbsp;
                    <button type="submit" class="btn btn-primary button-next  pull-right" id="btnBack" style="margin-left: 10px;">
                        Back
                        <i class="fa fa-angle-right"></i>
                    </button>
                </div>
            </div>
            <div class="modal fade custom-model custom-form-design" id="modalData" tabindex="-1" role="basic" aria-hidden="true" style="display: none;"></div>
        }
    </div>
</div>



@section pageplugins{

    <script src="@Url.Content("~/Content/admin/assets/global/plugins/select2/js/select2.full.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/jquery-validation/js/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/jquery-validation/js/additional-methods.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/bootstrap-wizard/jquery.bootstrap.wizard.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/scripts/datatable.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/datatables/datatables.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/scripts/app.min.js")" type="text/javascript" )"></script>
    <script src="@Url.Content("~/Content/admin/assets/pages/scripts/table-datatables-managed.min.js")" type="text/javascript"></script>

    <script src="@Url.Content("~/Content/admin/assets/global/plugins/jquery-inputmask/jquery.inputmask.bundle.min.js")" type="text/javascript"></script>
  
}
@section scripts{
    <script>
        jQuery(document).ready(function () {

            $('.date-picker').datepicker({ autoclose: true, dateFormat: 'mm/dd/yy' });
            $('.date-picker').attr("placeholder", "mm/dd/yyyy");

        });




        // Prevent the form to be submitted on ENTER
        $('#form_wizard_1').submit(function (e) {
         //   validateOnSubmit();
        });

        // Controll data

        // Controll data
        $('#btnSubmit').click(function () {
            
            var btnCount = @Convert.ToInt32(JKApi.Business.Enumeration.ButtonType.Submit)

            $("#ButtonType").val(btnCount);
            checkMandatoryFields(btnCount);
        });
        // Controll data
        $('#btnBack').click(function () {
            
            var btnCount = @Convert.ToInt32(JKApi.Business.Enumeration.ButtonType.Back)

            $("#ButtonType").val(btnCount);
            checkMandatoryFields(btnCount);
        });


        // Check mandatory fields before subitting:
        function checkMandatoryFields(count) {
            var form = $('#form_wizard_1');
            var error = $('.alert-danger', form);
            var success = $('.alert-success', form);

            form.validate({
                doNotHideMessage: true, //this option enables to show the error/success messages on tab switch.
                errorElement: 'span', //default input error message container
                errorClass: 'help-block help-block-error', // default input error message class
                focusInvalid: false, // do not focus the last invalid input
                rules: {},
                messages: { // custom messages for radio buttons and checkboxes
                    'payment[]': {
                        required: "Please select at least one option",
                        minlength: jQuery.validator.format("Please select at least one option")
                    }
                },

                errorPlacement: function (error, element) { // render error placement for each input type
                },

                invalidHandler: function (event, validator) { //display error alert on form submit
                    success.hide();
                    error.show();
                    App.scrollTo(error, -200);
                },

                highlight: function (element) { // hightlight error inputs
                    $(element)
                        .closest('.form-group').removeClass('has-success').addClass('has-error'); // set error class to the control group
                },

                unhighlight: function (element) { // revert the change done by hightlight
                    $(element)
                        .closest('.form-group').removeClass('has-error'); // set error class to the control group
                },

                success: function (label) {
                    if (label.attr("for") == "gender" || label.attr("for") == "payment[]") { // for checkboxes and radio buttons, no need to show OK icon
                        label
                            .closest('.form-group').removeClass('has-error').addClass('has-success');
                        label.remove(); // remove error label here
                    } else { // display success icon for other inputs
                        label
                            .addClass('valid') // mark the current input as valid and display OK icon
                        .closest('.form-group').removeClass('has-error').addClass('has-success'); // set success class to the control group
                    }
                },

                submitHandler: function (form) {
                    success.show();
                    error.hide();
                    if (count > 0) {
                        $('#form_wizard_1')[0].submit();
                        //$('#form_wizard_1').submit();
                    }
                    //add here some ajax code to submit your form or just call form.submit() if you want to submit the form without ajax
                }

            });
        }



    </script>
    <script>
        $(function () {
            window.AddContractDetailDescription = function (id) {
                $.blockUI({
                    baseZ: 99999,
                    message: '<center><img height: src="/Images/loading_icon.gif" /><h3> <b>Processing....</br> Please wait! and do not refresh page.</b></h3></center>',
                    css: { backgroundColor: 'rgb{0,0,0}', border: '0', color: '#fff', "z-index": 99999 }
                });
                var contranctDetailContractDetailId = $('#ContractDetail_ContractDetailId').val();
                var url = '/Portal/Customer/AddEditContractDetailDescription/?id=' + contranctDetailContractDetailId + '&ContractDetailDescriptionId=' + id


                 $.get(url, function (data) {
                    $('#modalData').html(data);
                    $('#modalData').modal();
                });
                $.unblockUI();
            }
        });



        $(document).ready(function () {


            $('#divfranchiseList').hide();

            $('#generalCustomerList').DataTable({
                "paging":   true,
                "ordering": false,
                "info":     false,
                "bProcessing": true,
                "pageLength": 25,
                "dom": "<'table-responsive't><'bottom'ip><'clear'>"
            });

            $('#divfranchiseList').show();

            $("#ContractDetail_Amount").inputmask("numeric", {
                decimal: ".",
                negative: false,
                scale: 2,
                groupSeparator: ",",
                digits: 2,
                autoGroup: true,
                prefix: "$",
                rightAlign: false,
                autoUnmask: true,
                removeMaskOnSubmit: true,
            });

        });


    </script>
}



