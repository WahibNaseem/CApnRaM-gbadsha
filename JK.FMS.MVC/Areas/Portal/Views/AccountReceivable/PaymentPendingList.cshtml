
@{
    ViewBag.Title = "PaymentList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section styles{
    <link href="~/Content/admin/assets/global/plugins/jquery-ui/jquery-ui.min.css" rel="stylesheet" />
    <link href="@Url.Content("~/Content/admin/assets/global/plugins/bootstrap-multiselect/css/bootstrap-multiselect.css")" rel="stylesheet" />

    <style type="text/css">
        .topheader {
            font-size: 14px;
            font-weight: bold;
            color: #FFF !important;
            text-transform: uppercase;
            margin-top: 3px;
        }


        .lbl-p5 {
            padding: 5px;
        }

            .lbl-p5.red {
                color: red;
            }


            .lbl-p5.green {
                color: lightgreen;
            }

        input[type="text"].txtcolon:before {
            content: ": ";
        }

        .credit-field {
            width: 80px !important;
        }

        .alignRight {
            text-align: right;
        }

        .alignCenter {
            text-align: center;
        }

        .close {
            background-image: url(/Content/admin/assets/global/img/stick_close.png) !important;
            height: 12px !important;
            width: 12px !important;
            margin-top: 0px !important;
        }

        .custom-listbox .headerbox {
            padding: 3px 0px 3px 5px;
            font-weight: normal;
        }

        .custom-listbox {
            margin-top: 4px;
            margin-bottom: 0px;
        }

        .row {
            margin: 0;
            padding: 3px 0;
        }

        .btn.multiselect {
            text-align: left;
            padding-top: 4px;
            padding-bottom: 4px;
            font-size: 11px;
            color: #555;
        }

        .multiselect .caret {
            right: 0;
            position: absolute;
            margin-top: 8px;
            margin-right: 8px;
        }

        .multiselect-container.dropdown-menu {
            text-transform: none;
            font-size: 14px;
        }

        .no-padding {
            padding: 0;
        }

        #modal_RegionModel .modal-content {
            width: 55% !important;
            margin-left: 30% !important;
        }
    </style>

}
<div class="headerbox">
    <div class="row" style="background-color: #3598DC;color: #fff;">
        <div class="col-md-12 no-padding">
            <div class="alignCenter">
                <div class="col-md-4" style="text-align:right;">
                </div>
                <div class="col-md-4 topheader">
                    Payment Pending Approve List
                </div>
                <div class="col-md-2 pull-right" style="padding-right:5px;">
                    <div style="display:table-cell;padding-right: 5px;">
                        Region
                    </div>
                    <div style="display:table-cell;width:100%;">
                        @if (ViewBag.regionlist != null)
                        {
                            <select class="form-control input-sm" multiple="multiple" id="regionlist" style="display:none;">
                                @foreach (var item in (SelectList)ViewBag.regionlist)
                                {
                                    <option @(item.Selected ? "selected" : "") value="@item.Value">@item.Text</option>
                                }
                            </select>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="custom-listbox" id="divfranchiseList" style="margin-top:4px;margin-bottom:3px;">
    <div class="headerbox">
        <div class="row no-padding">
            <div class="col-sm-1 page-size">
                <select class="form-control input-sm" id="pageSize" style="padding-left:6px;">
                    <option value="-1">All</option>
                    <option value="100" selected>100</option>
                    <option value="50">50</option>
                    <option value="25">25</option>
                </select>
            </div>
            <div class="col-md-3">
                <div class="input-icon">
                    <i class="icon-magnifier icon-align-right" style="margin-top: 8px;"></i>
                    <input id="input_Search" type="text" required name="customernumber" autocomplete="off" placeholder="Search" value="" class="form-control input-sm typeahead" />
                </div>
            </div>

            <div class="col-md-5 pull-right no-padding">
               
                <div class="col-md-10 pull-right no-padding" style="text-align:center;">
                    <div class="col-md-6 no-padding" style="margin-left:30px;">
                        <select id="select_timeduration" class="form-control input-sm">
                            <option value="1">This Week</option>
                            <option value="2">This Week-to-date</option>
                            <option value="3" selected="selected">This Month</option>
                            <option value="4">This Month-to-date</option>
                            <option value="5">This Quarter</option>
                            <option value="6">This Quarter-to-date</option>
                            <option value="7">This Fiscal Year</option>
                            <option value="8">This Fiscal Year-to-date</option>
                            <option value="9">Today</option>
                            <option value="10">Yesterday</option>
                            <option value="11">Last Week</option>
                            <option value="12">Last Month</option>
                            <option value="13">Last Quarter</option>
                            <option value="14">Last Year</option>
                            <option value="15">Custom Date</option>
                        </select>
                    </div>
                    <div class="col-md-5 divspandate no-padding" style="margin-top: 3px; margin-left: 0px; display: block; float: right;" id="divspandate">
                        <span id="spnStartDate"></span> - <span id="spnEndtDate"></span>
                    </div>
                    <div class="col-md-3 no-padding" style="margin-left: 3px; width: 70px; display: none;" id="divSD">
                        <input type="text" name="txtStartDate" id="txtStartDate" value="" class="form-control input-sm date-picker RemovePeriodvalidation" style="padding: 3px;" />
                    </div>
                    <div class="col-md-3 no-padding" style="margin-left: 3px; width: 70px; display: none;" id="divED">
                        <input type="text" name="txtEndtDate" id="txtEndtDate" value="" class="form-control input-sm date-picker RemovePeriodvalidation" style="padding: 3px;" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="tablebox">
    <div class="row padding-tb1">
        <div class="row no-padding">
            <div class="table-responsive">
                <table class="table table-striped table-bordered table-hover" id="CustomerPaymentList" style="display:none">
                    <thead>
                        <tr>
                            <th style="text-align:center;width:18px;font-size: 11px !important;font-weight: normal;">
                                Region
                            </th>
                            <th style="width:55px;text-align:center;font-size: 11px !important;font-weight: normal;">
                                Payment No
                            </th>
                            <th style="text-align:center;width:60px;font-size: 11px !important;font-weight: normal;">
                                Payment Date
                            </th>
                            <th style="text-align:center;width:130px;font-size: 11px !important;font-weight: normal;">
                                Customer
                            </th>
                            <th style="text-align:center;width:40px;font-size: 11px !important;font-weight: normal;">
                                Payment Type
                            </th>
                            <th style="text-align:center;width:60px;font-size: 11px !important;font-weight: normal;">
                                Check No.
                            </th>
                            <th style="text-align:center;width:120px;font-size: 11px !important;font-weight: normal;">
                                Reference / Memo
                            </th>
                            <th style="text-align:center;width:30px;font-size: 11px !important;font-weight: normal;">
                                Invoice No
                            </th>
                           0<th style="text-align:center;width:66px;font-size: 11px !important;font-weight: normal;">
                                Invoice Amount
                            </th>
                            <th style="text-align:center;width:61px;font-size: 11px !important;font-weight: normal;">
                                Payment Amount
                            </th>
                            <th style="width:1px;"></th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>
</div>



<div class="form-horizontal" id="form_paymentlist"></div>

<div class="modal fade in" id="modal_RegionModel" tabindex="-1" role="basic" aria-hidden="true" style="display: none; padding-right: 17px;">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" style="border-radius: 8px;">
            <div class="modal-header headerbox list" style="padding:0px!important;border-bottom: none;">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true" style="margin-top: 12px !important;margin-right: 12px !important;"></button>
                <h4 class="modal-title text-center" style="margin-top: 0px; margin-bottom: 4px;  padding: 7px!important;font-size: 12px;font-weight: bold;background: #3598DC !important;color: #FFF !important;border: 1px solid #3598DC !important;padding: 0px;text-transform: uppercase;">
                    Select Region
                </h4>
            </div>
            <div class="modal-body form form-horizontal" style="padding-top: 1px;margin-top: -5px;">
                <div class="form-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label class="control-label col-md-12" style="text-align: center;padding: 5px;background-color: #e8e8e8;margin-bottom:5px;font-weight:bold;">Select Region</label>
                                @if (ViewBag.regionlist != null)
                                {
                                    <select class="form-control input-sm" id="selectregionlist">
                                        <option value="">Select Region</option>
                                        @foreach (var item in (SelectList)ViewBag.regionlist)
                                        {
                                            <option @(item.Selected ? "selected" : "") value="@item.Value">@item.Text</option>
                                        }
                                    </select>
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-actions">
                    <div class="col-md-12">
                        <button type="button" name="SaveNew" id="btnRegion" class="btn btn-primary button-next pull-right" onclick="" style="margin-right:0px;">Select Region</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="form-horizontal" id="form_invoicedetail"></div>
@section scripts{
    <script>

        var paymentList;

        function getTableURL() {

            var _regionId = $("#regionlist").val();
            var _fromDateVal = $('#spnStartDate').text();
            var _toDateVal = $('#spnEndtDate').text();

            var sURL = '@Url.Action("PendingPaymentListResultData", "AccountReceivable", new { area = "Portal" })?regionIds=' + _regionId + '&from=' + _fromDateVal + '&to=' + _toDateVal

            return sURL;
        }

        function pandingpaymentListrefreshTable() {
            var url = getTableURL();

            $.blockUI();//$.blockUI({ message: $('#throbberBlock'), theme: true, baseZ: 12000 });

            paymentList.DataTable().ajax.url(url).load(function () { $.unblockUI(); });
        }

        function refreshTable() {
            var url = getTableURL();

            $.blockUI();//$.blockUI({ message: $('#throbberBlock'), theme: true, baseZ: 12000 });

            paymentList.DataTable().ajax.url(url).load(function () { $.unblockUI(); });
        }

        $(window).load(function () {
            if ('@ViewBag.selectedRegionId' == 0) {
                $("#modal_RegionModel").modal({ backdrop: 'static' });
            } else {
                refreshTable();
            }
        });

        jQuery(document).ready(function () {

            $("#regionlist").multiselect({
                includeSelectAllOption: false,
                selectAllText: 'Select all',
                buttonWidth: '100%',
                nonSelectedText: 'Select region..',
                dropRight: true,
                numberDisplayed: 2,
            });

            $("#regionlist").change(function () {
                if ($("#regionlist").val() != null)
                    refreshTable();
            });

            $("#btnRegion").click(function () {
                if ($("#selectregionlist").val() != "") {
                    $("#regionlist option[value='" + $("#selectregionlist").val() + "']").attr("selected", 1);
                    $("#regionlist").multiselect("refresh");
                    refreshTable();
                    $(".close").click();
                }
            });

            $("#pageSize").change(function () {
                setPaging();
            });

            $('#divspandate').show();
            $('#divSD').hide();
            $('#divED').hide();

            firstDay = moment().subtract(0, 'month').startOf('month').toString();
            lastDay = moment().subtract(0, 'month').endOf('month').toString();

            $('#spnStartDate').html(moment(firstDay).format('L'));
            $('#spnEndtDate').html(moment(lastDay).format('L'));
            //$('#txtStartDate').inputmask("mm/dd/yyyy", {});
            //$('#txtEndtDate').inputmask("mm/dd/yyyy", {});

            //setSearchTime(3);
            //var sURL = getTableURL();
            var ps = $('#pageSize').val();
            paymentList = $('#CustomerPaymentList').dataTable({
                "bAutoWidth": false,
                cache: false,
                "order": false,
                "iDisplayLength": ps == '-1' ? 25 : ps,
                "dom": "<'table-responsive't><'bottom'ip><'clear'>",
                "aaSorting": [[0, "desc"]],
                "sAjaxDataProp": "aadata",  // Internationalisation. For more info refer to http://datatables.net/manual/i18n
                "rowCallback": function (nRow, data) {

                },

                "aoColumns": [
                    {
                        "sName": "RegionName",
                        "bSortable": true,
                        "sClass": "alignCenter",
                        "mRender": function (data, type, full) {
                            return full.RegionName;
                        }
                    },
                    {
                        "sName": "PaymentNo",
                        "bSortable": true,
                        "sClass": "alignCenter",
                        "mRender": function (data, type, full) {
                            var html = "<a onclick=btnOpenPaymentDetail('" + full.PaymentId + "') >" + full.PaymentNo + "</a>";
                            return html;
                            //return '<a href="javascript:void(0);" onclick="btnOpenPaymentDetail("' + cusno +'")">' + full.PaymentNo + '</a>';
                        }
                    },
                    {
                        "sName": "CreatedDate",
                        "bSortable": true,
                        "sClass": "alignCenter",
                        "mRender": function (data, type, full) {
                            var date = formatJSONDateUtc(full.CreatedDate);
                            return date;
                        }
                    },
                    {
                        "sName": "CustomerName",
                        "bSortable": true,
                        "sClass": "alignCenter",
                        "mRender": function (data, type, full) {
                            return full.CustomerName;
                        }
                    },
                    {
                        "sName": "PaymentType",
                        "bSortable": true,
                        "sClass": "alignCenter",
                        "mRender": function (data, type, full) {
                            return full.PaymentType;
                        }
                    },
                    {
                        "sName": "CheckNo",
                        "bSortable": true,
                        "sClass": "alignCenter",
                        "mRender": function (data, type, full) {
                            return full.CheckNo;
                        }
                    },
                    {
                        "sName": "Reference",
                        "bSortable": true,
                        "mRender": function (data, type, full) {
                            return full.Reference;
                        }
                    },
                    {
                        "sName": "InvoiceNo",
                        "bSortable": true,
                        "sClass": "alignCenter",
                        "mRender": function (data, type, full) {
                            return '<a onclick="showInvoiceDetail(' + full.InvoiceId + ')">' + full.InvoiceNo + '</a>'
                        }

                    },
                    {
                        "sName": "InvoiceAmount",
                        "bSortable": true,
                        "sClass": "alignRight",
                        "mRender": function (data, type, full) {
                            return full.InvoiceAmount;
                        }
                    },
                    {
                        "sName": "PaymentAmount",
                        "bSortable": true,
                        "sClass": "alignRight",
                        "mRender": function (data, type, full) {
                            return full.PaymentAmount;
                        }
                    },
                    {
                        "sName": "Action",
                        "bSortable": true,
                        "sClass": "alignCenter",
                        "mRender": function (data, type, full) {
                            return '<img style="width:20px;" src="/Content/admin/assets/apps/img/pimgpsh_fullsize_distr.png" />';
                        }
                    }
                ],
                //    "footerCallback": function (row, data, start, end, display) {
                //        var api = this.api(), data;

                //        // Remove the formatting to get integer data for summation
                //        var intVal = function (i) {
                //            return typeof i === 'string' ?
                //                i.replace(/[\$,]/g, '') * 1 :
                //                typeof i === 'number' ?
                //                    i : 0;
                //        };

                //        // Total over all pages
                //        var total = api
                //            .column(7)
                //            .data()
                //            .reduce(function (a, b) {
                //                return intVal(a) + intVal(b);
                //            }, 0);

                //        // Total over this page
                //        pageTotal = api
                //            .column(7, { page: 'current' })
                //            .data()
                //            .reduce(function (a, b) {
                //                return intVal(a) + intVal(b);
                //            }, 0);

                //        // Update footer
                //        $(api.column(7).footer()).html(
                //            '$' + pageTotal
                //        );
                //    }
            });

            $("#input_Search").keyup(function () {
                var table = $("#CustomerPaymentList").DataTable();
                table.search($(this).val()).draw();
            });

            $('#CustomerPaymentList').show();

        })

        function setPaging() {
            var z = $("#pageSize").val();
            var table = $("#CustomerPaymentList").DataTable();
            if (z > 0) {
                table.page.len(z).draw();
            }
            else if (z == -1) {
                table.page.len(table.rows().count()).draw();
            }
            else {
                table.page.page.len(25).draw();
            }
        }

        var date = new Date(), y = date.getFullYear(), m = date.getMonth();
        var firstDay;
        var lastDay;
        Date.prototype.getWeek = function (start) {
            //Calcing the starting point
            start = start || 0;
            var today = new Date(this.setHours(0, 0, 0, 0));
            var day = today.getDay() - start;
            var date = today.getDate() - day;

            // Grabbing Start/End Dates
            var StartDate = new Date(today.setDate(date));
            var EndDate = new Date(today.setDate(date + 6));
            return [StartDate, EndDate];
        }

        $('#txtStartDate').change(function () {
            $('#spnStartDate').html($(this).val());
            if ($('#txtStartDate').val() != '' && $('#txtEndtDate').val() != '')
                refreshTable();
        });
        $('#txtEndtDate').change(function () {
            $('#spnEndtDate').html($(this).val());
            if ($('#txtStartDate').val() != '' && $('#txtEndtDate').val() != '')
                refreshTable();
        });

        $('#select_timeduration').change(function () {
            //alert($(this).val());
            $('#spnStartDate').html('');
            $('#spnEndtDate').html('');
            $('#divspandate').show();
            $('#divSD').hide();
            $('#divED').hide();
            switch (parseInt($(this).val())) {
                case 1:
                    firstDay = moment().startOf('isoWeek').toString();
                    lastDay = moment().endOf('isoWeek').toString();
                    break;
                case 2:
                    //code block
                    firstDay = moment().startOf('isoWeek').toString();
                    lastDay = new Date().toString();
                    break;
                case 3:
                    firstDay = moment().subtract(0, 'month').startOf('month').toString();
                    lastDay = moment().subtract(0, 'month').endOf('month').toString();
                    break;
                case 4:
                    //code block
                    firstDay = moment().subtract(0, 'month').startOf('month').toString();
                    lastDay = new Date().toString();
                    break;
                case 5:
                    //code block
                    firstDay = moment().startOf('quarter').toString();
                    lastDay = moment().endOf('quarter').toString();
                    break;
                case 6:
                    //code block
                    firstDay = moment().startOf('quarter').toString();
                    lastDay = new Date().toString();
                    break;
                case 7:
                    //code block
                    firstDay = moment().startOf('year').toString();;
                    lastDay = moment().endOf('year').toString();
                    break;
                case 8:
                    //code block
                    firstDay = moment().startOf('year').toString();
                    lastDay = new Date().toString();
                    break;
                case 9:
                    //code block
                    firstDay = moment().toString();
                    lastDay = moment().toString();
                    break;
                case 10:
                    //code block
                    firstDay = moment().add(-1, 'days').toString();
                    lastDay = moment().add(-1, 'days').toString();
                    break;
                case 11:
                    //code block
                    firstDay = moment().subtract(1, 'week').startOf('week').toString();
                    lastDay = moment().subtract(1, 'week').endOf('week').toString();
                    break;
                case 12:
                    //code block
                    firstDay = moment().subtract(1, 'month').startOf('month').toString();
                    lastDay = moment().subtract(1, 'month').endOf('month').toString();
                    break;
                case 13:
                    //code block
                    firstDay = moment().subtract(1, 'quarter').startOf('quarter').toString();
                    lastDay = moment().subtract(1, 'quarter').endOf('quarter').toString();
                    break;
                case 14:
                    //code block
                    firstDay = moment().subtract(1, 'year').startOf('year').toString();
                    lastDay = moment().subtract(1, 'year').endOf('year').toString();
                    break;
                case 15:
                    //code block
                    $('#divspandate').hide();
                    $('#divSD').show();
                    $('#divED').show();
                    $('#txtStartDate').val('');
                    $('#txtEndtDate').val('')
                    break;
                default:
                    //code block
            }
            $('#spnStartDate').html(moment(firstDay).format('L'));
            $('#spnEndtDate').html(moment(lastDay).format('L'));

            
            
            if (parseInt($(this).val())!=15)
                refreshTable();

        });

        function showInvoiceDetail(id) {
            var sURL = '@Url.Action("InvoiceDetail", "AccountReceivable", new { area = "Portal" })?Id=' + id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#form_invoicedetail').html(data);
                    $("#modal_invoicedetail").modal({ backdrop: 'static' });
                },
                error: function () {
                    alert("Content load failed.");
                }
            });
        }

        function formatJSONDate(jsonDate) {
            if (jsonDate != null) {
                var dateString = jsonDate.substr(6);
                var currentTime = new Date(parseInt(dateString));
                var month = currentTime.getMonth() + 1;
                var day = currentTime.getDate();
                var year = currentTime.getFullYear();
                var date = month + "/" + day + "/" + year;
                return date;
            }
            return null;
        }

        function formatJSONDateUtc(jsonDate) {
            if (jsonDate != null) {
                var dtstr = jsonDate.substr(6);
                var dateString = dtstr.substring(0, dtstr.length - 2);
                var currentTime = new Date(parseInt(dateString)).toUTCString();
                var date = moment.utc(currentTime).format("MM/DD/YYYY");
                return date;
            }
            return null;
        }

        function btnInvoicePopupClose() {
            $("#modal_invoicedetail").modal('hide');
        }

        function btnOpenPaymentDetail(strNo) {

            var sURL = '@Url.Action("PendingPaymentDetailPopup", "AccountReceivable", new { area = "Portal" })?paymentId=' + strNo + '&ispending=true';
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#form_paymentlist').html(data);
                    $("#modal_paymentdetail").modal({ backdrop: 'static' });
                    $('.modal-dialog').draggable();
                },
                error: function () {
                    alert("Content load failed.");
                }
            });

            //if (id == 2) {
            //    $("#modal_invoicedetailconsolidated").modal({ backdrop: 'static' });
            //}
            //else {
            //    $("#modal_invoicedetail").modal({ backdrop: 'static' });
            //}
        }


        
    </script>
}





