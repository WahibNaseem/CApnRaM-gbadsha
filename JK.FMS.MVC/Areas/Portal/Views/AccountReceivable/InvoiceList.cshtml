@*@model IEnumerable<JKViewModels.Franchise.FranchiseSearch>*@

@{
    ViewBag.Title = "Account Receivable Invoice List";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

@section styles{
    <link href="@Url.Content("~/Content/admin/assets/global/plugins/datatables/datatables.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/admin/assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/admin/assets/global/plugins/bootstrap-multiselect/css/bootstrap-multiselect.css")" rel="stylesheet" />

    <style type="text/css">
        table.dataTable thead .sorting {
            background-image: none;
        }

        tr > td {
            font-size: 12px !important;
            padding: 4px !important;
        }

        /*tr > th {
            font-size: 11px !important;
            text-transform: uppercase;
        }*/

        .row {
            margin: 0;
            padding: 3px 0;
        }

        .totaldiv {
            padding: 4px;
            background-color: lightskyblue;
            text-align: center;
            font-weight: bold;
            color: #ffffff;
            display: table-cell;
            min-width: 115px;
        }

        .opendiv {
            padding: 4px;
            background-color: gold;
            text-align: center;
            font-weight: bold;
            color: #ffffff;
            display: table-cell;
            min-width: 105px;
        }

        .closeddiv {
            padding: 4px;
            background-color: limegreen;
            text-align: center;
            font-weight: bold;
            color: #ffffff;
            display: table-cell;
            min-width: 90px;
        }

        .overpaiddiv {
            padding: 4px;
            background-color: deepskyblue;
            text-align: center;
            font-weight: bold;
            color: #ffffff;
            display: table-cell;
            min-width: 100px;
        }

        .overduediv {
            padding: 4px;
            background-color: orangered;
            text-align: center;
            font-weight: bold;
            color: #ffffff;
            display: table-cell;
            min-width: 96px;
        }

        .btn {
            padding: 3px 12px;
            font-size: 12px;
        }

        .alignRight {
            text-align: right;
        }

        .alignCenter {
            text-align: center;
        }

        .close {
            background-image: url(/Content/admin/assets/global/img/stick_close.png) !important;
            height: 12px !important;
            width: 12px !important;
            margin-top: 0px !important;
        }

        .page-size {
            padding-left: 0;
            padding-right: 0;
            width: 62px;
        }

        .topheader {
            font-size: 14px;
            font-weight: bold;
            color: #FFF !important;
            text-transform: uppercase;
            margin-top: 3px;
        }

        #invoiceList th {
            vertical-align: middle;
        }

        .no-padding {
            padding: 0;
        }

        .no-margin {
            margin: 0;
        }

        .padding-tb1 {
            padding-top: 1px;
            padding-bottom: 1px;
        }

        .margin-tb1 {
            margin-top: 1px;
            margin-bottom: 1px;
        }

        .custom-listbox .headerbox {
            padding: 3px 0px 3px 5px;
        }

        .custom-listbox {
            margin-top: 4px;
            margin-bottom: 0px;
        }

        #divfranchiseList .headerbox {
            text-transform: none;
            font-weight: normal;
        }

        .btn.multiselect {
            text-align: left;
            padding-top: 4px;
            padding-bottom: 4px;
            font-size: 11px;
            color: #555;
        }

        .multiselect .caret {
            right: 0;
            position: absolute;
            margin-top: 8px;
            margin-right: 8px;
        }

        .multiselect-container.dropdown-menu {
            text-transform: none;
            font-size: 14px;
        }

        #modal_RegionModel .modal-content {
            width: 55% !important;
            margin-left: 30% !important;
        }

        .text-bottom {
            vertical-align: bottom !important;
        }

        input[type="radio"].bigger-radio {
            -ms-transform: scale(1.5); /* IE 9 */
            -webkit-transform: scale(1.5); /* Chrome, Safari, Opera */
            transform: scale(1.5);
            margin-bottom: 10px;
        }

    </style>
}
<div class="headerbox">
    <div class="row" style="background-color: #3598DC;color: #fff; margin: 0;">
        <div class="col-md-12 no-padding">
            <div class="alignCenter">
                <div class="col-md-4" style="text-align:right;">
                </div>
                <div class="col-md-4 topheader">
                    Invoice List
                </div>
                <div class="col-md-2 pull-right" style="padding-right:5px;">
                    <div style="display:table-cell;padding-right: 5px;">
                        Region
                    </div>
                    <div style="display:table-cell;width:100%;">
                        @if (ViewBag.regionlist != null)
                        {
                            <select class="form-control input-sm" multiple="multiple" id="regionlist" style="display:none;">
                                @foreach (var item in (SelectList)ViewBag.regionlist)
                                {
                                    <option @(item.Selected ? "selected" : "") value="@item.Value">@item.Text</option>
                                }
                            </select>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="custom-listbox" id="divfranchiseList" style="margin-top:4px;margin-bottom:3px;">
    <div class="headerbox">
        <div class="row no-padding">
            <div class="col-sm-1 page-size">
                <select class="form-control input-sm" id="pageSize" style="padding-left:6px;">
                    <option value="-1">All</option>
                    <option value="100">100</option>
                    <option value="50" selected>50</option>
                    <option value="25">25</option>
                </select>
            </div>
            <div class="col-md-3">
                <div class="input-icon">
                    <i class="icon-magnifier icon-align-right" style="margin-top: 8px;"></i>
                    <input id="csearch-box" type="text" required name="customernumber" autocomplete="off" placeholder="Search" value="" class="form-control input-sm typeahead" />
                </div>
            </div>
            <div class="col-md-3">
                <div style="display:table-cell;">
                    <input type="checkbox" value="Open" id="chkIsOpen" checked />
                </div>
                <div style="display:table-cell;vertical-align:middle;padding-left:4px;">
                    Open
                </div>
                <div style="display:table-cell;padding-left:30px;">
                    <input type="checkbox" value="Close" id="chkIsClose" />
                </div>
                <div style="display:table-cell;vertical-align:middle;padding-left:4px;">
                    Close
                </div>
            </div>
            <div class="col-md-5 pull-right no-padding">
                <div class="col-md-10 pull-right no-padding" style="text-align:center;">
                    <div class="col-md-6 no-padding" style="margin-left:30px;">
                        <select id="select_timeduration" class="form-control input-sm">
                            <option value="1">This Week</option>
                            <option value="2">This Week-to-date</option>
                            <option value="3">This Month</option>
                            <option value="4">This Month-to-date</option>
                            <option value="5">This Quarter</option>
                            <option value="6">This Quarter-to-date</option>
                            <option value="7">This Fiscal Year</option>
                            <option value="8">This Fiscal Year-to-date</option>
                            <option value="9" selected="selected">Today</option>
                            <option value="10">Yesterday</option>
                            <option value="11">Last Week</option>
                            <option value="12">Last Month</option>
                            <option value="13">Last Quarter</option>
                            <option value="14">Last Year</option>
                            <option value="15">Custom Date</option>
                            <option value="16">Period</option>
                        </select>
                    </div>
                    <div class="col-md-5 divspandate no-padding" style="margin-top: 3px; margin-left: 0px; display: block; float: right;">
                        <span id="spnStartDate"></span> - <span id="spnEndtDate"></span>
                    </div>
                    <div class="col-md-3 no-padding" style="margin-left: 3px; width: 70px; display: none;" id="divSD">
                        <input type="text" name="txtStartDate" id="txtStartDate" value="" class="form-control input-sm date-picker RemovePeriodvalidation" style="padding: 3px;" />
                    </div>
                    <div class="col-md-3 no-padding" style="margin-left: 3px; width: 70px; display: none;" id="divED">
                        <input type="text" name="txtEndtDate" id="txtEndtDate" value="" class="form-control input-sm date-picker RemovePeriodvalidation" style="padding: 3px;" />
                    </div>
                    <div class="col-md-3 no-padding" style="margin-left: 3px; width: 70px; display: none;" id="divmonth">
                        <select id="monthlist" class="form-control input-sm">
                            <option value=""></option>
                            <option value="1">Jan</option>
                            <option value="2">Feb</option>
                            <option value="3">Mar</option>
                            <option value="4">Apr</option>
                            <option value="5">May</option>
                            <option value="6">June</option>
                            <option value="7">July</option>
                            <option value="8">Aug</option>
                            <option value="9">Sep</option>
                            <option value="10">Oct</option>
                            <option value="11">Nov</option>
                            <option value="12">Dec</option>
                        </select>
                    </div>
                    <div class="col-md-3 no-padding" style="margin-left: 3px; width: 70px; display: none;" id="divyear">
                        <select class="form-control input-sm" id="yearlist" style="padding-left: 2px;">
                            <option value=""></option>
                            <option value="2018">2018</option>
                            <option value="2017">2017</option>
                            <option value="2016">2016</option>
                            <option value="2015">2015</option>
                            <option value="2014">2014</option>
                            <option value="2013">2013</option>
                            <option value="2012">2012</option>
                            <option value="2011">2011</option>
                            <option value="2010">2010</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="tablebox">
    <div class="row padding-tb1">
        <div class="row no-padding">
            <div class="col-md-3" style="padding-top:20px;padding-left:0;">
                <div class="col-md-12" style="padding-left:0;">
                    &nbsp;<button type="button" class="btn btn-primary button-next pull-left" style="margin-right:10px;" onclick="InvoiceListSendEmail()">Email</button>
                    &nbsp;<button type="button" class="btn btn-primary button-next pull-left" style="margin-right:10px;" onclick="InvoiceListPrint()">Print</button>
                    &nbsp;<button type="submit" class="btn btn-primary button-next pull-left" style="margin-right:10px;" onclick="InvoiceListExportPDF()">Export to PDF</button>
                    &nbsp;<button type="submit" class="btn btn-primary button-next pull-left" onclick="InvoiceListExportExcel()">Export to Excel</button>
                </div>
            </div>
            <div class="col-md-5" style="padding-top:20px;">
                <div class="row" style="padding:0">
                    <div class="col-md-2 no-padding">
                        <label class="control-label">
                            <input type="checkbox" name="chkbillingsameas" id="ckapplyEmail">&nbsp;Email
                            <span></span>
                        </label>
                    </div>
                    <div class="col-md-2 no-padding">
                        <label class="control-label">
                            <input type="checkbox" name="chkbillingsameas" id="ckapplyPrint">&nbsp;Print
                            <span></span>
                        </label>
                    </div>
                    <div class="col-md-3 no-padding">
                        <label class="control-label">
                            <input type="checkbox" name="chkbillingsameas" id="chkbillingsameas">&nbsp;Consolidated
                            <span></span>
                        </label>
                    </div>
                    <div class="col-md-2 no-padding">
                        <label class="control-label">
                            <input type="checkbox" name="chkiscredit" id="chkiscredit" checked ="checked" value="1" >&nbsp;Credit
                            <span></span>
                        </label>
                    </div>
                    <div class="col-md-2 no-padding">
                        <label class="control-label">
                            <input type="checkbox" name="chkisinvoice" id="chkisinvoice" checked ="checked" value="2">&nbsp;Invoice
                            <span></span>
                        </label>
                    </div>
                </div>
            </div>

            <div class="col-md-4 pull-right" style="padding-right:0;">
                <div class="row padding-tb1">
                    <div class="col-mg-10 pull-right">
                        <table class="table table-bordered">
                            <tbody>
                                <tr>
                                    <td></td>
                                    <td class="totaldiv"><div>Total # INV:&nbsp;<span id="spnTotal">0</span></div></td>
                                    <td class="opendiv"><div>Open:&nbsp;<span id="spnIsOpen">0</span></div></td>
                                    <td class="closeddiv"><div>Paid:&nbsp;<span id="spnIsClosed">0</span></div></td>
                                    <td class="overduediv"><div>Over Due:&nbsp;<span id="spnIsOverDue">0</span></div></td>
                                </tr>
                                <tr style="background-color:#f8c471;">
                                    <td class="alignCenter" style="width:75px;">
                                        Total
                                    </td>
                                    <td class="alignRight" id="totalInvoice" style="width:104px">
                                        0.00
                                    </td>
                                    <td class="alignRight" id="totalOpen" style="width:104px">
                                        0.00
                                    </td>
                                    <td class="alignRight" id="totalClosed" style="width:90px">
                                        0.00
                                    </td>
                                    <td class="alignRight" id="totalOverDue" style="width:96px">
                                        0.00
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="row no-padding">
            <div class="table-responsive">
                <table class="table table-striped table-bordered table-hover order-column" id="invoiceList" style="display:none;margin-top:0 !important;margin-bottom: 65px !important;">
                    <thead>
                        <tr>
                            <th style="text-align:center;">
                                <input style="margin-left:-2px;" type="checkbox" class="chk text-center" id="chkSelectAll" name="chkSelectAll" />
                            </th>
                            <th style="font-size:9px !important;text-align:center;padding-left: 5px !important;padding-right: 20px !important;">
                                Region
                            </th>
                            <th style="font-size:9px !important;text-align:center;padding-left: 4px !important;padding-right: 20px !important;">
                                Invoice No
                            </th>
                            <th style="font-size:9px !important;text-align:center;padding-left: 0px !important;padding-right: 20px !important;">
                                Invoice Date
                            </th>
                            <th style="text-align:center;font-size:9px !important;padding-left: 5px !important;padding-right: 20px !important;">
                                Customer No
                            </th>
                            <th style="text-align:center;width:200px;padding-left: 5px !important;padding-right: 20px !important;">
                                Customer Name
                            </th>
                            <th style="text-align:center;font-size:9px !important;padding-left: 5px !important;padding-right: 20px !important;">
                                E/P
                            </th>
                            <th style="text-align:center;font-size:9px !important;padding-left: 5px !important;padding-right: 20px !important;">
                                C
                            </th>
                            @*<th style="text-align:center;font-size:9px !important;padding-left: 4px !important;padding-right: 20px !important;">
                                    Franchisee Bill
                                </th>*@
                            <th style="text-align:center;width:200px;padding-left: 5px !important;padding-right: 20px !important;">
                                Description
                            </th>
                            <th style="text-align:center;font-size:9px !important;padding-left: 5px !important;padding-right: 20px !important;">
                                CPI
                            </th>
                            <th style="text-align:center;font-size:9px !important;padding-left: 5px !important;padding-right: 20px !important;">
                                Invoice Amount
                            </th>

                            <th style="text-align:center;font-size:9px !important;padding-left: 5px !important;padding-right: 20px !important;">
                                Invoice Tax
                            </th>
                            <th style="text-align:center;font-size:9px !important;padding-left: 5px !important;padding-right: 20px !important;">
                                Invoice Total
                            </th>
                            <th style="text-align:center;font-size:9px !important;padding-left: 5px !important;padding-right: 20px !important;">
                                Status
                            </th>
                            <th style="text-align:center;font-size:9px !important;padding-left: 5px !important;padding-right: 20px !important;">

                            </th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                    <tfoot>                                                                          
                        <tr>                            
                            <td class="alignCenter" style="width:75px;" colspan="10">                                                            
                                <b>Total:</b>
                            </td>                             
                            <td class="alignRight" id="ftInvoiceAmount" style="width:104px;">
                                0.00
                            </td>
                            <td class="alignRight" id="ftInvoiceTax" style="width:90px">
                                0.00
                            </td>
                            <td class="alignRight" id="ftInvoiceTotal" style="width:96px">
                                0.00
                            </td>
                            <td class="alignRight" style="width:96px"></td>
                            <td class="alignRight" style="width:96px"></td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
</div>

<div class="modal fade in" id="modal_RegionModel" tabindex="-1" role="basic" aria-hidden="true" style="display: none; padding-right: 17px;">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" style="border-radius: 8px;">
            <div class="modal-header headerbox list" style="padding:0px!important;border-bottom: none;">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true" style="margin-top: 12px !important;margin-right: 12px !important;"></button>
                <h4 class="modal-title text-center" style="margin-top: 0px; margin-bottom: 4px;  padding: 7px!important;font-size: 12px;font-weight: bold;background: #3598DC !important;color: #FFF !important;border: 1px solid #3598DC !important;padding: 0px;text-transform: uppercase;">
                    Select Region
                </h4>
            </div>
            <div class="modal-body form form-horizontal" style="padding-top: 1px;margin-top: -5px;">
                <div class="form-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label class="control-label col-md-12" style="text-align: center;padding: 5px;background-color: #e8e8e8;margin-bottom:5px;font-weight:bold;">Select Region</label>
                                @if (ViewBag.regionlist != null)
                                {
                                    <select class="form-control input-sm" id="selectregionlist">
                                        <option value="">Select Region</option>
                                        @foreach (var item in (SelectList)ViewBag.regionlist)
                                        {
                                            <option @(item.Selected ? "selected" : "") value="@item.Value">@item.Text</option>
                                        }
                                    </select>
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-actions">
                    <div class="col-md-12">
                        <button type="button" name="SaveNew" id="btnRegion" class="btn btn-primary button-next pull-right" onclick="" style="margin-right:0px;">Select Region</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="form-horizontal" id="form_invoicedetail"></div>
<div class="form-horizontal" id="form_Consolidatedinvoicedetail"></div>
<div class="form-horizontal" id="form_invoicedetailconsolidated"></div>
<div id="div_applycreditform"></div>
<div id="divmodal_ManualPayment"></div>
<div class="modal fade custom-model custom-form custom-form-design" id="modal_customercreditprompt" tabindex="-1" style="display: none;">
    <div class="modal-dialog" style="width:500px">
        <div class="modal-content" style="border-radius: 8px; font-size: 16px">
            <div class="headerbox">
                <div class="row">
                    &nbsp;
                </div>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12" style="padding: 20px 100px 40px 100px;">
                        Do you want to apply <span id="lblPromptCreditAmt">&nbsp;</span> in customer credit for Customer <span id="lblPromptCreditCustomerName">&nbsp;</span>?
                    </div>
                    <div class="col-md-12">
                        <div class="col-md-6"></div>
                        <div class="col-md-3">
                            <button type="button" class="btn green btn-block" onclick="onClickYesApplyCustomerCredit()">Yes</button>
                        </div>

                        <div class="col-md-3">
                            <button type="button" class="btn green btn-block" onclick="onClickNoApplyCustomerCredit()">No</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<form class="form-horizontal" action="" id="form_Billingsetting" method="POST">
    @*<div class="modal fade custom-model custom-form-design" id="ModalEditCustomerInfo" tabindex="-1" role="basic" aria-hidden="true" style="display: none;">
            <div class="modal-dialog" style="width:869px" id="RenderEditCustomerInfoPopup">
            </div>
        </div>*@
</form>

<div class="form-horizontal" id="form_FranchiseeBillingDetail"></div>
<div class="modal fade custom-model custom-form custom-form-design" id="modal_applypaymentprompt" tabindex="-1" style="display: none;">
    <div class="modal-dialog" style="width:500px">
        <div class="modal-content" style="border-radius: 8px; font-size: 16px">
            <div class="headerbox">
                <div class="row">
                    &nbsp;
                </div>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12" style="padding: 20px 100px 40px 100px;">
                        Do you want to apply partial payment against Invoice No. <span id="lblPromptInvoiceNo">&nbsp;</span>?
                    </div>
                    <div class="col-md-12">
                        <div class="col-md-6"></div>
                        <div class="col-md-3">
                            <button id="btnSaveAndClose" type="button" class="btn green btn-block" onclick="onClickYesApplyPayment()">Yes</button>
                        </div>

                        <div class="col-md-3">
                            <button id="btnSaveAndNew" type="button" class="btn green btn-block" onclick="onClickNoApplyPayment()">No</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="form-horizontal" id="form_CusCreditDetails"></div>

@section scripts{
    <script src="@Url.Content("~/Areas/Portal/Scripts/ApplyCreditForm.js")" type="text/javascript"></script>
    <script type="text/javascript">
        var dtable;

        var PE_Value = "";
        var OC_Value = "";
        var _monthVal = $('#monthlist').val();
        var _yearVal = $('#yearlist').val();
        var _typeid = 0;
        //var _searchtextVal = getUrlParameter('searchtext');
        var _searchtextVal = "";
        function getUrl() {
            var d = $('#spnStartDate').text() + '-' + $('#spnEndtDate').text();
            var r = $('#regionlist').val();
            var _monthVal = $('#monthlist').val();
            var _yearVal = $('#yearlist').val();
            var consolidated = "N";
            if ($('#chkbillingsameas').is(":checked")) {
                consolidated = "Y";
            }

            //alert(r);
            OC_Value = "";
            if ($('#chkIsOpen').is(":checked")) {
                OC_Value = "Y";
            }
            if ($('#chkIsClose').is(":checked")) {
                OC_Value = OC_Value + "N";
            }
            debugger;
            if ($('#chkiscredit').is(":checked") == true && $('#chkisinvoice').is(":checked") == true) {
                _typeid = 0;
            }
            else if ($('#chkiscredit').is(":checked") == true)
            {
                _typeid = 3;
            }
            else if ($('#chkisinvoice').is(":checked") == true) {
                _typeid = 1;
            }
            else {
                _typeid = 0;
            }

            if (PE_Value == "")
                return '@Url.Action("InvoiceListdata", "AccountReceivable", new { area = "Portal" })?month=' + _monthVal + '&year=' + _yearVal + '&searchtext=' + _searchtextVal + '&oc=' + OC_Value + '&d=' + d + '&r=' + r + '&consolidated=' + consolidated + '&typeid=' + _typeid;
            else
                return '@Url.Action("InvoiceListdata", "AccountReceivable", new { area = "Portal" })?month=' + _monthVal + '&year=' + _yearVal + '&searchtext=' + _searchtextVal + '&PE=' + PE_Value + '&oc=' + OC_Value + '&d=' + d + '&r=' + r + '&consolidated=' + consolidated + "&typeid=" + _typeid;
        }


        function initTable() {
            var sURL = getUrl();
            var ps = $('#pageSize').val();

            $.blockUI();//$.blockUI({ message: $('#throbberBlock'), theme: true, baseZ: 12000 });

            dtable = $('#invoiceList').dataTable({
                "ordering": true,
                "bAutoWidth": false,
                "iDisplayLength": ps == '-1' ? 25 : ps,
                "bDestroy": true,
                //"aLengthMenu": [[5, 7, 10, 25, 50, -1], [5, 7, 10, 25, 50, "All"]],
                "dom": "<'table-responsive't><'bottom'ip><'clear'>",
                "aaSorting": [[0, "desc"]],
                "ajax": {
                    "url": sURL,
                    "dataSrc": function (json) {
                        if (json.headerData) {
                            $('#spnIsOpen').html(json.headerData.open)
                            $('#spnIsClosed').html(json.headerData.closed)
                            $('#spnIsOverPaid').html(json.headerData.overPaid)
                            $('#spnIsOverDue').html(json.headerData.overDue)
                            $('#spnTotal').html(json.headerData.Total)

                            $('#totalOpen').text(parseFloat(json.headerData.totalOpen, 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString());
                            $('#totalClosed').text(parseFloat(json.headerData.totalClosed, 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString());
                            $('#totalOverDue').text(parseFloat(json.headerData.totalOverDue, 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString());
                            $('#totalInvoice').text(parseFloat(json.headerData.totalInvoice, 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString());
                            
                            $('#ftInvoiceAmount').text(parseFloat(json.headerData.ftInvoiceAmount, 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString());
                            $('#ftInvoiceTax').text(parseFloat(json.headerData.ftInvoiceTax, 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString());
                            $('#ftInvoiceTotal').text(parseFloat(json.headerData.ftInvoiceTotal, 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString());
                        }
                        return json.aadata;
                    },
                    complete: function (data) {
                        $.unblockUI();
                    }
                },
                "aoColumns": [
                    {
                        "sName": "InvoiceId",
                        "bSortable": false,
                        "mRender": function (data, type, full) {
                            return '<input rel="mgglchk" type="checkbox" name="name" style="margin-left: 10px;"  class="chk text-center" value="' + full.InvoiceId + '"  />';
                        }
                    },
                    {
                        "sName": "RegionName",
                        "bSortable": true,
                        "sClass": "alignCenter",
                        "mRender": function (data, type, full) {
                            return full.RegionName;
                        }
                    },
                    {
                        "sName": "InvoiceNo",
                        "sClass": "alignCenter",
                        "bSortable": true,
                        "mRender": function (data, type, full) {
                            if (full.ConsolidatedInvoice == 1)
                            {
                                return '<a onclick="btnOpenConsolidatedInvoiceDetail(' + full.ConsolidatedInvoiceId + ')">' + full.InvoiceNo + '</a>';
                            }
                            else if (full.MasterTrxTypeListId == '3') {                                 
                                return '<a onclick="btnOpenCusCreditDetail(' + full.CreditId + ')">' + full.InvoiceNo + '</a>';                                
                            } 
                            else {
                                return '<a onclick="btnOpenInvoiceDetail(' + full.InvoiceId + ')">' + full.InvoiceNo + '</a>';
                            }
                        }
                    },

                    {
                        "sName": "Date",
                        "bSortable": true,
                        "mRender": function (data, type, full) {
                            var date = formatJSONDateUtc(full.InvoiceDate);
                            return date;
                        }
                    },
                    {
                        "sName": "CustomerNo",
                        "bSortable": true,
                        "sClass": "alignCenter",
                        "mRender": function (data, type, full) {
                            return '<a onclick="showEditCustomerInfo(' + full.CustomerId + ')">' + full.CustomerNo + '</a>';
                        }
                    },
                    {
                        "sName": "CustomerName",
                        "bSortable": true,
                        "mRender": function (data, type, full) {
                            return full.CustomerName;
                        }
                    },
                    {
                        "sName": "PrintInvoice",
                        "bSortable": true,
                        "sClass": "alignCenter",
                        "mRender": function (data, type, full) {
                            return full.EBillText + " " + full.PrintInvoiceText;
                        }
                    },
                    {
                        "sName": "ConsolidatedInvoice",
                        "bSortable": true,
                        "sClass": "alignCenter",
                        "mRender": function (data, type, full) {
                            var con = "";
                            if (full.ConsolidatedInvoice == 1) {
                                con = "C";
                            }
                            return con;
                        }
                    },
                    {
                        "sName": "Description",
                        "bSortable": true,
                        "mRender": function (data, type, full) {
                            return full.InvoiceDescription;

                        }
                    },
                    {
                        "sName": "Cpi",
                        "bSortable": true,
                        "sClass": "alignCenter",
                        "mRender": function (data, type, full) {
                            return (full.CPI == '0.00' ? '' : full.CPI+"%");
                        }
                    },
                    {
                        "sName": "Contract Amount",
                        "bSortable": true,
                        "sClass": "alignRight",
                        "mRender": function (data, type, full) {
                            //if (!full.ContractAmount) {
                            //    return '';
                            //}
                            if (full.MasterTrxTypeListId == '3') {
                                return '<span style="color:red;">($' + parseFloat(full.InvoiceAmount, 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString() + ')</span>';
                            }
                            else {
                                return '$' + parseFloat(full.InvoiceAmount, 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString();
                            }
                        }
                    },
                    {
                        "sName": "TaxAmount",
                        "bSortable": true,
                        "sClass": "alignRight",
                        "mRender": function (data, type, full) {
                            if (full.MasterTrxTypeListId == '3')
                            {
                                return '<span style="color:red;">($' + parseFloat(full.InvoiceTax, 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString() + ')</span>';
                            }
                            else {
                                return '$' + parseFloat(full.InvoiceTax, 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString();
                            }
                        }
                    },
                    {
                        "sName": "Amount",
                        "bSortable": true,
                        "sClass": "alignRight",
                        "mRender": function (data, type, full) {
                            if (full.MasterTrxTypeListId == '3') {
                                return '<span style="color:red;">($' + parseFloat(full.InvoiceTotal, 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString() + ')</span>';
                            }
                            else {
                                return '$' + parseFloat(full.InvoiceTotal, 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString();
                            }
                        }
                    }
                    ,
                    {
                        "sName": "TransactionStatus",
                        "bSortable": true,
                        "sClass": "alignCenter",
                        "mRender": function (data, type, full) {
                            return full.TransactionStatus;
                        }
                    },
                    {
                        "sName": "Action",
                        "bSortable": false,
                        "sClass": "personlink alignCenter",
                        "mRender": function (data, type, full) {
                            var action = "<div class='btn-group dropdown'>";
                            action += "<a target='_blank'  dropdown-toggle' data-toggle='dropdown'>";
                            action += "<i class='fa fa-hand-o-right' aria-hidden='true'></i>";
                            action += "</a>";
                            action += "<ul class='dropdown-menu pull-right'>";
                            action += "<li><a href='javascript:void(0);' onclick='btnOpenApplyCreditForm(" + full.InvoiceId + ")'><i class='fa fa-plus'></i> Apply Credit </a></li>";
                            action += "<li><a href='javascript:void(0);' onclick='showManualPayment(" + full.CustomerId + ")'><i class='fa fa-plus'></i> Manual Payment </a></li>";
                            action += "</ul></div>";
                            return action;
                        }



                    },
                ]
            });
        }

        $(window).load(function () {
            if ('@ViewBag.selectedRegionId' == 0) {
                $("#modal_RegionModel").modal({ backdrop: 'static' });
            } else {
                initTable();
            }
        });
        function onClickSaveAndCloseMP() {
            $("#modal_ManualPayment").modal("hide");
            $("#SaveMethod").val("SaveClose");
            continueSaveProcessfrm();
            // go back to customer page?
        }
        var invoiceList;
        var saveAction;
        var saveInProgress = false;
        var currentPromptedInvoice = "";
        var promptedInvoices = [];
        var isLastPrompt = true;
        function continueSaveProcessfrm() {

            saveInProgress = true;
            isLastPrompt = true;
            var nextPrompt = "";

            $("[id$=totalPayment]").each(function () {

                if (!isLastPrompt)
                    return;

                var inv = getInvoiceIdChunk(this);
                var invId = inv.substr(3);

                if (promptedInvoices.indexOf(invId) == -1) { // invoice not checked yet

                    var invPrefix = getInvoicePrefix(inv);

                    var isChecked = $("#" + invPrefix + "chk").prop("checked");
                    var newInvBalance = parseFloat($("#" + invPrefix + "balance").val());
                    var shouldPrompt = $.isNumeric(newInvBalance) && newInvBalance > 0 && isChecked;

                    if (shouldPrompt) { // invoice needs to be prompted
                        if (nextPrompt != "") {
                            isLastPrompt = false;
                            return;
                        }
                        else {
                            nextPrompt = invId;
                        }
                    }
                }
            });

            if (nextPrompt != "")
                promptApplyPaymentFormMP(nextPrompt);
            else
                finishSaveProcessfrm();
        }
        function finishSaveProcessfrm() {
            $('#hdMPCallFrom').val('invoice')
            // disable fields for non-selected invoice to keep them out of the POST

            $(".payment-checkbox").each(function () {
                if (!$(this).prop("checked")) { // invoice checkbox is not checked, so disable fields
                    var inv = getInvoiceIdChunk(this);
                    var invFilter = getInvoiceFilter(inv);
                    $(invFilter).attr("disabled", "disabled");
                }
            });

            $("#form_applypayment").submit();
        }
        function promptApplyPaymentFormMP(invId) {
            currentPromptedInvoice = invId;

            var inv = "inv" + invId;
            var invPrefix = getInvoicePrefix(inv);

            var invoiceNo = $("#" + invPrefix + "invoiceNo").val();

            $("#lblPromptInvoiceNo").text(invoiceNo.trim());
            $("#modal_applypaymentprompt").modal({ backdrop: 'static' });
        }
        $('#modal_applypaymentprompt').on('hidden.bs.modal', function () {
            if (saveInProgress) {
                var invId = currentPromptedInvoice;
                var inv = "inv" + invId;
                var invPrefix = getInvoicePrefix(inv);
                var hasMultipleItems = $("#" + invPrefix + "hasMultipleItems").val() == "true";

                if (hasMultipleItems)
                    openApplyPaymentForm(currentPromptedInvoice);
                else
                    continueToNextInvoice(invId);
            }
        });
        function btnOpenApplyPaymentForm(id) {
            openApplyPaymentForm(id);
        }
        function continueToNextInvoice(invId) {
            var invStr = invId.toString();

            if (saveInProgress) { // in the middle of save process, so continue to next invoice

                if (promptedInvoices.indexOf(invStr) == -1)
                    promptedInvoices.push(invStr);

                var form = $("#inv" + invStr + "_modal_applypaymentform");
                $(form).modal('hide');

                setTimeout(continueSaveProcessfrm);
            }
        }

        $(document).ready(function () {
            $("#btnRegion").click(function () {
                if ($("#selectregionlist").val() != "") {
                    $("#regionlist option[value='" + $("#selectregionlist").val() + "']").attr("selected", 1);
                    $("#regionlist").multiselect("refresh");
                    initTable();
                    $(".close").click();
                }
            });


            $("#regionlist").multiselect({
                includeSelectAllOption: false,
                selectAllText: 'Select all',
                buttonWidth: '100%',
                nonSelectedText: 'Select region..',
                dropRight: true,
                numberDisplayed: 2,
                onChange: initTable,
                onSelectAll: initTable,
                onDeselectAll: initTable
            });

            if ('@ViewBag.selectedRegionId' > 0) {

                $("#regionlist option[value='" + '@ViewBag.selectedRegionId' + "']").attr("selected", 1);
                $("#regionlist").multiselect("refresh");
            }

            applyDurationFilter(9);
            var _monthVal = "0";
            var _yearVal = "0";
            //var _searchtextVal = getUrlParameter('searchtext');
            var _searchtextVal = $('#csearch-box').val();


            //$("#regionlist").change(function () {
            //    initTable();
            //});
            $(document).on('init.dt', function (e, settings) {
                var api = new $.fn.dataTable.Api(settings);
                if ($(api.table().node()).attr('id') == 'invoiceList') {
                    setPaging();
                }
            });

            $("#csearch-box").keyup(function () {
                var table = $("#invoiceList").DataTable();
                table.search($(this).val()).draw();
            });

            $("#pageSize").change(function () {
                setPaging();
            });

            $('#chkIsOpen').change(function () {
                OC_Value = "";
                if ($(this).is(":checked")) {
                    OC_Value = "Y";
                }
                if ($('#chkIsClose').is(":checked")) {
                    OC_Value = OC_Value + "N";
                }
                initTable();
                //dtable.api().ajax.url(encodeURI(getUrl())).load();
            });
            $('#chkIsClose').change(function () {
                OC_Value = "";
                if ($('#chkIsOpen').is(":checked")) {
                    OC_Value = "Y";
                }
                if ($(this).is(":checked")) {
                    OC_Value = OC_Value + "N";
                }
                initTable();
                //dtable.api().ajax.url(encodeURI(getUrl())).load();
            });
            $('#chkiscredit').change(function () {                                
                initTable();                 
            });
            $('#chkisinvoice').change(function () {                     
                initTable();
            });
            $('#chkbillingsameas').change(function () {
                initTable();
            });

            $('#select_timeduration').change(function () {
                applyDurationFilter(parseInt($(this).val()));
                if (parseInt($(this).val()) != 15 && parseInt($(this).val()) != 16)
                    dtable.api().ajax.url(encodeURI(getUrl())).load();
            });

            //$('#txtStartDate').inputmask("mm/dd/yyyy", {});
            //$('#txtEndtDate').inputmask("mm/dd/yyyy", {});

            $('#txtStartDate').change(function () {
                $('#spnStartDate').html($(this).val());
                if ($('#txtStartDate').val() != '' && $('#txtEndtDate').val() != '')
                    initTable();
            });
            $('#txtEndtDate').change(function () {
                $('#spnEndtDate').html($(this).val());
                if ($('#txtStartDate').val() != '' && $('#txtEndtDate').val() != '')
                    initTable();
            });

            $('#monthlist').change(function () {
                $('#spnStartDate').html('');
                if ($('#monthlist').val() != '' && $('#yearlist').val() != '')
                    initTable();
            });
            $('#yearlist').change(function () {
                $('#spnEndtDate').html('');
                if ($('#monthlist').val() != '' && $('#yearlist').val() != '')
                    initTable();
            });

            $('#invoiceList').show();


            $('#chkSelectAll').change(function () {
                if ($(this).is(":checked")) {
                    $('input[rel="mgglchk"]').prop('checked', true);
                }
                else {
                    $('input[rel="mgglchk"]').prop('checked', false);
                }
            });

            function filterEmailPrint() {
                var table = $('#invoiceList').DataTable();
                if ($("#ckapplyEmail").is(":checked") && $("#ckapplyPrint").is(":checked")) {
                    table.columns(6).search("").draw();
                }
                else if ($("#ckapplyEmail").is(":checked")) {
                    table.columns(6).search("E").draw();
                } else if ($("#ckapplyPrint").is(":checked")) {
                    table.columns(6).search("P").draw();
                }
                else {
                    table.columns(6).search("").draw();
                }
            }

            $('#ckapplyEmail').change(function () {
                if ($(this).is(":checked")) {
                    PE_Value = PE_Value.replace("E", '');
                    PE_Value = PE_Value + "E";
                    //dtable.api().ajax.url(encodeURI(getUrl())).load();
                }
                else {
                    PE_Value = PE_Value.replace("E", '');
                    //dtable.api().ajax.url(encodeURI(getUrl())).load();
                }

                filterEmailPrint();
            });
            $('#ckapplyPrint').change(function () {
                if ($(this).is(":checked")) {
                    PE_Value = PE_Value.replace("P", '');
                    PE_Value = PE_Value + "P";
                    //dtable.api().ajax.url(encodeURI(getUrl())).load();
                }
                else {
                    PE_Value = PE_Value.replace("P", '');
                    //dtable.api().ajax.url(encodeURI(getUrl())).load();
                }

                filterEmailPrint();
            });

            $(document).on("change",
                "input[type='radio'][name='rdApplyAmtType']",
                function () {
                    toggleApplyAmtField();
                }
            );
        });

        function formatJSONDate(jsonDate) {
            if (jsonDate != null) {
                //var dateString = jsonDate.substr(6);
                var dtstr = jsonDate.substr(6);
                var dateString = dtstr.substring(0, dtstr.length - 2);
                var currentTime = new Date(parseInt(dateString)).toUTCString();
                //var month = currentTime.getMonth() + 1;
                //var day = currentTime.getDate();
                //var year = currentTime.getFullYear();
                //var date = month + "/" + day + "/" + year;
                var date = moment.utc(currentTime).format("MM/DD/YYYY"); //moment(currentTime).format("MM/DD/YYYY");
                //var date = moment(currentTime).format("MM/DD/YYYY")
                return date;
            }
            return null;
        }
        function formatJSONDateUtc(jsonDate) {
            if (jsonDate != null) {
                var dtstr = jsonDate.substr(6);
                var dateString = dtstr.substring(0, dtstr.length - 2);
                var currentTime = new Date(parseInt(dateString));
                var date = moment.utc(currentTime).format("MM/DD/YYYY");
                return date;
            }
            return null;
        }
        function setPaging() {
            var z = $("#pageSize").val();
            var table = $("#invoiceList").DataTable();
            if (z > 0) {
                table.page.len(z).draw();
            }
            else if (z == -1) {
                table.page.len(table.rows().count()).draw();
            }
            else {
                table.page.page.len(25).draw();
            }
        }

        function applyDurationFilter(v) {
            $('#spnStartDate').html('');
            $('#spnEndtDate').html('');
            $('.divspandate').show();
            $('#divSD').hide();
            $('#divED').hide();
            $('#divmonth').hide();
            $('#divyear').hide();
            $('#spnStartDate').html('');
            $('#spnEndtDate').html('');
            $('#monthlist').val('');
            $('#yearlist').val('');
            switch (v) {
                case 1:
                    firstDay = moment().startOf('isoWeek').toString();
                    lastDay = moment().endOf('isoWeek').toString();
                    break;
                case 2:
                    //code block
                    firstDay = moment().startOf('isoWeek').toString();
                    lastDay = new Date().toString();
                    break;
                case 3:
                    firstDay = moment().subtract(0, 'month').startOf('month').toString();
                    lastDay = moment().subtract(0, 'month').endOf('month').toString();
                    break;
                case 4:
                    //code block
                    firstDay = moment().subtract(0, 'month').startOf('month').toString();
                    lastDay = new Date().toString();
                    break;
                case 5:
                    //code block
                    firstDay = moment().startOf('quarter').toString();
                    lastDay = moment().endOf('quarter').toString();
                    break;
                case 6:
                    //code block
                    firstDay = moment().startOf('quarter').toString();
                    lastDay = new Date().toString();
                    break;
                case 7:
                    //code block
                    firstDay = moment().startOf('year').toString();;
                    lastDay = moment().endOf('year').toString();
                    break;
                case 8:
                    //code block
                    firstDay = moment().startOf('year').toString();
                    lastDay = new Date().toString();
                    break;
                case 9:
                    //code block
                    firstDay = moment().toString();
                    lastDay = moment().toString();
                    break;
                case 10:
                    //code block
                    firstDay = moment().add(-1, 'days').toString();
                    lastDay = moment().add(-1, 'days').toString();
                    break;
                case 11:
                    //code block
                    firstDay = moment().subtract(1, 'week').startOf('week').toString();
                    lastDay = moment().subtract(1, 'week').endOf('week').toString();
                    break;
                case 12:
                    //code block
                    firstDay = moment().subtract(1, 'month').startOf('month').toString();
                    lastDay = moment().subtract(1, 'month').endOf('month').toString();
                    break;
                case 13:
                    //code block
                    firstDay = moment().subtract(1, 'quarter').startOf('quarter').toString();
                    lastDay = moment().subtract(1, 'quarter').endOf('quarter').toString();
                    break;
                case 14:
                    //code block
                    firstDay = moment().subtract(1, 'year').startOf('year').toString();
                    lastDay = moment().subtract(1, 'year').endOf('year').toString();
                    break;
                case 15:
                    //code block
                    $('.divspandate').hide();
                    $('#divSD').show();
                    $('#divED').show();
                    $('#txtStartDate').val('');
                    $('#txtEndtDate').val('')
                    break;
                case 16:
                    $('.divspandate').hide();
                    $('#divSD').hide();
                    $('#divED').hide();
                    $('#divmonth').show();
                    $('#divyear').show();
                    break
                default:
                    //code block
            }
            $('#spnStartDate').html(moment(firstDay).format('L'));
            $('#spnEndtDate').html(moment(lastDay).format('L'));
        }

        function btnOpenInvoiceDetail(id) {

            var sURL = '@Url.Action("InvoiceDetail", "AccountReceivable", new { area = "Portal" })?Id=' + id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#form_invoicedetail').html(data);
                    $("#modal_invoicedetail").modal({ backdrop: 'static' });
                },
                error: function () {
                    alert("Content load failed.");
                }
            });

            //if (id == 2) {
            //    $("#modal_invoicedetailconsolidated").modal({ backdrop: 'static' });
            //}
            //else {
            //    $("#modal_invoicedetail").modal({ backdrop: 'static' });
            //}
        };

        function btnOpenConsolidatedInvoiceDetail(id) {

            var sURL = '@Url.Action("ConsolidatedInvoiceDetail", "AccountReceivable", new { area = "Portal" })?Id=' + id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#form_Consolidatedinvoicedetail').html(data);
                    $("#modal_Consolidatedinvoicedetail").modal({ backdrop: 'static' });
                },
                error: function () {
                    alert("Content load failed.");
                }
            });
        };

        var getUrlParameter = function getUrlParameter(sParam) {
            var sPageURL = decodeURIComponent(window.location.search.substring(1)),
                sURLVariables = sPageURL.split('&'),
                sParameterName,
                i;

            for (i = 0; i < sURLVariables.length; i++) {
                sParameterName = sURLVariables[i].split('=');

                if (sParameterName[0] === sParam) {
                    return sParameterName[1] === undefined ? true : sParameterName[1];
                }
            }
        };




    </script>
}
<script type="text/javascript">
    function InvoiceListExportPDF() {

        var Ids = $('input[rel="mgglchk"]:checked').map(function () { return this.value; }).get().join(',')
        if (Ids != "") {
            window.location.href = '@Url.Action("InvoiceListExportPDF")' + "?InvoiceIds=" + Ids;
        }
        else {
            alert('Please select invoice to export.')
        }

        //window.location.href = '@Url.Action("InvoiceListExportPDF")';
    }

    function InvoiceListExportExcel()
    {
        var d = $('#spnStartDate').text() + '-' + $('#spnEndtDate').text();
        var r = $('#regionlist').val();
        var _monthVal = $('#monthlist').val();
        var _yearVal = $('#yearlist').val();
        var consolidated = "N";
        if ($('#chkbillingsameas').is(":checked")) {
            consolidated = "Y";
        }

        //alert(r);
        OC_Value = "";
        if ($('#chkIsOpen').is(":checked")) {
            OC_Value = "Y";
        }
        if ($('#chkIsClose').is(":checked")) {
            OC_Value = OC_Value + "N";
        }

        if ($('#chkiscredit').is(":checked") == true && $('#chkisinvoice').is(":checked") == true) {
            _typeid = 0;
        }
        else if ($('#chkiscredit').is(":checked") == true) {
            _typeid = 3;
        }
        else if ($('#chkisinvoice').is(":checked") == true) {
            _typeid = 1;
        }
        else {
            _typeid = 0;
        }
        var _urlExportExcel = "";
        if (PE_Value == "")
            _urlExportExcel= '@Url.Action("InvoiceListdataExportExcel", "AccountReceivable", new { area = "Portal" })?month=' + _monthVal + '&year=' + _yearVal + '&searchtext=' + _searchtextVal + '&oc=' + OC_Value + '&d=' + d + '&r=' + r + '&consolidated=' + consolidated + '&typeid=' + _typeid;
        else
            _urlExportExcel= '@Url.Action("InvoiceListdataExportExcel", "AccountReceivable", new { area = "Portal" })?month=' + _monthVal + '&year=' + _yearVal + '&searchtext=' + _searchtextVal + '&PE=' + PE_Value + '&oc=' + OC_Value + '&d=' + d + '&r=' + r + '&consolidated=' + consolidated + "&typeid=" + _typeid;


        $.ajax({
            type: "GET",
            url: _urlExportExcel,
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (res) {
                $.unblockUI();

                var strHTML = res;
                var ua = window.navigator.userAgent;
                var msie = ua.indexOf("MSIE ");

                var dt = new Date();
                var day = dt.getDate();
                var month = dt.getMonth() + 1;
                var year = dt.getFullYear();
                var hour = dt.getHours();
                var mins = dt.getMinutes();
                var postfix = month + "." + day + "." + year;
                //creating a temporary HTML link element (they support setting file names)
                var a = document.createElement('a');
                //getting data from our div that contains the HTML table
                var data_type = 'data:application/vnd.ms-excel';
                //var table_div = document.getElementById('dvData');
                //var table_html = table_div.outerHTML.replace(/ /g, '%20');
                a.href = data_type + ', ' + encodeURIComponent(strHTML);
                //setting the file name
                a.download = 'InvoiceListdataExportExcel_' + postfix + '.xls';
                //triggering the function
                a.click();
                //just in case, prevent default behaviour
                e.preventDefault();

            }
        });
    }

    function InvoiceListSendEmail() {
        var Ids = $('input[rel="mgglchk"]:checked').map(function () { return this.value; }).get().join(',')
        if (Ids != "") {
            var sURL = '@Url.Action("InvoiceListSendEmail", "AccountReceivable", new { area = "Portal" })?InvoiceIds=' + encodeURI(Ids);
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('input[rel="mgglchk"]:checked').prop("checked", false);
                    swal("Success!", "Email has been sent successfully for selected Invoices.", "success");
                },
                error: function () {
                    alert("Content load failed.");
                }
            });
        }
        else {
            alert('Please select invoice to email.')
        }
        @*
            window.location.href = '@Url.Action("InvoiceListSendEmail")' + "?InvoiceIds=" + Ids;


        //window.location.href = '@Url.Action("InvoiceListSendEmail")';*@
    }


    function InvoiceListPrint() {

        var Ids = $('input[rel="mgglchk"]:checked').map(function () {

            return this.value;
        }).get().join(',')
        if (Ids != "") {
            var sURL = '@Url.Action("InvoiceListPrint", "AccountReceivable", new { area = "Portal" })?InvoiceIds=' + encodeURI(Ids);
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    var tUrl = data;
                    printJS({ printable: document.location.origin + tUrl, type: 'pdf', showModal: false });
                    $('input[rel="mgglchk"]:checked').prop("checked", false);
                },
                error: function () {
                    alert("Content load failed.");
                }
            });
        }
        else {
            alert('Please select invoice to print.')
        }
        @*var Ids = $('.chk:checked').map(function () { return this.value; }).get().join(',')
        if (Ids != "") {
            window.location.href = '@Url.Action("InvoiceListPrint")' + "?InvoiceIds=" + Ids;
        }

        //window.location.href = '@Url.Action("InvoiceListPrint")';*@
    }
    function btnInvoicePopupClose() {
        $("#modal_invoicedetail").modal('hide');
    }

     /*Manual Payment */
         function showManualPayment(id) {

            var currenturl = '@Url.Action("ManualPaymentPopup", "Customer",new { area="Portal" })?id=' + id;
            $.ajax({
                type: "GET",
                url: currenturl,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#divmodal_ManualPayment').html(data);
                    manualPaymentInIt();
                    $('#modal_ManualPayment').modal('show');
                },
                error: function () {
                    alert("Content load failed.");
                }
            });
    }
    function onClickYesApplyPayment() {
        $("#modal_applypaymentprompt").modal('hide');

    }
    function onClickNoApplyPayment() {
        saveInProgress = false;
        currentPromptedInvoice = "";
        $("#modal_applypaymentprompt").modal('hide');
    }

    //Customer Credit
    function btnOpenApplyCreditForm(id) {

        var sURL = '@Url.Action("ApplyCreditForm", "AccountReceivable", new { area = "Portal" })?Id=' + id;
        $.ajax({
            type: "GET",
            url: sURL,
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (data) {
                $('#div_applycreditform').html(data);
                $(".date-picker").datepicker();
                $(".input-group-btn").click(function () {
                    $(this).prev().trigger("focus");
                    $(this).prev().trigger("focus");
                });
                $("#modal_applycreditform").modal({ backdrop: 'static' });
                initCreditForm();
                $('.creditfieldcurrency').each(function () {
                    applyMaskCurrency('#' + this.id);
                });


                $(".submit-button").click(
                    function () {
                        var flg = true;
                        if ($("#select_ReasonList").val() == "") {
                            flg = false;
                            $("#select_ReasonList").css("border-color", "red");
                        } else {
                            $("#select_ReasonList").css("border-color", "#c2cad8")
                        }
                        if ($("#creditDesc").val() == "") {
                            flg = false;
                            $("#creditDesc").css("border-color", "red");
                        } else {
                            if (flg)
                                flg = true;
                            else
                                flg = false;
                            $("#creditDesc").css("border-color", "#c2cad8");
                        }

                        var CCflg = validateCreditAmount();

                        if (flg && CCflg) {
                            var balance = parseFloat($("#newBalance").val());
                            var buttonName = $(this).attr("name");

                            saveAction = buttonName;
                            if (balance >= 0) // no customer credit necessary
                                if (saveAction == 'SaveClose')
                                    submitForm();
                                else
                                    submitFormandNew();
                            else
                                promptCustomerCredit();
                        }
                    });

                $(".submit-button-no-prompt").click(

                    function () {
                        var flg = true;
                        if ($("#select_ReasonList").val() == "") {
                            flg = false;
                            $("#select_ReasonList").css("border-color", "red");
                        }
                        if ($("#creditDesc").val() == "") {
                            flg = false;
                            $("#creditDesc").css("border-color", "red");
                        }

                        var CCflg = validateCreditAmount();

                        if (flg && CCflg) {
                            var buttonName = $(this).attr("name");
                            saveAction = buttonName;
                            if (saveAction == 'SaveClose')
                                submitForm();
                            else
                                submitFormandNew();
                        }
                    }
                );



            },
            error: function () {
                alert("Content load failed.");
            }
        });

        /*if (id == 2) {
            $("#modal_applycreditformconsolidated").modal({ backdrop: 'static' });
        }
        else {
            $("#modal_applycreditform").modal({ backdrop: 'static' });
        }*/
    };
     function submitFormandNew() {
            $('.creditfieldcurrency').each(function () {
                $('#' + this.id).inputmask('remove');
            });

            $.blockUI();//$.blockUI({ message: $('#throbberBlock'), theme: true, baseZ: 12000 });

            $("#btnSaveClose").prop('disabled', true);
            $("#btnSaveNew").prop('disabled', true);
            $("#btnSaveApprove").prop('disabled', true);
            $.ajax({
                type: "POST",
                url: '@Url.Action("ApplyCredit","AccountReceivable","Portal")',
                data: $("#form_applycreditform").serialize() + "&action=" + saveAction,
                dataType: 'json',
                success: function (data) {
                    $('#modal_applycreditform').hide()
                    $("#btnSaveClose").prop('disabled', false);
                    $("#btnSaveNew").prop('disabled', false);
                    $("#btnSaveApprove").prop('disabled', false);
                    @*document.location.href = '@Url.Action("CustomerCredits", "AccountReceivable","Portal")';*@
                    initTable();
                    $(".modal-backdrop").hide();
                    $.unblockUI();
                },
                error: function (error) {
                    $("#form_applycreditform").modal('hide');
                    $("#btnSaveClose").prop('disabled', false);
                    $("#btnSaveNew").prop('disabled', false);
                    $("#btnSaveApprove").prop('disabled', false);
                    $(".modal-backdrop").hide();
                    $.unblockUI();
                }
            });

        }
    function submitForm() {

        $('.creditfieldcurrency').each(function () {
            $('#' + this.id).inputmask('remove');
        });

        $("#btnSaveClose").prop('disabled', true);
        $("#btnSaveNew").prop('disabled', true);
        $("#btnSaveApprove").prop('disabled', true);
        $.ajax({
            type: "POST",
            url: '@Url.Action("ApplyCredit","AccountReceivable","Portal")',
            data: $("#form_applycreditform").serialize() + "&action=" + saveAction,
            dataType: 'json',
            success: function (data) {
                $('#modal_applycreditform').hide()
                $("#btnSaveClose").prop('disabled', false);
                $("#btnSaveNew").prop('disabled', false);
                $("#btnSaveApprove").prop('disabled', false);
                //document.location.href = data;
                initTable();
                $(".modal-backdrop").hide();
            },
            error: function (error) {
                $("#div_applycreditform").modal('hide');
                $("#btnSaveClose").prop('disabled', false);
                $("#btnSaveNew").prop('disabled', false);
                $("#btnSaveApprove").prop('disabled', false);
                $(".modal-backdrop").hide();
            }
        });
    }


    function promptCustomerCredit() {

        var creditAmt = parseFloat(removeFormatting($("#newBalance").val()));
        if (creditAmt < 0)
            creditAmt = -creditAmt;

        var customerName = $("#lblCustomerName").text();

        $("#lblPromptCreditAmt").text("$" + formatCurrency(creditAmt));
        $("#lblPromptCreditCustomerName").text(customerName.trim());
        $("#modal_customercreditprompt").modal({ backdrop: 'static' });
    }

    function onClickYesApplyCustomerCredit() {
        $("#modal_customercreditprompt").modal('hide');
        submitForm();
    }

    function onClickNoApplyCustomerCredit() {
        $("#modal_customercreditprompt").modal('hide');
    }
    function applyMaskCurrency(id) {
        $(id).inputmask("currency", {
            alias: 'currency',
            prefix: '$ ',
            digits: 2,
            autoUnmask: true,
            removeMaskOnSubmit: true,
            unmaskAsNumber: true,
            allowPlus: false,
            allowMinus: true,
            autoGroup: true,
            positionCaretOnTab: false,
            positionCaretOnClick: "select",
            groupSeparator: ",",
        });
    }

    function showEditCustomerInfo(Id) {

        var sURL = '@Url.Action("PendingApprovalListEditCustomerPopup", "Customer", new { area = "Portal" })?id=' + Id;
        $.ajax({
            type: "GET",
            url: sURL,
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (data) {
                $('#form_Billingsetting').html(data);
                $("#ModalEditCustomerInfo").modal({ backdrop: 'static' });
                $(".input-group-btn").click(function () {
                    $(this).prev().trigger("focus");
                    $(this).prev().trigger("focus");
                });
                $(".date-picker").datepicker();
                $(".edit").attr("disabled", "disabled");
                $(".edit").attr("readonly", "readonly");

                $("#btnSave").prop("disabled", "false");
                $("#btnSave").prop("readonly", "true");
                $("#btnCancel").prop("disabled", "false");
                $("#btnCancel").prop("readonly", "true");
                $("#btnSave").hide();
                $("#btnCancel").hide();

                $(".editmain1").attr("disabled", "disabled");
                $(".editmain1").attr("readonly", "readonly");
                $(".editmain").attr("disabled", "disabled");
                $(".editmain").attr("readonly", "readonly");

                $(".editbill1").attr("disabled", "disabled");
                $(".editbill1").attr("readonly", "readonly");
                $(".editbill").attr("disabled", "disabled");
                $(".editbill").attr("readonly", "readonly");

                //$(".EditBtn").show(); //edit disable
                $(".EditBtn").hide();
                $(".SaveBtn").hide();
                $(".CancelBtn").hide();


            },
            error: function () {
                alert("Content load failed.");
            }
        });

    }



    function btnFranchiseeBillingDetailPopup(id) {

        var sURL = '@Url.Action("FranchiseeBillingDetailPopup", "AccountsPayable", new { area = "Portal" })?Id=' + id;
        $.ajax({
            type: "GET",
            url: sURL,
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (data) {
                $('#form_FranchiseeBillingDetail').html(data);
                $("#modal_FranchiseeBillingDetail").modal({ backdrop: 'static' });
                $("#modal_FranchiseeBillingDetail").draggable();
            },
            error: function () {
                alert("Content load failed.");
            }
        });
    };
    function btnInvoiceWinClose() {
        $("#modal_FranchiseeBillingDetail").modal('hide');
    }
    function btnInvoiceBillClose() {
        $("#form_FranchiseeBillingDetail").modal('hide');
    }
    function btnOpenCusCreditDetail(id) {

        $.blockUI();
        var sURL = '@Url.Action("CustomerCreditDetailPopup", "AccountReceivable", new { area = "Portal" })?Id=' + id;
        $.ajax({
            type: "GET",
            url: sURL,
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (data) {
                $('#form_CusCreditDetails').html(data);
                $("#modal_CusCreditDetail").modal({ backdrop: 'static' });
                $('.modal-dialog').draggable();
                $.unblockUI();
            },
            error: function () {
                alert("Content load failed.");
            }
        });
    };
</script>