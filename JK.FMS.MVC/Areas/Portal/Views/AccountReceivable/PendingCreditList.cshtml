
@{
    ViewBag.Title = "PendingCreditList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section styles{
    <link href="~/Content/admin/assets/global/plugins/jquery-ui/jquery-ui.min.css" rel="stylesheet" />
    <link href="@Url.Content("~/Content/admin/assets/global/plugins/bootstrap-multiselect/css/bootstrap-multiselect.css")" rel="stylesheet" />

    <style type="text/css">
        .topheader {
            font-size: 14px;
            font-weight: bold;
            color: #FFF !important;
            text-transform: uppercase;
            margin-top: 3px;
        }


        .lbl-p5 {
            padding: 5px;
        }

            .lbl-p5.red {
                color: red;
            }


            .lbl-p5.green {
                color: lightgreen;
            }

        input[type="text"].txtcolon:before {
            content: ": ";
        }

        .credit-field {
            width: 80px !important;
        }

        .alignRight {
            text-align: right;
        }

        .alignCenter {
            text-align: center;
        }

        .close {
            background-image: url(/Content/admin/assets/global/img/stick_close.png) !important;
            height: 12px !important;
            width: 12px !important;
            margin-top: 0px !important;
        }

        .custom-listbox .headerbox {
            padding: 3px 0px 3px 5px;
            font-weight: normal;
        }

        .custom-listbox {
            margin-top: 4px;
            margin-bottom: 0px;
        }

        .row {
            margin: 0;
            padding: 3px 0;
        }

        .btn.multiselect {
            text-align: left;
            padding-top: 4px;
            padding-bottom: 4px;
            font-size: 11px;
            color: #555;
        }

        .multiselect .caret {
            right: 0;
            position: absolute;
            margin-top: 8px;
            margin-right: 8px;
        }

        .multiselect-container.dropdown-menu {
            text-transform: none;
            font-size: 14px;
            padding-left: 30px;
        }

        .no-padding {
            padding: 0;
        }

        #modal_RegionModel .modal-content {
            width: 55% !important;
            margin-left: 30% !important;
        }
    </style>

}

<form class="form-horizontal" role="form" id="form_creditlist" action="@Url.Action("ApproveCredits","AccountReceivable","Portal")" method="post">
    @Html.Hidden("creditIds")
    <div class="headerbox">
        <div class="row" style="background-color: #3598DC;color: #fff;">
            <div class="col-md-12 no-padding">
                <div class="alignCenter">
                    <div class="col-md-4" style="text-align:right;">
                    </div>
                    <div class="col-md-4 topheader">
                        CREDIT - PENDING APPROVAL
                    </div>
                    <div class="col-md-2 pull-right" style="padding-right:5px;">
                        <div style="display:table-cell;padding-right: 5px;">
                            Region
                        </div>
                        <div style="display:table-cell;width:100%;">
                            @if (ViewBag.RegionList != null)
                            {
                                <select class="form-control input-sm" multiple="multiple" id="regionlist" style="display:none;">
                                    @foreach (var item in (SelectList)ViewBag.RegionList)
                                    {
                                        <option @(item.Selected ? "selected" : "") value="@item.Value">@item.Text</option>
                                    }
                                </select>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="custom-listbox" id="divfranchiseList" style="margin-top:4px;margin-bottom:3px;">
        <div class="headerbox">
            <div class="row no-padding">
                <div class="col-sm-1 page-size">
                    <select class="form-control input-sm" id="pageSize" style="padding-left:6px;">
                        <option value="-1">All</option>
                        <option value="100" selected>100</option>
                        <option value="50">50</option>
                        <option value="25">25</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <div class="input-icon">
                        <i class="icon-magnifier icon-align-right" style="margin-top: 8px;"></i>
                        <input id="input_Search" type="text" required name="customernumber" autocomplete="off" placeholder="Search" value="" class="form-control input-sm typeahead" />
                    </div>
                </div>

                <div class="col-md-5 pull-right no-padding">
                  
                    <div class="col-md-10 pull-right no-padding" style="text-align:center;">
                        <div class="col-md-6 no-padding" style="margin-left:30px;">
                            <select id="select_timeduration" class="form-control input-sm">
                                <option value="1">This Week</option>
                                <option value="2">This Week-to-date</option>
                                <option value="3" selected="selected">This Month</option>
                                <option value="4">This Month-to-date</option>
                                <option value="5">This Quarter</option>
                                <option value="6">This Quarter-to-date</option>
                                <option value="7">This Fiscal Year</option>
                                <option value="8">This Fiscal Year-to-date</option>
                                <option value="9">Today</option>
                                <option value="10">Yesterday</option>
                                <option value="11">Last Week</option>
                                <option value="12">Last Month</option>
                                <option value="13">Last Quarter</option>
                                <option value="14">Last Year</option>
                                <option value="15">Custom Date</option>
                            </select>
                        </div>
                        <div class="col-md-5 divspandate no-padding" style="margin-top: 3px; margin-left: 0px; display: block; float: right;" id="divspandate">
                            <span id="spnStartDate"></span> - <span id="spnEndtDate"></span>
                        </div>
                        <div class="col-md-3 no-padding" style="margin-left: 3px; width: 70px; display: none;" id="divSD">
                            <input type="text" name="txtStartDate" id="txtStartDate" value="" class="form-control input-sm date-picker RemovePeriodvalidation" style="padding: 3px;" />
                        </div>
                        <div class="col-md-3 no-padding" style="margin-left: 3px; width: 70px; display: none;" id="divED">
                            <input type="text" name="txtEndtDate" id="txtEndtDate" value="" class="form-control input-sm date-picker RemovePeriodvalidation" style="padding: 3px;" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="tablebox">
        <div class="row padding-tb1">
            <div class="row no-padding">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered table-hover" id="CustomerCreditsList">
                        <thead>
                            <tr>
                                <th style="text-align:center;">
                                    Temp Credit No
                                </th>
                                <th style="text-align:center;width:40px;">
                                    Credit Date
                                </th>
                                <th style="text-align:center;">
                                    Customer Name
                                </th>
                                <th style="text-align:center;">
                                    Reason
                                </th>
                                <th style="text-align:center;width:15%;">
                                    Description
                                </th>
                                <th style="text-align:center;">
                                    Invoice No
                                </th>
                                <th style="text-align:right;width:35px;">
                                    Invoice Amount
                                </th>
                                <th style="text-align:right;width:35px;">
                                    Credit Amount
                                </th>
                                <th style="text-align:center;">Status</th>
                                <th style="text-align:center;">Created By</th>
                                <th style="text-align:center;">Action</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

</form>


<div class="form-horizontal" id="form_CusCreditDetails"></div>
<div id="form_applycreditformDIV"></div>
@*<form class="form-horizontal" role="form" id="form_applycreditform">
    <div class="modal fade custom-model custom-form-design" id="modal_applycreditform" tabindex="-1" role="basic" aria-hidden="true" style="display: none;">
        <div class="modal-dialog" style="width:1000px">
            <div class="modal-content" style="border-radius: 8px;">
            </div>
            <!-- /.modal-content -->
        </div>
    </div>
</form>*@

<div class="modal fade in" id="modal_RegionModel" tabindex="-1" role="basic" aria-hidden="true" style="display: none; padding-right: 17px;">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" style="border-radius: 8px;">
            <div class="modal-header headerbox list" style="padding:0px!important;border-bottom: none;">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true" style="margin-top: 12px !important;margin-right: 12px !important;"></button>
                <h4 class="modal-title text-center" style="margin-top: 0px; margin-bottom: 4px;  padding: 7px!important;font-size: 12px;font-weight: bold;background: #3598DC !important;color: #FFF !important;border: 1px solid #3598DC !important;padding: 0px;text-transform: uppercase;">
                    Select Region
                </h4>
            </div>
            <div class="modal-body form form-horizontal" style="padding-top: 1px;margin-top: -5px;">
                <div class="form-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label class="control-label col-md-12" style="text-align: center;padding: 5px;background-color: #e8e8e8;margin-bottom:5px;font-weight:bold;">Select Region</label>
                                @if (ViewBag.RegionList != null)
                                {
                                    <select class="form-control input-sm" id="selectregionlist">
                                        <option value="">Select Region</option>
                                        @foreach (var item in (SelectList)ViewBag.RegionList)
                                        {
                                            <option @(item.Selected ? "selected" : "") value="@item.Value">@item.Text</option>
                                        }
                                    </select>
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-actions">
                    <div class="col-md-12">
                        <button type="button" name="SaveNew" id="btnRegion" class="btn btn-primary button-next pull-right" onclick="" style="margin-right:0px;">Select Region</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{

    <script src="@Url.Content("~/Areas/Portal/Scripts/ApplyCreditForm.js")" type="text/javascript"></script>

    <script>

        var invoiceList;

        var saveAction;
        $(window).load(function () {
            if ('@ViewBag.selectedRegionId' == 0) {
                $("#modal_RegionModel").modal({ backdrop: 'static' });
            } else {
                refreshTable();
            }
        });
        function getTableURL() {

            var _regionId = $("#regionlist").val();
            var _fromDateVal = $('#spnStartDate').text();
            var _toDateVal = $('#spnEndtDate').text();
            var _searchtextVal = "";
            var sURL = '@Url.Action("PendingCreditListResultData", "AccountReceivable", new { area = "Portal" })?rgId=' + _regionId + '&fd=' + _fromDateVal + '&td=' + _toDateVal + '&st=' + _searchtextVal

            return sURL;
        }

        function refreshTable() {
            var url = getTableURL();
            invoiceList.ajax.url(url).load();
        }



        jQuery(document).ready(function () {
            $("#regionlist").multiselect({
                includeSelectAllOption: false,
                selectAllText: 'Select all',
                buttonWidth: '100%',
                nonSelectedText: 'Select region..',
                dropRight: true,
                numberDisplayed: 2,
            });

            $("#btnRegion").click(function () {
                if ($("#selectregionlist").val() != "") {
                    $("#regionlist option[value='" + $("#selectregionlist").val() + "']").attr("selected", 1);
                    $("#regionlist").multiselect("refresh");
                    refreshTable();
                    $(".close").click();
                }
            });

            $("#pageSize").change(function () {
                setPaging();
            });

            $(".input-group-btn").click(function () {
                $(this).prev().trigger("focus");
                $(this).prev().trigger("focus");
            });


            $("#regionlist").change(function () {
                refreshTable();
            })

            $('#divspandate').show();
            $('#divSD').hide();
            $('#divED').hide();

            firstDay = moment().subtract(0, 'month').startOf('month').toString();
            lastDay = moment().subtract(0, 'month').endOf('month').toString();

            $('#spnStartDate').html(moment(firstDay).format('L'));
            $('#spnEndtDate').html(moment(lastDay).format('L'));
            //$('#txtStartDate').inputmask("mm/dd/yyyy", {});
            //$('#txtEndtDate').inputmask("mm/dd/yyyy", {});

            //setSearchTime(3);
            //var sURL = getTableURL();

            var CurrentLink = getTableURL();

            invoiceList = $('#CustomerCreditsList').DataTable({
                "bAutoWidth": false,
                cache: false,
                "order": false,
                "iDisplayLength": 25,
                "aLengthMenu": [[5, 7, 10, 25, 50, -1], [5, 7, 10, 25, 50, "All"]],
                "dom": "<'table-responsive't><'bottom'ip><'clear'>",
                "aaSorting": [[0, "desc"]],
                "sAjaxSource": getTableURL(),
                //"sAjaxDataProp": "aadata",  // Internationalisation. For more info refer to http://datatables.net/manual/i18n
                "rowCallback": function (nRow, data) {

                },
                "aoColumns": [
                    {
                        "sName": "TransactionNumber",
                        "bSortable": true,
                        "mRender": function (data, type, full) {
                            return '<a href="javascript:void(0);" onclick="btnOpenUpdateCreditForm(' + full.CreditId + ', '+full.IsTaxCredit+')">' + full.TransactionNumber + '</a>';
                        }
                    },
                    {
                        "sName": "CreditDate",
                        "bSortable": true,
                        "sClass": "alignCenter",
                        "mRender": function (data, type, full) {
                            return full.CreditDate;
                        }
                    },
                    {
                        "sName": "CustomerName",
                        "bSortable": true,
                        "mRender": function (data, type, full) {
                            return full.CustomerName;
                        }
                    },
                    {
                        "sName": "Reason",
                        "bSortable": true,
                        "mRender": function (data, type, full) {
                            return full.Reason;
                        }
                    },
                    {
                        "sName": "Description",
                        "bSortable": true,
                        "mRender": function (data, type, full) {
                            return full.Description;
                        }
                    },
                    {
                        "sName": "InvoiceNo",
                        "bSortable": true,
                        "sClass": "alignCenter",
                        "mRender": function (data, type, full) {
                            return full.InvoiceNo;
                        }
                    },
                    {
                        "sName": "InvAmount",
                        "bSortable": true,
                        "sClass": "alignRight",
                        "mRender": function (data, type, full) {
                            return '$'+full.InvAmount.toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString();
                        }
                    },
                    {
                        "sName": "CrdAmount",
                        "bSortable": true,
                        "sClass": "alignRight",
                        "mRender": function (data, type, full) {
                            return '$' +full.CrdAmount.toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString();
                        }
                    },
                    {
                        "sName": "Status",
                        "bSortable": true,
                        "sClass": "alignCenter",
                        "mRender": function (data, type, full) {
                            return full.Status;
                        }
                    },
                    {
                        "sName": "Created By",
                        "bSortable": true,
                        "sClass": "alignCenter",
                        "mRender": function (data, type, full) {
                            return full.CreatedBy;
                        }
                    },
                    {
                        "sName": "Action",
                        "bSortable": true,
                        "sClass": "alignCenter",
                        "mRender": function (data, type, full) {
                            var _strR = '<a href="javascript:void(0);" onclick="btnOpenUpdateCreditForm(' + full.CreditId + ',' + full.IsTaxCredit + ')""><i class="fa fa-pencil" aria-hidden="true"></i></a>&nbsp;&nbsp;&nbsp;&nbsp;';
                            _strR += '<a href="javascript:void(0);" onclick="btnDeleteCreditForm(' + full.CreditId + ')"><i class="fa fa-trash-o" aria-hidden="true"></i></a>';

                            return _strR;
                        }
                    },
                ]
            });

            $("#input_Search").keyup(function () {
                var table = $("#CustomerCreditsList").DataTable();
                table.search($(this).val()).draw();
            });


            $("#select_dateRange").change(function () {
                var value = this.value;
                setSearchTime(value);
                refreshTable();
            });

            $(".search-field").change(function () {
                refreshTable();
            });

            $(document).on("click", ".submit-button", function () {

                var balance = parseFloat($("#newBalance").val());
                var buttonName = $(this).attr("name");

                saveAction = buttonName;
                //if (balance >= 0) // no customer credit necessary
                submitForm();
                //else
                //    promptCustomerCredit();
            });

            //$(document).on("click", ".submit-button-no-prompt-approve", function () {
            //    var buttonName = $(this).attr("name");
            //    saveAction = buttonName;
            //    submitForm();
            //});

            //$(document).on("click", ".submit-button-no-prompt-reject", function () {
            //    var buttonName = $(this).attr("name");
            //    saveAction = buttonName;
            //    submitForm();
            //});

        })

        function setPaging() {
            var z = $("#pageSize").val();
            var table = $("#CustomerCreditsList").DataTable();
            if (z > 0) {
                table.page.len(z).draw();
            }
            else if (z == -1) {
                table.page.len(table.rows().count()).draw();
            }
            else {
                table.page.page.len(25).draw();
            }
        }

        function btnDeleteCreditForm(id) {

            var sURL = '@Url.Action("PendingCreditTempDelete", "AccountReceivable", new { area = "Portal" })?Id=' + id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {

                    var url = '@Url.Action("PendingCreditList", "AccountReceivable", new { area = "Portal" })';
                    location.href = url;
                },
                error: function () {
                    alert("Content load failed.");
                }
            });
        };
        function btnOpenUpdateCreditForm(id, istaxcredit) {
            var sURL = '@Url.Action("UpdateCreditFormPending", "AccountReceivable", new { area = "Portal" })?Id=' + id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#form_applycreditformDIV').html(data);
                    $(".date-picker").datepicker();
                    $(".input-group-btn").click(function () {
                        $(this).prev().trigger("focus");
                        $(this).prev().trigger("focus");
                    });
                    if (istaxcredit == true) {
                        $("#modal_applycredittaxform").modal({ backdrop: 'static' });
                    }
                    else {
                        $("#modal_applycreditform").modal({ backdrop: 'static' });
                    }
                    initCreditForm();

                    $('#btnSubmit').hide();
                    $('.creditfieldcurrency').prop('disabled', true); 
                    
                    
                    $('#chkPercentage').prop('disabled', true); 
                    $('#chkAmount').prop('disabled', true); 
                    $('input[name=rdApplyAmtType]').prop('disabled', true); 


                    applyMaskCurrency('.creditfieldcurrency')
                },
                error: function () {
                    alert("Content load failed.");
                }
            });
        };

        function submitForm() {
            $.ajax({
                type: "POST",
                url: '@Url.Action("UpdateCreditFormPendingApproval", "AccountReceivable","Portal")',
                data: $("#form_applycreditform").serialize() + "&action=" + saveAction,
                dataType: 'json',
                success: function (data) {
                    document.location.href = data;
                }
            });
        }

        var date = new Date(), y = date.getFullYear(), m = date.getMonth();
        var firstDay;
        var lastDay;
        Date.prototype.getWeek = function (start) {
            //Calcing the starting point
            start = start || 0;
            var today = new Date(this.setHours(0, 0, 0, 0));
            var day = today.getDay() - start;
            var date = today.getDate() - day;

            // Grabbing Start/End Dates
            var StartDate = new Date(today.setDate(date));
            var EndDate = new Date(today.setDate(date + 6));
            return [StartDate, EndDate];
        }


        $('#txtStartDate').change(function () {
            $('#spnStartDate').html($(this).val());
            if ($('#txtStartDate').val() != '' && $('#txtEndtDate').val() != '')
                refreshTable();
        });
        $('#txtEndtDate').change(function () {
            $('#spnEndtDate').html($(this).val());
            if ($('#txtStartDate').val() != '' && $('#txtEndtDate').val() != '')
                refreshTable();
        });
        $('#select_timeduration').change(function () {
            //alert($(this).val());
            $('#spnStartDate').html('');
            $('#spnEndtDate').html('');
            $('#divspandate').show();
            $('#divSD').hide();
            $('#divED').hide();
            switch (parseInt($(this).val())) {
                case 1:
                    firstDay = moment().startOf('isoWeek').toString();
                    lastDay = moment().endOf('isoWeek').toString();
                    break;
                case 2:
                    //code block
                    firstDay = moment().startOf('isoWeek').toString();
                    lastDay = new Date().toString();
                    break;
                case 3:
                    firstDay = moment().subtract(0, 'month').startOf('month').toString();
                    lastDay = moment().subtract(0, 'month').endOf('month').toString();
                    break;
                case 4:
                    //code block
                    firstDay = moment().subtract(0, 'month').startOf('month').toString();
                    lastDay = new Date().toString();
                    break;
                case 5:
                    //code block
                    firstDay = moment().startOf('quarter').toString();
                    lastDay = moment().endOf('quarter').toString();
                    break;
                case 6:
                    //code block
                    firstDay = moment().startOf('quarter').toString();
                    lastDay = new Date().toString();
                    break;
                case 7:
                    //code block
                    firstDay = moment().startOf('year').toString();;
                    lastDay = moment().endOf('year').toString();
                    break;
                case 8:
                    //code block
                    firstDay = moment().startOf('year').toString();
                    lastDay = new Date().toString();
                    break;
                case 9:
                    //code block
                    firstDay = moment().toString();
                    lastDay = moment().toString();
                    break;
                case 10:
                    //code block
                    firstDay = moment().add(-1, 'days').toString();
                    lastDay = moment().add(-1, 'days').toString();
                    break;
                case 11:
                    //code block
                    firstDay = moment().subtract(1, 'week').startOf('week').toString();
                    lastDay = moment().subtract(1, 'week').endOf('week').toString();
                    break;
                case 12:
                    //code block
                    firstDay = moment().subtract(1, 'month').startOf('month').toString();
                    lastDay = moment().subtract(1, 'month').endOf('month').toString();
                    break;
                case 13:
                    //code block
                    firstDay = moment().subtract(1, 'quarter').startOf('quarter').toString();
                    lastDay = moment().subtract(1, 'quarter').endOf('quarter').toString();
                    break;
                case 14:
                    //code block
                    firstDay = moment().subtract(1, 'year').startOf('year').toString();
                    lastDay = moment().subtract(1, 'year').endOf('year').toString();
                    break;
                case 15:
                    //code block
                    $('#divspandate').hide();
                    $('#divSD').show();
                    $('#divED').show();
                    $('#txtStartDate').val('');
                    $('#txtEndtDate').val('')
                    break;
                default:
                    //code block


            }
            $('#spnStartDate').html(moment(firstDay).format('L'));
            $('#spnEndtDate').html(moment(lastDay).format('L'));

            refreshTable();
            //$('#txtStartDate').val(moment(firstDay).format('L'));
            //$('#txtEndtDate').val(moment(lastDay).format('L'));
            //$('#txtStartDate').inputmask("mm/dd/yyyy", {});
            //$('#txtEndtDate').inputmask("mm/dd/yyyy", {});
            //alert(firstDay)
            //alert(lastDay)
            // _bindTrasaction($('#select_transactionstype').val(), moment(firstDay).format('L'), moment(lastDay).format('L'));
        });



        $('#chkAll').change(function () {
            if ($(this).is(":checked")) {
                $('input[rel="mgglchk"]').prop('checked', true);
            }
            else {
                $('input[rel="mgglchk"]').prop('checked', false);
            }
        });

        function btnApproveSelected() {
            de
            var Ids = getSelectedIds();
            if (Ids != "") {
                $("#creditIds").val(Ids);
                $("#form_creditlist").submit();
            }
        }

        function getSelectedIds() {
            var Ids = "";
            $('input[rel="mgglchk"]').each(function (item) {
                if ($(this).is(":checked")) {
                    var mId = $(this).attr('relid');
                    if (Ids != "")
                        Ids = Ids + "," + mId;
                    else
                        Ids = mId;
                }
            });
            return Ids;
        }

    </script>
}



