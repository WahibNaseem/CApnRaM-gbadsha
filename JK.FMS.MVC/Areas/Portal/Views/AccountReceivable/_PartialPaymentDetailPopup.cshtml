@using JKViewModels.Common
@model JKViewModels.AccountReceivable.PaymentDetailsPopupModel

@{
    var IsEdit = false;
    var IsDeletePer = false;
    JKApi.Core.Common.ClaimView _claim = JKApi.Core.Common.ClaimView.Instance;
    var getPermission = _claim.GETCLAIM_ED_PERMISSION();
    if (getPermission != null)
    {
        string enumName = EDPermission.Payment_Detail_Popup.ToString();
        var validIsApprove = getPermission.Where(x => x.EnumName == enumName && x.IsEdit).FirstOrDefault();
        if (validIsApprove != null && validIsApprove.IsEdit)
        {
            IsEdit = true;
        }
    }
}

@section styles{
    <link href="@Url.Content("~/Content/admin/assets/global/plugins/datatables/datatables.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/admin/assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.css")" rel="stylesheet" type="text/css" />
    <style type="text/css">
        tr > td {
            font-size: 12px !important;
            padding: 4px !important;
        }

        /*tr > th {
            font-size: 11px !important;
            text-transform: uppercase;
        }*/

        .row {
            margin: 0;
            padding: 5px 0;
        }

        .opendiv {
            padding: 4px;
            background-color: gold;
            text-align: center;
            font-weight: bold;
            color: #ffffff;
        }

        .closeddiv {
            padding: 4px;
            background-color: limegreen;
            text-align: center;
            font-weight: bold;
            color: #ffffff;
        }

        .overpaiddiv {
            padding: 4px;
            background-color: deepskyblue;
            text-align: center;
            font-weight: bold;
            color: #ffffff;
        }

        .overduediv {
            padding: 4px;
            background-color: orangered;
            text-align: center;
            font-weight: bold;
            color: #ffffff;
        }

        .btn {
            padding: 3px 12px;
            font-size: 12px;
        }

        table.borderClass, td, th {
            border: 1px solid black;
        }
    </style>
}

<div class="modal fade custom-model custom-form-design" id="modal_paymentdetail" tabindex="-1" role="basic" aria-hidden="true" style="display: none;">
    <div class="modal-dialog" style="width:1000px">
        <div class="modal-content" style="border-radius: 8px;">
            <div class="modal-header headerbox list" style="padding:0px!important;border-bottom: none;">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true" style="margin-top: 12px !important;margin-right: 12px !important;"></button>

                <h4 class="modal-title" style="margin-top: 0px; margin-bottom: 4px;  padding: 7px!important;font-size: 12px;font-weight: bold;background: #3598DC !important;color: #FFF !important;border: 1px solid #3598DC !important;padding: 0px;border-radius: 8px 8px 0 0;text-transform: uppercase;">
                    Payment Detail
                </h4>
            </div>
            <div class="modal-body" id="printDiv">
                <div class="row">
                    <div class="col-md-4">
                        <div class="table-responsive">
                            <table class="table table-bordered">
                                <tr>
                                    <td class="text-right">Transaction No.</td>
                                    <td class="text-center"><span>@Model.TransactionNumber</span></td>
                                </tr>
                                <tr>
                                    <td class="text-right">Payment Date</td>
                                    <td class="text-center"><span>@Convert.ToDateTime(Model.PaymentDate).ToString("MM/dd/yyyy")</span></td>
                                </tr>
                                <tr>
                                    <td class="text-right">Payment Type</td>
                                    <td class="text-center"><span>@Model.PaymentType</span></td>
                                </tr>
                                <tr>
                                    <td class="text-right">Check/TRX Amount</td>
                                    <td class="text-center"><span>@string.Format("{0:C}", Model.PaymentAmount)</span></td>
                                </tr>
                            </table>
                        </div>
                    </div>
                    <div class="col-md-4">
                    </div>
                    <div class="col-md-4">
                        @*<div class="custom-form portlet light" style="max-width:400px;margin: 0px auto;min-height: 100px;">
                    <div class="headerbox">
                        <div class="row">
                            <div class="col-md-12">
                                &nbsp;&nbsp;&nbsp;&nbsp;CUSTOMER #: @Html.DisplayFor(one => one.CustomerNo)
                            </div>
                        </div>
                    </div>
                    <div class="portlet-body form" style="border:1px solid #e7ecf1;">
                        <div class="form-body">
                            <div class="row" style="padding: 3px;margin: 0;">@Html.DisplayFor(one => one.CustomerName)</div>
                            <div class="row" style="padding: 3px;margin: 0;">@Html.DisplayFor(one => one.Address1),@Html.DisplayFor(one => one.Address2)</div>
                            <div class="row" style="padding: 3px;margin: 0;">@Html.DisplayFor(one => one.City), @Html.DisplayFor(one => one.StateName) @Html.DisplayFor(one => one.PostalCode)</div>
                            <div class="row" style="padding: 3px;margin: 0;">@(Model.Phone != null && Model.Phone != "" ? String.Format("{0: (###) ###-####}", long.Parse(Model.Phone)) : "")</div>
                        </div>
                    </div>
                </div>*@
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <table class="table table-bordered table-responsive borderClass" width="100%">
                            <thead>
                                <tr style="border:2px solid #b3a9a9;">
                                    <th style="text-align:center;border:2px solid #b3a9a9;">Type</th>
                                    <th style="text-align:center;border:2px solid #b3a9a9;">Customer No</th>
                                    <th style="text-align:center;border:2px solid #b3a9a9;">Customer Name</th>
                                    <th style="text-align:center;border:2px solid #b3a9a9;">Date</th>
                                    <th style="text-align:center;border:2px solid #b3a9a9;">Check/Invoice No.</th>
                                    <th style="text-align:center;border:2px solid #b3a9a9;">Description</th>
                                    <th style="text-align:center;border:2px solid #b3a9a9;">Trx Amount</th>
                                    <th style="text-align:center;border:2px solid #b3a9a9;">Balance</th>
                                </tr>
                            </thead>
                            <tbody>

                                @foreach (var item in Model.PaymentDetailType)
                                {
                                    <tr style="border:2px solid #b3a9a9;">
                                        <td style="text-align:center;border:2px solid #b3a9a9;">@item.Type </td>
                                        <td style="text-align:center;border:2px solid #b3a9a9;">@item.CustomerNo</td>
                                        <td style="text-align:left;border:2px solid #b3a9a9;">@item.CustomerName</td>
                                        <td style="text-align:center;border:2px solid #b3a9a9;">@Convert.ToDateTime(item.Date).ToString("MM/dd/yyyy")  </td>
                                        <td style="text-align:center;border:2px solid #b3a9a9;">@item.TransactionNumber</td>
                                        <td style="text-align:center;border:2px solid #b3a9a9;font-size:11px;">@item.Description </td>
                                        @if (item.Type == "Payment")
                                        {

                                            <td style="text-align:right;color:red;border:2px solid #b3a9a9;">(@string.Format("{0:c}", item.Amount))</td>
                                            <td style="text-align:right;border:2px solid #b3a9a9;">@string.Format("{0:c}", item.BalanceAmount)</td>
                                            @*<td style="text-align:right;color:red;border:2px solid #b3a9a9;">(@string.Format("{0:c}", item.Amount))</td>
                                    <td style="text-align:right;border:2px solid #b3a9a9;"> </td>*@
                                        }
                                        else
                                        {
                                            <td style="text-align:right;border:2px solid #b3a9a9;">@string.Format("{0:c}", item.Amount)</td>

                                            if (item.BalanceAmount > 0)
                                            {
                                                <td style="text-align:right;color:red;border:2px solid #b3a9a9;">(@string.Format("{0:c}", item.BalanceAmount))</td>
                                            }
                                            else
                                            {
                                                <td style="text-align:right;border:2px solid #b3a9a9;">@string.Format("{0:c}", item.BalanceAmount)</td>
                                            }


                                        }

                                    </tr>
                                }
                                @*@if (Model.PaymentDetailType.Count() > 1 && Model.PaymentDetailType[1] != null && Model.PaymentDetailType[1].Type == "Payment")
                        {
                            <tr style="border:2px solid #b3a9a9;">
                                <td style="text-align:center;border:2px solid #b3a9a9;">@Model.PaymentDetailType[1].Type </td>
                                <td style="text-align:center;border:2px solid #b3a9a9;"> @Convert.ToDateTime(Model.PaymentDetailType[1].Date).ToString("MM/dd/yyyy")  </td>
                                <td style="text-align:center;border:2px solid #b3a9a9;"> @Model.PaymentDetailType[1].Number</td>
                                <td style="text-align:center;border:2px solid #b3a9a9;">@Model.PaymentDetailType[1].Description </td>
                                @if (Model.PaymentDetailType[1].AmountTypeListId == 2)
                                {
                                    <td style="text-align:right;color:red;border:2px solid #b3a9a9;">(@string.Format("{0:c}", Model.PaymentDetailType[1].Amount))</td>
                                    <td style="text-align:right;border:2px solid #b3a9a9;"> </td>
                                }
                                else
                                {
                                    <td style="text-align:right;border:2px solid #b3a9a9;"> </td>
                                    <td style="text-align:right;color:red;border:2px solid #b3a9a9;">(@string.Format("{0:c}", Model.PaymentDetailType[1].Amount))</td>
                                }

                            </tr>
                        }

                        @if (Model.PaymentDetailType.Count() > 0 && Model.PaymentDetailType[0] != null && Model.PaymentDetailType[0].Type == "Payment")
                        {
                            <tr style="border:2px solid black;">
                                <td style="text-align:center;border:2px solid #b3a9a9;">@Model.PaymentDetailType[0].Type </td>
                                <td style="text-align:center;border:2px solid #b3a9a9;"> @Convert.ToDateTime(Model.PaymentDetailType[0].Date).ToString("MM/dd/yyyy")  </td>
                                <td style="text-align:center;border:2px solid #b3a9a9;"> @Model.PaymentDetailType[0].Number</td>
                                <td style="text-align:center;border:2px solid #b3a9a9;">@Model.PaymentDetailType[0].Description </td>
                                @if (Model.PaymentDetailType[0].AmountTypeListId == 1)
                                {

                                    <td style="text-align:right;border:2px solid #b3a9a9;">@string.Format("{0:c}", Model.PaymentDetailType[0].Amount)</td>
                                    <td style="text-align:right;border:2px solid #b3a9a9;"> </td>
                                }
                                else
                                {
                                    <td style="text-align:right;border:2px solid #b3a9a9;"> </td>
                                    <td style="text-align:right;border:2px solid #b3a9a9;">@string.Format("{0:c}", Model.PaymentDetailType[0].Amount)</td>
                                }

                            </tr>
                        }*@

                            </tbody>
                        </table>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-3 text-right">
                        Memo/Notes:
                    </div>
                    <div class="col-md-9 text-right">
                        <textarea class="form-control input-sm" rows="2">@Model.Note</textarea>
                    </div>
                </div>
                @if (IsEdit)
                {
                    <div class="row">
                        <div class="col-md-2">
                            <button type="button" class="btn btn-primary button-next" style="margin-right:10px;" onclick="btnReversalPaymentPP(@Model.PaymentId)">Revert Payment <i class="fa fa-edit"></i></button>
                        </div>
                    </div>
                    @*<div class="row">
                        <div class="col-md-2">
                            <button type="button" class="btn btn-primary button-next" style="margin-right:10px;" onclick="EditPaymentDetailPopup(@Model.PaymentId)">Edit <i class="fa fa-edit"></i></button>
                        </div>
                    </div>*@
                }
                <br />
                @*@{
            decimal Balance = (Model.InvoiceDetailItems != null ? (decimal)Model.InvoiceDetailItems.Select(s => s.Total).Sum() : 0);
        }*@
                <div class="row">
                    <table class="table table-striped table-bordered table-hover order-column table-responsive" width="100%">
                        <tr>
                            <th colspan="8" style="text-align:center;background: #3598dc;color: #FFF !important;">TRANSACTION HISTORY</th>
                        </tr>
                        @*<tr>
                    <th style="width:50px;text-align:center">Date</th>
                    <th style="text-align:center;width:100px;">TRX Type</th>
                    <th style="width:80px;text-align:center">TRX Number</th>
                    <th style="width:120px;text-align:center">Description</th>
                    <th style="width:70px;text-align:center">Amount </th>
                    <th style="width:50px;text-align:center">Tax</th>
                    <th style="width:70px;text-align:center">Total Payment </th>
                    <th style="width:100px;text-align:center">Invoice Balance</th>
                </tr>*@

                        @foreach (var itemInv in Model.PaymentDetailInvoiceTransactionHistoryList)
                        {

                            decimal Balance = 0; /*(Model.InvoiceDetailItems != null ? (decimal)Model.InvoiceDetailItems.Select(s => s.Total).Sum() : 0)*/;

                            <tr>
                                <th colspan="2" style="text-align:center;background: #3598dc;color: #FFF !important;">Invoice No</th>
                                <th colspan="6" style="text-align:center;background: #3598dc;color: #FFF !important;">@itemInv.InvoiceNo</th>
                            </tr>
                            <tr>
                                <th style="text-align:center;width:100px;">TRX Type</th>
                                <th style="width:60px;text-align:center">Date</th>
                                <th style="width:80px;text-align:center">Customer No</th>
                                <th style="width:80px;text-align:center">Customer Name</th>
                                <th style="width:80px;text-align:center">TRX Number</th>
                                <th style="width:120px;text-align:center">Description</th>
                                @*<th style="width:70px;text-align:center">Amount </th>
                        <th style="width:50px;text-align:center">Tax</th>*@
                                <th style="width:70px;text-align:center">TRX Amount </th>
                                <th style="width:100px;text-align:center"> Balance</th>
                            </tr>

                            foreach (var item in itemInv.InvoiceTransactionHistoryList.Where(o => o.TypeListId == 1).ToList().OrderBy(s => s.TransactionDate).ThenBy(s => s.TransactionNumber))
                            {
                                if (item.AmountTypeListId == 1)
                                {
                                    Balance = Balance - item.Amount;
                                }
                                else
                                {
                                    Balance = Balance + (item.Amount);
                                }
                                <tr>
                                    <td style="white-space:pre-line">@item.MasterTrxTypeListName</td>
                                    <td style="text-align:center">@Convert.ToDateTime(item.TransactionDate).ToString("MM/dd/yyyy")</td>
                                    <td style="text-align:center">@item.CustomerNo</td>
                                    <td style="text-align:left">@item.CustomerName</td>

                                    <td style="text-align:center">
                                        @if (item.MasterTrxTypeListId == (int)JKApi.Business.Enumeration.MasterTrxTypeList.CustomerCredit)
                                        {
                                            <a onclick="OpenCustomerCreditDetail(@item.RefId)" data-dismiss="modal">@item.TransactionNumber</a>
                                        }
                                        else if (item.MasterTrxTypeListId == (int)JKApi.Business.Enumeration.MasterTrxTypeList.CustomerInvoice)
                                        {
                                            <a onclick="showInvoiceDetail(@item.RefId)" data-dismiss="modal">@item.TransactionNumber</a>
                                        }
                                        else
                                        {
                                            @item.TransactionNumber
                                        }
                                    </td>
                                    <td style="text-align:left;font-size:11px;">@item.Description</td>
                                    @*<td style="text-align:right">$@string.Format("{0:N}", item.ExtendedPrice)</td>
                            <td style="text-align:right">$@string.Format("{0:N}", item.TotalTax)</td>*@
                                    <td style="text-align:right">
                                        @if (item.AmountTypeListId == 1)
                                        {
                                            <span style="color:red">($@string.Format("{0:N}", item.Amount))</span>
                                        }
                                        else
                                        {
                                            <span>
                                                @string.Format("{0:c}", item.Amount)
                                            </span>
                                        }

                                    </td>
                                    <td style="text-align:right">
                                        @if (Balance < 0)
                                        {
                                            <span style="color:red">($@string.Format("{0:N}", Math.Abs(Balance)))</span>
                                        }
                                        else
                                        {
                                            <span>
                                                @string.Format("{0:c}", Balance)
                                            </span>
                                        }

                                    </td>
                                </tr>
                            }



                        }


                        @*@if (Model.InvoiceTransactionHistoryList != null)
                {
                    foreach (var item in Model.InvoiceTransactionHistoryList)
                    {
                        if (item.AmountTypeListId == 1)
                        {
                            Balance = Balance - item.Amount;
                        }
                        <tr>
                            <td style="text-align:center">@Convert.ToDateTime(item.TransactionDate).ToString("MM/dd/yyyy")</td>
                            <td style="white-space:pre-line">@item.TransactionTypeName</td>
                            <td style="text-align:center">
                                @if (item.TransactionTypeId == (int)JKApi.Business.Enumeration.MasterTrxTypeList.CustomerCredit)
                                {
                                    <a onclick="OpenCustomerCreditDetail(@item.RefId)" data-dismiss="modal">@item.Number</a>
                                }
                                else if (item.TransactionTypeId == (int)JKApi.Business.Enumeration.MasterTrxTypeList.CustomerInvoice)
                                {
                                    <a onclick="showInvoiceDetail(@item.RefId)" data-dismiss="modal">@item.Number</a>
                                }
                                else
                                {
                                    @item.Number
                                }
                            </td>
                            <td style="text-align:left">@item.Description</td>
                            <td style="text-align:right">$@string.Format("{0:N}", item.ExtendedPrice)</td>
                            <td style="text-align:right">$@string.Format("{0:N}", item.TotalTax)</td>
                            <td style="text-align:right">
                                @if (item.AmountTypeListId == 1)
                                {
                                    <span style="color:red">($@string.Format("{0:N}", item.Amount))</span>
                                }
                                else
                                {
                                    <span>
                                        @string.Format("{0:c}", item.Amount)
                                    </span>
                                }

                            </td>
                            <td style="text-align:right">
                                $@string.Format("{0:N}", Balance)
                            </td>
                        </tr>
                    }
                }*@
                    </table>
                </div>
                <hr />
                <div class="row">
                    <div class="col-md-5">
                        <button type="button" class="btn btn-primary button-next" style="margin-right:10px;" onclick="DetailPaymentListPrint()">Print <i class="fa fa-print"></i></button>
                        <button type="submit" class="btn btn-primary button-next" style="margin-right:10px;" onclick="DetailPaymentListExportPDF()">Export <i class="fa fa-download"></i></button>
                        <button type="button" class="btn btn-primary button-next" style="margin-right:10px;" @*onclick="DetailInvoiceListSendEmail()"*@>Email <i class="fa fa-envelope"></i></button>

                        @*<button type="button" class="btn btn-primary button-next" id="btnPrintModel" onclick="ExportPDFForm()">
                    Print
                    <i class="fa fa-print"></i>
                </button>*@
                    </div>
                    <div class="col-md-2"></div>
                    <div class="col-md-5">
                        <button type="button" class="btn btn-primary button-next  pull-right" data-dismiss="modal">
                            Close
                            <i class="fa fa-close"></i>
                        </button>
                    </div>
                </div>
                @*<div class="modal-footer">
            <div class="row">
                <div class="col-lg-12">
                    <div class="col-md-1">
                        <button type="button" class="btn btn-primary button-next" onclick="PrintPayment(@Model.PaymentId)">Print <i class="fa fa-print"></i></button>
                    </div>
                    <div class="col-md-9"></div>
                    <div class="col-md-2">
                        <button type="button" class="btn btn-primary button-next  pull-right" data-dismiss="modal">
                            Close
                            <i class="fa fa-close"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>*@
            </div>
        </div>
    </div>
</div>
<div class="form-horizontal" id="RenderEditPaymentDetailsPopup"></div>

@helper DisplayPhone(string phoneStr)
    {
        decimal res = 0;
        if (Decimal.TryParse(Model.Phone, out res))
        {
            @String.Format("{0:(###) ###-####}", res);
        }
}

<script type="text/javascript">

    function printDiv() {

        var divToPrint = document.getElementById('printDiv');

        var newWin = window.open('', 'Print-Window');

        newWin.document.open();

        newWin.document.write('<html><body onload="window.print()">' + divToPrint.innerHTML + '</body></html>');

        newWin.document.close();

        setTimeout(function () { newWin.close(); }, 10);

    }

    function PrintPayment(paymentId) {
        if (paymentId != "") {
            var sURL = '@Url.Action("PaymentDetailPrint", "AccountReceivable", new { area = "Portal" })?paymentId=' + paymentId;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    var tUrl = data;
                    printJS({ printable: document.location.origin + tUrl, type: 'pdf', showModal: false });
                },
                error: function () {
                    alert("Content load failed.");
                }
            });
        }
        else {
            alert('Please select payment no to print.')
        }
    }

    function DetailPaymentListExportPDF() {
        window.location.href = '@Url.Action("PaymentListExportPDF")' + "?PaymentIds=" + @Model.PaymentId;
    }

    function DetailPaymentListPrint() {
        var sURL = '@Url.Action("PaymentListPrint", "AccountReceivable", new { area = "Portal" })?PaymentIds=' + @Model.PaymentId;
        $.ajax({
            type: "GET",
            url: sURL,
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (data) {
                var tUrl = data;
                printJS({ printable: document.location.origin + tUrl, type: 'pdf', showModal: false });

            },
            error: function () {
                alert("Content load failed.");
            }
        });
    }
    function EditPaymentDetailPopup(id)
    {
        var sURL = '@Url.Action("EditPaymentDetailPopup", "AccountReceivable", new { area = "Portal" })?Id=' + id;
        $.ajax({
            type: "GET",
            url: sURL,
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (data) {
                $('#RenderEditPaymentDetailsPopup').html(data);
                $("#ModalEDITPaymentDetailsPopup").modal({ backdrop: 'static' });
            },
            error: function () {
                alert("Content load failed.");
            }
        });
    }


    function btnReversalPaymentPP(pid) {
        var sURL = '@Url.Action("ReversalPayment", "AccountReceivable", new { area = "Portal" })?Id=' + pid;
        $.ajax({
            type: "GET",
            url: sURL,
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (data) {
                $("#modal_paymentdetail").modal('hide');
                refreshTable();
                //$('#form_invoicedetail').html(data);
                //$("#modal_invoicedetail").modal({ backdrop: 'static' });
            },
            error: function () {
                alert("Content load failed.");
            }
        });
    }

</script>