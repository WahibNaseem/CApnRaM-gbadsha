@{
    ViewBag.Title = "CreditList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section styles{
    <link href="~/Content/admin/assets/global/plugins/jquery-ui/jquery-ui.min.css" rel="stylesheet" />
    <link href="@Url.Content("~/Content/admin/assets/global/plugins/datatables/datatables.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/admin/assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.css")" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="@Url.Content("~/Content/admin/assets/global/plugins/bootstrap-multiselect/css/bootstrap-multiselect.css")"  />

    <style type="text/css">
        .topheader {
            font-size: 14px;
            font-weight: bold;
            color: #FFF !important;
            text-transform: uppercase;
            margin-top: 3px;
        }


        .lbl-p5 {
            padding: 5px;
        }

            .lbl-p5.red {
                color: red;
            }


            .lbl-p5.green {
                color: lightgreen;
            }

        input[type="text"].txtcolon:before {
            content: ": ";
        }

        .credit-field {
            width: 80px !important;
        }

        .alignRight {
            text-align: right;
        }

        .alignCenter {
            text-align: center;
        }

        .close {
            background-image: url(/Content/admin/assets/global/img/stick_close.png) !important;
            height: 12px !important;
            width: 12px !important;
            margin-top: 0px !important;
        }

        .custom-listbox .headerbox {
            padding: 3px 0px 3px 5px;
            font-weight: normal;
        }

        .custom-listbox {
            margin-top: 4px;
            margin-bottom: 0px;
        }

        .row {
            margin: 0;
            padding: 3px 0;
        }

        .btn.multiselect {
            text-align: left;
            padding-top: 4px;
            padding-bottom: 4px;
            font-size: 11px;
            color: #555;
        }

        .multiselect .caret {
            right: 0;
            position: absolute;
            margin-top: 8px;
            margin-right: 8px;
        }

        .multiselect-container.dropdown-menu {
            text-transform: none;
            font-size: 14px;
        }

        .no-padding {
            padding: 0;
        }

        #modal_RegionModel .modal-content {
            width: 55% !important;
            margin-left: 30% !important;
        }
    </style>

}
<div class="headerbox">
    <div class="row" style="background-color: #3598DC;color: #fff;">
        <div class="col-md-12 no-padding">
            <div class="alignCenter">
                <div class="col-md-4" style="text-align:right;">
                </div>
                <div class="col-md-4 topheader">
                    CUSTOMER CREDITS LIST
                </div>
                <div class="col-md-2 pull-right" style="padding-right:5px;">
                    <div style="display:table-cell;padding-right: 5px;">
                        Region
                    </div>
                    <div style="display:table-cell;width:100%;">
                        @if (ViewBag.regionlist != null)
                        {
                            <select class="form-control input-sm" multiple="multiple" id="regionlist" style="display:none;">
                                @foreach (var item in (SelectList)ViewBag.regionlist)
                                {
                                    <option @(item.Selected ? "selected" : "") value="@item.Value">@item.Text</option>
                                }
                            </select>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="custom-listbox" id="divfranchiseList" style="margin-top:4px;margin-bottom:3px;">
    <div class="headerbox">
        <div class="row no-padding">
            <div class="col-sm-1 page-size">
                <select class="form-control input-sm" id="pageSize" style="padding-left:6px;">
                    <option value="-1">All</option>
                    <option value="100" selected>100</option>
                    <option value="50">50</option>
                    <option value="25">25</option>
                </select>
            </div>
            <div class="col-md-3">
                <div class="input-icon">
                    <i class="icon-magnifier icon-align-right" style="margin-top: 8px;"></i>
                    <input id="input_Search" type="text" required name="customernumber" autocomplete="off" placeholder="Search" value="" class="form-control input-sm typeahead" />
                </div>
            </div>

            <div class="col-md-5 pull-right no-padding">
               
                <div class="col-md-10 pull-right no-padding" style="text-align:center;">
                    <div class="col-md-6 no-padding" style="margin-left:30px;">
                        <select id="select_timeduration" class="form-control input-sm">
                            <option value="1">This Week</option>
                            <option value="2">This Week-to-date</option>
                            <option value="3" selected="selected">This Month</option>
                            <option value="4">This Month-to-date</option>
                            <option value="5">This Quarter</option>
                            <option value="6">This Quarter-to-date</option>
                            <option value="7">This Fiscal Year</option>
                            <option value="8">This Fiscal Year-to-date</option>
                            <option value="9">Today</option>
                            <option value="10">Yesterday</option>
                            <option value="11">Last Week</option>
                            <option value="12">Last Month</option>
                            <option value="13">Last Quarter</option>
                            <option value="14">Last Year</option>
                            <option value="15">Custom Date</option>
                            <option value="16">Period</option>
                        </select>
                    </div>
                    <div class="col-md-5 divspandate no-padding" style="margin-top: 3px; margin-left: 0px; display: block; float: right;" id="divspandate">
                        <span id="spnStartDate"></span> - <span id="spnEndtDate"></span>
                    </div>
                    <div class="col-md-3 no-padding" style="margin-left: 3px; width: 70px; display: none;" id="divSD">
                        <input type="text" name="txtStartDate" id="txtStartDate" value="" class="form-control input-sm date-picker RemovePeriodvalidation" style="padding: 3px;" />
                    </div>
                    <div class="col-md-3 no-padding" style="margin-left: 3px; width: 70px; display: none;" id="divED">
                        <input type="text" name="txtEndtDate" id="txtEndtDate" value="" class="form-control input-sm date-picker RemovePeriodvalidation" style="padding: 3px;" />
                    </div>
                    <div class="col-md-3 no-padding" style="margin-left: 3px; width: 70px; display: none;" id="divmonth">
                        <select id="monthlist" class="form-control input-sm">
                            <option value=""></option>
                            <option value="1">Jan</option>
                            <option value="2">Feb</option>
                            <option value="3">Mar</option>
                            <option value="4">Apr</option>
                            <option value="5">May</option>
                            <option value="6">June</option>
                            <option value="7">July</option>
                            <option value="8">Aug</option>
                            <option value="9">Sep</option>
                            <option value="10">Oct</option>
                            <option value="11">Nov</option>
                            <option value="12">Dec</option>
                        </select>
                    </div>
                    <div class="col-md-3 no-padding" style="margin-left: 3px; width: 70px; display: none;" id="divyear">
                        <select class="form-control input-sm" id="yearlist" style="padding-left: 2px;">
                            <option value=""></option>
                            <option value="2018">2018</option>
                            <option value="2017">2017</option>
                            <option value="2016">2016</option>
                            <option value="2015">2015</option>
                            <option value="2014">2014</option>
                            <option value="2013">2013</option>
                            <option value="2012">2012</option>
                            <option value="2011">2011</option>
                            <option value="2010">2010</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="tablebox">
    <div class="row padding-tb1">
        <div class="row no-padding">
            <div class="table-responsive">
                <table class="table table-striped table-bordered table-hover" id="CustomerCreditsList">
                    <thead>
                        <tr>
                            <th style="text-align:center;width:7%;font-size: 11px !important;font-weight: normal;">
                                Region Name
                            </th>
                            <th style="text-align:center;width:8%;font-size: 11px !important;font-weight: normal;">
                                Credit No
                            </th>
                            <th style="text-align:center;width:7%;font-size: 11px !important;font-weight: normal;">
                                Credit Date
                            </th>
                            <th style="text-align:center;width:7%;font-size: 11px !important;font-weight: normal;">
                                Customer No
                            </th>
                            <th style="text-align:center;width:20%;font-size: 11px !important;font-weight: normal;">
                                Customer Name
                            </th>
                            <th style="text-align:center;width:10%;font-size: 11px !important;font-weight: normal;">
                                Reason
                            </th>
                            <th style="text-align:center;width:20%;font-size: 11px !important;font-weight: normal;">
                                Description
                            </th>
                            <th style="text-align:center;width:7%;font-size: 11px !important;font-weight: normal;">
                                Invoice No
                            </th>
                            <th style="text-align:center;width:7%;font-size: 11px !important;font-weight: normal;">
                                Invoice Amount
                            </th>
                            <th style="text-align:center;width:7%;font-size: 11px !important;font-weight: normal;">
                                Credit Amount
                            </th>
                            <th style="text-align:center;width:7%;font-size: 11px !important;font-weight: normal;">
                                Invoice Balance
                            </th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                    <tfoot>
                        <tr style="background:#95a5a6;color:white;">
                            <td colspan="7"></td>
                            <td style="text-align:center;"><strong>Total:</strong> </td>
                            <td style="text-align:right;width:50px;"><strong><span id="totalInvAmount" style="float: right"></span> </strong> </td>
                            <td style="text-align:right;width:45px;"><strong><span id="totalCrdAmount" style="float: right"></span> </strong> </td>
                            <td style="text-align:right;width:45px;"><strong><span id="totalInvTotalBalance" style="float: right"></span> </strong> </td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
</div>


<div class="modal fade in" id="modal_RegionModel" tabindex="-1" role="basic" aria-hidden="true" style="display: none; padding-right: 17px;">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" style="border-radius: 8px;">
            <div class="modal-header headerbox list" style="padding:0px!important;border-bottom: none;">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true" style="margin-top: 12px !important;margin-right: 12px !important;"></button>
                <h4 class="modal-title text-center" style="margin-top: 0px; margin-bottom: 4px;  padding: 7px!important;font-size: 12px;font-weight: bold;background: #3598DC !important;color: #FFF !important;border: 1px solid #3598DC !important;padding: 0px;text-transform: uppercase;">
                    Select Region
                </h4>
            </div>
            <div class="modal-body form form-horizontal" style="padding-top: 1px;margin-top: -5px;">
                <div class="form-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label class="control-label col-md-12" style="text-align: center;padding: 5px;background-color: #e8e8e8;margin-bottom:5px;font-weight:bold;">Select Region</label>
                                @if (ViewBag.regionlist != null)
                                {
                                    <select class="form-control input-sm" id="selectregionlist">
                                        <option value="">Select Region</option>
                                        @foreach (var item in (SelectList)ViewBag.regionlist)
                                        {
                                            <option @(item.Selected ? "selected" : "") value="@item.Value">@item.Text</option>
                                        }
                                    </select>
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-actions">
                    <div class="col-md-12">
                        <button type="button" name="SaveNew" id="btnRegion" class="btn btn-primary button-next pull-right" onclick="" style="margin-right:0px;">Select Region</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="form-horizontal" id="form_invoicedetailPopup"></div>

<div class="form-horizontal" id="form_CusCreditDetails"></div>

<form class="form-horizontal" action="" id="form_Billingsetting" method="POST">
    @*<div class="modal fade custom-model custom-form-design" id="ModalEditCustomerInfo" tabindex="-1" role="basic" aria-hidden="true" style="display: none;">
        <div class="modal-dialog" style="width:869px" id="RenderEditCustomerInfoPopup">
        </div>
    </div>*@
</form>

@section scripts{
    <script type="text/javascript">

        var invoiceList;
        var totalInvAmount = 0.0;
        var totalCrdAmount = 0.0;
        var totalInvTotalBalance = 0.0;
        function getTableURL() {
            var regionIds = $("#regionlist").val();
            var spnStartDate = $('#spnStartDate').text();
            var spnEndDate = $('#spnEndtDate').text();
            var _monthVal = $('#monthlist').val();
            var _yearVal = $('#yearlist').val();
            var sURL = '@Url.Action("GetCustomerWiseCreditList", "AccountReceivable", new { area = "Portal" })?regionIds=' + regionIds + '&spnStartDate=' + spnStartDate + '&spnEndDate=' + spnEndDate + '&month=' + _monthVal + '&year=' + _yearVal;

            return sURL;
        }

        //$("#regionlist").change(function () {
        //    refreshTable();
        //});

        $(window).load(function () {
            if ('@ViewBag.selectedRegionId' == 0) {
                $("#modal_RegionModel").modal({ backdrop: 'static' });
            }
            //else {
                //refreshTable();
            //}
        });
        $(document).ready(function () {

            $("#btnRegion").click(function () {
                if ($("#selectregionlist").val() != "") {
                    $("#regionlist option[value='" + $("#selectregionlist").val() + "']").attr("selected", 1);
                    $("#regionlist").multiselect("refresh");
                    refreshTable();
                    $(".close").click();
                }
            });

            @*if ('@ViewBag.selectedRegionId' > 0) {
                $("#regionlist option[value='" + '@ViewBag.selectedRegionId' + "']").attr("selected", 1);
                $("#regionlist").multiselect("refresh");
            }*@

            $("#regionlist").multiselect({
                includeSelectAllOption: true,
                selectAllText: 'Select all',
                buttonWidth: '100%',
                nonSelectedText: 'Select region..',
                dropRight: true,
                numberDisplayed: 2
            });

           

            $('#divspandate').show();
            $('#divSD').hide();
            $('#divED').hide();

            firstDay = moment().subtract(0, 'month').startOf('month').toString();
            lastDay = moment().subtract(0, 'month').endOf('month').toString();

            $('#spnStartDate').html(moment(firstDay).format('L'));
            $('#spnEndtDate').html(moment(lastDay).format('L'));
            //$('#txtStartDate').inputmask("mm/dd/yyyy", {});
            //$('#txtEndtDate').inputmask("mm/dd/yyyy", {});
            $("#input_Search").keyup(function () {
                var table = $("#CustomerCreditsList").DataTable();
                table.search($(this).val()).draw();
                calculateTotals();
            });

            $("#pageSize").change(function () {
                setPaging();
            });

            $('#txtStartDate').change(function () {
                $('#spnStartDate').html($(this).val());
                if ($('#txtStartDate').val() != '' && $('#txtEndtDate').val() != '')
                    refreshTable();
            });

            $('#txtEndtDate').change(function () {
                $('#spnEndtDate').html($(this).val());
                if ($('#txtStartDate').val() != '' && $('#txtEndtDate').val() != '')
                    refreshTable();
            });

            $('#monthlist').change(function () {
                $('#spnStartDate').html('');
                if ($('#monthlist').val() != '' && $('#yearlist').val() != '')
                    refreshTable();
            });

            $('#yearlist').change(function () {
                $('#spnEndtDate').html('');
                if ($('#monthlist').val() != '' && $('#yearlist').val() != '')
                    refreshTable();
            });

            $('#select_timeduration').change(function () {
                //alert($(this).val());
                $('#spnStartDate').html('');
                $('#spnEndtDate').html('');
                $('#divspandate').show();
                $('#divSD').hide();
                $('#divED').hide();
                $('#divmonth').hide();
                $('#divyear').hide();
                $('#monthlist').val('');
                $('#yearlist').val('');
                switch (parseInt($(this).val())) {
                    case 1:
                        firstDay = moment().startOf('isoWeek').toString();
                        lastDay = moment().endOf('isoWeek').toString();
                        break;
                    case 2:
                        //code block
                        firstDay = moment().startOf('isoWeek').toString();
                        lastDay = new Date().toString();
                        break;
                    case 3:
                        firstDay = moment().subtract(0, 'month').startOf('month').toString();
                        lastDay = moment().subtract(0, 'month').endOf('month').toString();
                        break;
                    case 4:
                        //code block
                        firstDay = moment().subtract(0, 'month').startOf('month').toString();
                        lastDay = new Date().toString();
                        break;
                    case 5:
                        //code block
                        firstDay = moment().startOf('quarter').toString();
                        lastDay = moment().endOf('quarter').toString();
                        break;
                    case 6:
                        //code block
                        firstDay = moment().startOf('quarter').toString();
                        lastDay = new Date().toString();
                        break;
                    case 7:
                        //code block
                        firstDay = moment().startOf('year').toString();;
                        lastDay = moment().endOf('year').toString();
                        break;
                    case 8:
                        //code block
                        firstDay = moment().startOf('year').toString();
                        lastDay = new Date().toString();
                        break;
                    case 9:
                        //code block
                        firstDay = moment().toString();
                        lastDay = moment().toString();
                        break;
                    case 10:
                        //code block
                        firstDay = moment().add(-1, 'days').toString();
                        lastDay = moment().add(-1, 'days').toString();
                        break;
                    case 11:
                        //code block
                        firstDay = moment().subtract(1, 'week').startOf('week').toString();
                        lastDay = moment().subtract(1, 'week').endOf('week').toString();
                        break;
                    case 12:
                        //code block
                        firstDay = moment().subtract(1, 'month').startOf('month').toString();
                        lastDay = moment().subtract(1, 'month').endOf('month').toString();
                        break;
                    case 13:
                        //code block
                        firstDay = moment().subtract(1, 'quarter').startOf('quarter').toString();
                        lastDay = moment().subtract(1, 'quarter').endOf('quarter').toString();
                        break;
                    case 14:
                        //code block
                        firstDay = moment().subtract(1, 'year').startOf('year').toString();
                        lastDay = moment().subtract(1, 'year').endOf('year').toString();
                        break;
                    case 15:
                        //code block
                        $('#divspandate').hide();
                        $('#divSD').show();
                        $('#divED').show();
                        $('#txtStartDate').val('');
                        $('#txtEndtDate').val('')
                        break;
                    case 16:
                        //code block
                        $('#divspandate').hide();
                        $('#divSD').hide();
                        $('#divED').hide();
                        $('#divmonth').show();
                        $('#divyear').show();
                        break;
                    default:
                    //code block
                }
                $('#spnStartDate').html(moment(firstDay).format('L'));
                $('#spnEndtDate').html(moment(lastDay).format('L'));

                refreshTable();
            });

            

            invoiceList = $('#CustomerCreditsList').DataTable({
                "bAutoWidth": false,
                cache: false,
                //"order": false,
                "iDisplayLength": 25,
                //"aLengthMenu": [[5, 7, 10, 25, 50, -1], [5, 7, 10, 25, 50, "All"]],
                "dom": '<"top">rt<"bottom"lp><"clear">',
                "aaSorting": [[0, "desc"]],
                "bLengthChange": false,
                "sAjaxSource": getTableURL(),
                "sAjaxDataProp": "aadata",  // Internationalisation. For more info refer to http://datatables.net/manual/i18n

                //"sAjaxDataProp": "aadata",  // Internationalisation. For more info refer to http://datatables.net/manual/i18n
                //"ajax": {"dataSrc": "aadata"},
                "aoColumns": [
                    {
                        "sName": "RegionName",
                        "bSortable": true,
                        "sClass": "dt-center",
                        "mRender": function (data, type, full) {
                            return full.RegionName;
                        }
                    }, {
                        "sName": "TransactionNumber",
                        "bSortable": true,
                        "sClass": "dt-center",
                        "mRender": function (data, type, full) {
                            return '<a onclick="btnOpenCusCreditDetail(' + full.CreditId + ')">' + full.TransactionNumber + '</a>';
                        }
                    },
                    {
                        "sName": "CreditDateForCreditList",
                        "bSortable": true,
                        "sClass": "dt-center",
                        "mRender": function (data, type, full) {
                            return '<span>' + formatJSONDateUtc(full.CreditDateForCreditList) + '</span>';
                        }
                    },
                    {
                        "sName": "CustomerNo",
                        "bSortable": true,
                        "sClass": "dt-center",
                        "mRender": function (data, type, full) {
                            return '<a onclick="showEditCustomerInfo(' + full.CustomerId + ')">' + full.CustomerNo + '</a>';
                        }
                    },
                    {
                        "sName": "CustomerName",
                        "bSortable": true,
                        "mRender": function (data, type, full) {
                            return full.CustomerName;
                        }
                    },
                    {
                        "sName": "Reason",
                        "bSortable": true,
                        "sClass": "dt-center",
                        "mRender": function (data, type, full) {
                            return full.Reason;
                        }
                    },
                    {
                        "sName": "Description",
                        "bSortable": true,
                        "mRender": function (data, type, full) {
                            return full.Description;
                        }
                    },
                    {
                        "sName": "InvoiceNo",
                        "bSortable": true,
                        "sClass": "dt-center",
                        "mRender": function (data, type, full) {
                            return '<a onclick="showInvoiceDetail(' + full.InvoiceId + ')">' + full.InvoiceNo + '</a>';;
                        }
                    },
                    {
                        "sName": "InvAmount",
                        "bSortable": true,
                        "sClass": "dt-right",
                        "mRender": function (data, type, full) {
                            //totalInvAmount = totalInvAmount + parseFloat(full.InvAmount);
                            //$('#totalInvAmount').text(formatCurrency(totalInvAmount, true));
                            return '<span class="clsInvAmount">' + formatCurrency(full.InvAmount, true) + '</span>';
                        }
                    },
                    {
                        "sName": "CrdAmount",
                        "bSortable": true,
                        "sClass": "dt-right",
                        "mRender": function (data, type, full) {
                            //totalCrdAmount = totalCrdAmount + parseFloat(full.CrdAmount);
                            //$('#totalCrdAmount').text(formatCurrency(totalCrdAmount, true));
                            return '<span class="clsCrdAmount">' + formatCurrency(full.CrdAmount, true) + '</span>';
                        }
                    },
                    {
                        "sName": "InvBalance",
                        "bSortable": true,
                        "sClass": "dt-right",
                        "mRender": function (data, type, full) {
                            //totalInvTotalBalance = totalInvTotalBalance + parseFloat(full.InvAmount - full.CrdAmount);
                            //$('#totalInvTotalBalance').text(formatCurrency(totalInvTotalBalance, true));
                            return '<span class="clsInvoiceAmount">' + formatCurrency((full.InvAmount - full.CrdAmount), true) + '</span>';
                        }
                    }]

            });

            //$("#txtStartDate").datetimepicker({
            //    dateFormat: 'mm/dd/yyyy',
            //    stepMinute: 15,
            //    ampm: true,
            //    onClose: function (dateTime) {
            //        $('#spnStartDate').html($(this).val());
            //        if ($('#spnStartDate').text() != '' && $('#spnEndtDate').text() != '')
            //            refreshTable();
            //    }
            //});

            //$("#txtEndtDate").datetimepicker({
            //    dateFormat: 'mm/dd/yyyy',
            //    stepMinute: 15,
            //    ampm: true,
            //    onClose: function (dateTime) {
            //        $('#spnEndtDate').html($(this).val());
            //        if ($('#spnStartDate').text() != '' && $('#spnEndtDate').text() != '')
            //            refreshTable();
            //    }
            //});


            $('#CustomerCreditsList').on('draw.dt', function () {
                calculateTotals();
            });

        });
        var date = new Date(), y = date.getFullYear(), m = date.getMonth();
        var firstDay;
        var lastDay;
        Date.prototype.getWeek = function (start) {
            //Calcing the starting point
            start = start || 0;
            var today = new Date(this.setHours(0, 0, 0, 0));
            var day = today.getDay() - start;
            var date = today.getDate() - day;

            // Grabbing Start/End Dates
            var StartDate = new Date(today.setDate(date));
            var EndDate = new Date(today.setDate(date + 6));
            return [StartDate, EndDate];
        };

        function setPaging() {
            var z = $("#pageSize").val();
            var table = $("#CustomerCreditsList").DataTable();
            if (z > 0) {
                table.page.len(z).draw();
            }
            else if (z == -1) {
                table.page.len(table.rows().count()).draw();
            }
            else {
                table.page.page.len(25).draw();
            }
            calculateTotals();
        }

        function refreshTable() {
            ////totalInvAmount = 0.0;
            ////totalCrdAmount = 0.0;
            ////totalInvTotalBalance = 0.0;
            ////$('#totalInvAmount').text(totalInvAmount);
            ////$('#totalCrdAmount').text(totalCrdAmount);
            ////$('#totalInvTotalBalance').text(totalInvTotalBalance);
            
            var url = getTableURL();
            $.blockUI();
            invoiceList.ajax.url(url).load(function () { calculateTotals(); $.unblockUI(); });
        }

        function calculateTotals() {

            var InvAmt = 0;
            $(".clsInvAmount").each(function (index) {
                InvAmt = parseFloat(InvAmt) + parseFloat($(this).text().replace('$', '').replace(',', ''));
            });
            $("#totalInvAmount").html("$" + formatCurrency(InvAmt));

            var CrdAmount = 0;
            $(".clsCrdAmount").each(function (index) {
                CrdAmount = parseFloat(CrdAmount) + parseFloat($(this).text().replace('$', '').replace(',', ''));
            });
            $("#totalCrdAmount").html("$" + formatCurrency(CrdAmount));

            var InvTotalBalance = 0;
            $(".clsInvoiceAmount").each(function (index) {
                InvTotalBalance = parseFloat(InvTotalBalance) + parseFloat($(this).text().replace('$', '').replace(',', ''));
            });
            $("#totalInvTotalBalance").html("$" + formatCurrency(InvTotalBalance));
              
        }

        

        function btnOpenCusCreditDetail(id) {

            $.blockUI();
            var sURL = '@Url.Action("CustomerCreditDetailPopup", "AccountReceivable", new { area = "Portal" })?Id=' + id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#form_CusCreditDetails').html(data);
                    $("#modal_CusCreditDetail").modal({ backdrop: 'static' });
                    $('.modal-dialog').draggable();
                    $.unblockUI();
                },
                error: function () {
                    alert("Content load failed.");
                }
            });
        }


        function showInvoiceDetail(id) {
            $.blockUI();
            var sURL = '@Url.Action("InvoiceDetail", "AccountReceivable", new { area = "Portal" })?Id=' + id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#form_invoicedetailPopup').html(data);
                    $("#modal_invoicedetail").modal({ backdrop: 'static' });
                    $('.modal-dialog').draggable();
                    $.unblockUI();
                },
                error: function () {
                    $.unblockUI();
                    alert("Content load failed.");
                }
            });
        }

        function showEditCustomerInfo(Id) {

            var sURL = '@Url.Action("PendingApprovalListEditCustomerPopup", "Customer", new { area = "Portal" })?id=' + Id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#form_Billingsetting').html(data);
                    $("#ModalEditCustomerInfo").modal({ backdrop: 'static' });
                    $(".input-group-btn").click(function () {
                        $(this).prev().trigger("focus");
                        $(this).prev().trigger("focus");
                    });
                    $(".date-picker").datepicker();
                    $(".edit").attr("disabled", "disabled");
                    $(".edit").attr("readonly", "readonly");

                    $("#btnSave").prop("disabled", "false");
                    $("#btnSave").prop("readonly", "true");
                    $("#btnCancel").prop("disabled", "false");
                    $("#btnCancel").prop("readonly", "true");
                    $("#btnSave").hide();
                    $("#btnCancel").hide();

                    $(".editmain1").attr("disabled", "disabled");
                    $(".editmain1").attr("readonly", "readonly");
                    $(".editmain").attr("disabled", "disabled");
                    $(".editmain").attr("readonly", "readonly");

                    $(".editbill1").attr("disabled", "disabled");
                    $(".editbill1").attr("readonly", "readonly");
                    $(".editbill").attr("disabled", "disabled");
                    $(".editbill").attr("readonly", "readonly");

                    $(".EditBtn").show();
                    $(".SaveBtn").hide();
                    $(".CancelBtn").hide();

                },
                error: function () {
                    alert("Content load failed.");
                }
            });

        }

        function btnInvoicePopupClose() {
            $("#modal_invoicedetail").modal('hide');
        }

        //function formatJSONDateUtc(jsonDate) {
        //    if (jsonDate != null) {
        //        var dtstr = jsonDate.substr(6);
        //        var dateString = dtstr.substring(0, dtstr.length - 2);
        //        var currentTime = new Date(parseInt(dateString)).toUTCString();
        //        var date = moment.utc(currentTime).format("MM/DD/YYYY");
        //        return date;
        //    }
        //    return null;
        //}
        function formatJSONDateUtc(jsonDate) {
            if (jsonDate != null) {
                var dtstr = jsonDate.substr(6);
                var dateString = dtstr.substring(0, dtstr.length - 2);
                var currentTime = new Date(parseInt(dateString));
                var date = moment.utc(currentTime).format("MM/DD/YYYY");
                return date;
            }
            return null;
        }
        function formatCurrency(total, dollar) {
            dollar = (dollar == true ? true : false);
            var neg = false;
            if (total < 0) {
                neg = true;
                total = Math.abs(total);
            }
            return (neg ? "-" : '') + (dollar ? "$" : "") + parseFloat(total, 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString();
        }

    </script>
}

