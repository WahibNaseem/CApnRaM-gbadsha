@model JKViewModels.AccountReceivable.InvoiceSearchViewModel

@{
    ViewBag.Title = "InvoicesSearch";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section styles{
    <link href="@Url.Content("~/Content/admin/assets/global/plugins/datatables/datatables.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/admin/assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/admin/assets/global/plugins/bootstrap-multiselect/css/bootstrap-multiselect.css")" rel="stylesheet" />

    <style type="text/css">
        .tablebox .table-responsive {
            min-height: 600px;
        }

        .trim-padding {
            padding: 3px !important;
            margin: 3px !important;
        }

        .custom-form.portlet.light .form-group.trim-padding {
            margin: 0px !important;
        }

        table.dataTable thead .sorting {
            background-image: none;
        }

        table.dataTable thead th, table.dataTable thead td {
        }

        #invoiceList th, #invoiceList td {
            vertical-align: middle;
            padding: 8px !important;
            font-size: 11px !important;
        }

        /*tr > th {
            font-size: 11px !important;
            text-transform: uppercase;
        }*/

        .row {
            margin: 0;
            padding: 3px 0;
        }

        .opendiv {
            padding: 4px;
            background-color: gold;
            text-align: center;
            font-weight: bold;
            color: #ffffff;
            display: table-cell;
            min-width: 105px;
        }

        .closeddiv {
            padding: 4px;
            background-color: limegreen;
            text-align: center;
            font-weight: bold;
            color: #ffffff;
            display: table-cell;
            min-width: 90px;
        }

        .overpaiddiv {
            padding: 4px;
            background-color: deepskyblue;
            text-align: center;
            font-weight: bold;
            color: #ffffff;
            display: table-cell;
            min-width: 100px;
        }

        .overduediv {
            padding: 4px;
            background-color: orangered;
            text-align: center;
            font-weight: bold;
            color: #ffffff;
            display: table-cell;
            min-width: 96px;
        }

        .btn {
            padding: 3px 12px;
            font-size: 12px;
        }

        .alignRight {
            text-align: right;
        }

        .alignCenter {
            text-align: center;
        }

        .close {
            background-image: url(/Content/admin/assets/global/img/stick_close.png) !important;
            height: 12px !important;
            width: 12px !important;
            margin-top: 0px !important;
        }

        .page-size {
            padding-left: 0;
            padding-right: 0;
            width: 62px;
        }

        .topheader {
            font-size: 14px;
            font-weight: bold;
            color: #FFF !important;
            text-transform: uppercase;
            margin-top: 3px;
        }



        .no-padding {
            padding: 0;
        }

        .no-margin {
            margin: 0;
        }

        .padding-tb1 {
            padding-top: 1px;
            padding-bottom: 1px;
        }

        .margin-tb1 {
            margin-top: 1px;
            margin-bottom: 1px;
        }

        .custom-listbox .headerbox {
            padding: 3px 0px 3px 5px;
        }

        .custom-listbox {
            margin-top: 4px;
            margin-bottom: 0px;
        }

        #divfranchiseList .headerbox {
            text-transform: none;
            font-weight: normal;
        }

        .btn.multiselect {
            text-align: left;
            padding-top: 4px;
            padding-bottom: 4px;
            font-size: 11px;
            color: #555;
        }

        .multiselect .caret {
            right: 0;
            position: absolute;
            margin-top: 8px;
            margin-right: 8px;
        }

        .multiselect-container.dropdown-menu {
            text-transform: none;
            font-size: 14px;
        }

        #modal_RegionModel .modal-content {
            width: 55% !important;
            margin-left: 30% !important;
        }
    </style>
}
<div class="headerbox">
    <div class="row" style="background-color: #3598DC;color: #fff;">
        <div class="col-md-12 no-padding">
            <div class="alignCenter">
                <div class="col-md-4" style="text-align:right;">
                </div>
                <div class="col-md-4 topheader">
                    Invoice Search
                </div>
                <div class="col-md-2 pull-right" style="padding-right:5px;">
                    <div style="display:table-cell;padding-right: 5px;">
                        Region
                    </div>
                    <div style="display:table-cell;width:100%;">
                        @if (ViewBag.regionlist != null)
                        {
                            <select class="form-control input-sm" multiple="multiple" id="regionlist" style="display:none;">
                                @foreach (var item in (SelectList)ViewBag.regionlist)
                                {
                                    <option @(item.Selected ? "selected" : "") value="@item.Value">@item.Text</option>
                                }
                            </select>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="custom-form portlet light" id="divInvoiceSearch" style="max-width:420px;margin: 10px auto;padding:0;min-height: 100px;">

    <div class="portlet-body form">
        @Html.AntiForgeryToken()
        <div class="form-body">
            <div class="form-group trim-padding">
                <div class="row">

                    <div class="col-md-4" style="text-align: right;top: 5px;">
                        Search By :
                    </div>
                    <div class="col-md-7">
                        @Html.DropDownListFor(model => model.searchBy, new List<SelectListItem> {
                                 new SelectListItem { Text = "-Select One-", Value = "-1"},
                                    new SelectListItem { Text = "Customer", Value = "1"},
                                    new SelectListItem { Text = "Invoice No", Value = "2"}
                           }, new { @class = "form-control  input-sm" })
                    </div>
                </div>
            </div>
            <div class="form-group trim-padding">
                <div class="row">


                    <div class="col-md-4 control-label" style="text-align: right;top: 5px;">
                        Search Value :
                    </div>
                    <div class="col-md-7">
                        @Html.TextBoxFor(model => model.searchValue, new { @class = "form-control input-sm" })
                    </div>
                </div>
            </div>
            <div class="form-group trim-padding">
                <div class="row">

                    <div class="col-md-4 control-label" style="text-align: right;top: 5px;">
                        Bill Month/Year :
                    </div>
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.billMonth, new SelectList(ViewBag.billMonthsList, "Value", "Text"), "-Select-", new { @class = "form-control input-sm" })
                    </div>
                    <div class="col-md-3" style="padding-left: 0px;">
                        @Html.DropDownListFor(model => model.billYear, new SelectList(ViewBag.billYearList, "Value", "Text"), "-Select-", new { @class = "form-control input-sm" })
                    </div>
                </div>
            </div>

        </div>
        <div class="form-actions">
            <div class="col-md-11">
                <button type="button" class="btn btn-primary button-next pull-right" onclick="bindINvoiceList()">Search</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade in" id="modal_RegionModel" tabindex="-1" role="basic" aria-hidden="true" style="display: none; padding-right: 17px;">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" style="border-radius: 8px;">
            <div class="modal-header headerbox list" style="padding:0px!important;border-bottom: none;">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true" style="margin-top: 12px !important;margin-right: 12px !important;"></button>
                <h4 class="modal-title text-center" style="margin-top: 0px; margin-bottom: 4px;  padding: 7px!important;font-size: 12px;font-weight: bold;background: #3598DC !important;color: #FFF !important;border: 1px solid #3598DC !important;padding: 0px;text-transform: uppercase;">
                    Select Region
                </h4>
            </div>
            <div class="modal-body form form-horizontal" style="padding-top: 1px;margin-top: -5px;">
                <div class="form-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label class="control-label col-md-12" style="text-align: center;padding: 5px;background-color: #e8e8e8;margin-bottom:5px;font-weight:bold;">Select Region</label>
                                @if (ViewBag.regionlist != null)
                                {
                                    <select class="form-control input-sm" id="selectregionlist">
                                        <option value="">Select Region</option>
                                        @foreach (var item in (SelectList)ViewBag.regionlist)
                                        {
                                            <option @(item.Selected ? "selected" : "") value="@item.Value">@item.Text</option>
                                        }
                                    </select>
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-actions">
                    <div class="col-md-12">
                        <button type="button" name="SaveNew" id="btnRegion" class="btn btn-primary button-next pull-right" onclick="" style="margin-right:0px;">Select Region</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="custom-listbox" id="divInvoiceSearchResult" style="display:none;">
    <div class="headerbox">
        <div class="row">
            <div class="col-md-4">
                Invoice Search Result
            </div>
        </div>
    </div>
    <div class="tablebox">
        <div class="row" style="display:none;">
            <div class="col-md-12">
                <div class="col-md-6">
                </div>
                <div class="col-md-6">
                    <div class="row">
                        <div class="col-md-3 opendiv">Open:&nbsp;<span id="spnIsOpen">0</span></div>
                        <div class="col-md-3 closeddiv">Closed:&nbsp;<span id="spnIsClosed">0</span></div>
                        <div class="col-md-3 overpaiddiv">Over Paid:&nbsp;<span id="spnIsOverPaid">0</span></div>
                        <div class="col-md-3 overduediv">Over Due:&nbsp;<span id="spnIsOverDue">0</span></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">

            <div class="col-md-6">
                <div class="row">
                    <div class="col-md-2">
                        <label class="control-label">
                            <input type="checkbox" name="chkbillingsameas" id="chkbillingsameas">&nbsp;Email
                            <span></span>
                        </label>
                    </div>
                    <div class="col-md-2">
                        <label class="control-label">
                            <input type="checkbox" name="chkbillingsameas" id="chkbillingsameas">&nbsp;Print
                            <span></span>
                        </label>
                    </div>
                    <div class="col-md-3">
                        <label class="control-label">
                            <input type="checkbox" name="chkbillingsameas" id="chkbillingsameas">&nbsp;Consolidated
                            <span></span>
                        </label>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="col-md-12">
                    &nbsp;<button type="submit" class="btn btn-primary button-next pull-right" style="margin-left:10px;">Email</button>
                    &nbsp;<button type="submit" class="btn btn-primary button-next pull-right" onclick="InvoiceListExportPDF()">Print</button>
                </div>
            </div>

        </div>
        <div class="col-md-12">
            <div class="table-responsive">
                <table class="table table-striped table-bordered table-hover order-column dataTable" id="invoiceList" style="display:none;margin-top: 0px !important;">
                    <thead>
                        <tr>
                            <th style="width:25px;text-align:center;">
                                <input type="checkbox" id="chkSelectAll" name="chkSelectAll" />
                            </th>
                            <th style="width:80px;text-align:center;">
                                Invoice No
                            </th>
                            <th style="width:80px;text-align:center;">
                                Invoice Date
                            </th>
                            <th style="text-align:center;">
                                Customer Name
                            </th>
                            <th style="text-align:center;width:85px;">
                                Customer No
                            </th>
                            <th style="text-align:center;width:20px;">
                                E/P
                            </th>
                            <th style="text-align:center;">
                                Description
                            </th>
                            <th style="text-align:center;width:100px;">
                                Amount
                            </th>
                            <th style="text-align:center;width:100px;">
                                Balance
                            </th>
                            <th style="text-align:center;width:80px;">
                                Action
                            </th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                    <tfoot></tfoot>
                </table>
            </div>
        </div>
        <div class="clearfix"></div>

    </div>
</div>

<div class="form-horizontal" id="form_invoicedetail"></div>

<div id="div_applycreditform"></div>
<div class="modal fade custom-model custom-form custom-form-design" id="modal_customercreditprompt" tabindex="-1" style="display: none;">
    <div class="modal-dialog" style="width:500px">
        <div class="modal-content" style="border-radius: 8px; font-size: 16px">
            <div class="headerbox">
                <div class="row">
                    &nbsp;
                </div>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12" style="padding: 20px 100px 40px 100px;">
                        Do you want to apply <span id="lblPromptCreditAmt">&nbsp;</span> in customer credit for Customer <span id="lblPromptCreditCustomerName">&nbsp;</span>?
                    </div>
                    <div class="col-md-12">
                        <div class="col-md-6"></div>
                        <div class="col-md-3">
                            <button type="button" class="btn green btn-block" onclick="onClickYesApplyCustomerCredit()">Yes</button>
                        </div>

                        <div class="col-md-3">
                            <button type="button" class="btn green btn-block" onclick="onClickNoApplyCustomerCredit()">No</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="@Url.Content("~/Areas/Portal/Scripts/ApplyCreditForm.js")" type="text/javascript"></script>
    <script type="text/javascript">
         function InvoiceListExportPDF() {

        var Ids = $('input[rel="mgglchk"]:checked').map(function () { return this.value; }).get().join(',')
        if (Ids != "") {
            window.location.href = '@Url.Action("InvoiceListExportPDF")' + "?InvoiceIds=" + Ids;
        }
        else {
            alert('Please select invoice to export.')
        }
    }

    function InvoiceListSendEmail() {
        var Ids = $('input[rel="mgglchk"]:checked').map(function () { return this.value; }).get().join(',')
        if (Ids != "") {
            var sURL = '@Url.Action("InvoiceListSendEmail", "AccountReceivable", new { area = "Portal" })?InvoiceIds=' + encodeURI(Ids);
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('input[rel="mgglchk"]:checked').prop("checked", false);
                },
                error: function () {
                    alert("Content load failed.");
                }
            });
        }
        else {
            alert('Please select invoice to email.')
        }
    }
        $(window).load(function () {
            if ('@ViewBag.selectedRegionId' == 0) {
                $("#modal_RegionModel").modal({ backdrop: 'static' });
            }
        });
        jQuery(document).ready(function () {
            $("#btnRegion").click(function () {
                if ($("#selectregionlist").val() != "") {
                    $("#regionlist option[value='" + $("#selectregionlist").val() + "']").attr("selected", 1);
                    $("#regionlist").multiselect("refresh");
                    //refreshTable();
                    $(".close").click();
                }
            });
            $("#regionlist").multiselect({
                includeSelectAllOption: false,
                selectAllText: 'Select all',
                buttonWidth: '100%',
                nonSelectedText: 'Select region..',
                dropRight: true,
                numberDisplayed: 2,
                //onChange: refreshTable,
                //onSelectAll: refreshTable,
                //onDeselectAll: refreshTable
            });

            if ('@ViewBag.selectedRegionId' > 0) {
                $("#regionlist option[value='" + '@ViewBag.selectedRegionId' + "']").attr("selected", 1);
                $("#regionlist").multiselect("refresh");
            }


        });



        $(document).on('click', '#btnClosemodel', function () {
            $("#modal_invoicedetail").modal('hide');
        });

        function btnInvoicePopupClose() {
            $("#modal_invoicedetail").modal('hide');
        }

        function bindINvoiceList() {
            var _searchby = $("#searchBy").val();
            if (_searchby != -1)
            {
                $("#searchBy").css('border-color', '');
            $('#divInvoiceSearchResult').show();
            $('#divInvoiceSearch').hide();
            $('#consolidatedInvoice').val(true);


            var _searchtextVal = $('#invoicesearchtextbox').val('');
            var sURL = '@Url.Action("InvoicesSearchResultData", "AccountReceivable", new { area = "Portal" })?m=' + $('#billMonth').val() + '&y=' + $('#billYear').val() + '&st=' + _searchtextVal + '&sv=' + $('#searchValue').val() + '&sb=' + $('#searchBy').val() + '&cb=' + false + '&region=' + $("#regionlist").val()
            $.ajax(
                {
                    type: "GET", //HTTP POST Method
                    url: sURL, // Controller/View
                    //data: { 'accid': id, 'issubacct': issub },
                    success: function (res) {
                        var trInvoicelist = "";
                        var trInvoicelistIsOpen = 0;
                        var trInvoicelistIsClosed = 0;
                        var trInvoicelistIsOverPaid = 0;
                        var trInvoicelistIsOverDue = 0;

                        var TotalInvoiceAmount = 0;
                        var TotalInvoiceBalance = 0;


                        var tblinvoiceList = $('#invoiceList tbody');
                        tblinvoiceList.html("");
                        res.forEach(function (item) {
                            trInvoicelist = "";
                            trInvoicelist += '<tr><td style="text-align:center;"><input rel="mgglchk" type="checkbox" name="name" class="chk" value="' + item.InvoiceId + '" /></td>';
                            trInvoicelist += '<td style="text-align:center;"><a href="javascript:void(0);" onclick="btnOpenInvoiceDetail(' + item.InvoiceId + ')">' + item.InvoiceNo + '</a></td>';
                            trInvoicelist += '<td style="text-align:center;">' + moment(new Date(parseInt(item.InvoiceDate.substr(6)))).format("MM/DD/YYYY") + '</td><td style="text-align:left;">' + item.CustomerName + '</td>';
                            trInvoicelist += '<td style="text-align:center;">' + item.CustomerNo + '</td>';
                            trInvoicelist += '<td style="text-align:center;">' + item.Ebill + " " + item.PrintInvoice + '</td>';
                            trInvoicelist += '<td style="text-align:left;">' + item.Description + '</td>';
                            trInvoicelist += '<td style="text-align:right;">$ ' + parseFloat(item.Amount, 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString() + '</td>';
                            trInvoicelist += '<td style="text-align:right;">$ ' + parseFloat(item.Balance, 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString() + '</td>';
                            trInvoicelist += '<td style="text-align:center;">';
                            trInvoicelist += "<div class='btn-group dropdown'>";
                            trInvoicelist += "<a target='_blank'  dropdown-toggle' data-toggle='dropdown'>";
                            trInvoicelist += "<i class='fa fa-hand-o-right' aria-hidden='true'></i>";
                            trInvoicelist += "</a>";
                            trInvoicelist += "<ul class='dropdown-menu pull-right'>";
                            trInvoicelist += "<li><a href='#' onclick='btnOpenApplyCreditForm(" + item.InvoiceId + ")'><i class='fa fa-plus'></i> Apply Credit </a></li>";
                            trInvoicelist += "<li><a href='#' onclick='showManualPayment(" + item.InvoiceId + ")'><i class='fa fa-plus'></i> Manual Payment </a></li>";
                            trInvoicelist += "</ul></div>";
                            trInvoicelist += '</td></tr>';




                            TotalInvoiceAmount += item.Amount;
                            TotalInvoiceBalance += item.Balance;
                            if (item.Amount < item.Balance)
                                trInvoicelistIsOverPaid++;
                            if (item.StatusId == 1)
                                trInvoicelistIsOpen++;
                            else if (item.StatusId == 2)
                                trInvoicelistIsClosed++;

                            if (item.StatusId == 1 && (Date.parse(new Date()) < new Date(parseInt(item.InvoiceDate.substr(6)))))
                                trInvoicelistIsOverDue++;

                            tblinvoiceList.append(trInvoicelist);
                        });

                        if (res.length > 0) {
                            trInvoicelist = "";
                            trInvoicelist += '<tr><td colspan="6"> Total Invoice count ' + res.length + '</td>';
                            trInvoicelist += '<td style="text-align:right;"><b>Total</b></td>';
                            trInvoicelist += '<td style="text-align:right;width:80px;">$ ' + parseFloat(TotalInvoiceAmount, 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString() + '</td>';
                            trInvoicelist += '<td style="text-align:right;width:80px;">$ ' + parseFloat(TotalInvoiceBalance, 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString() + '</td><td></td></tr>';

                            $('#invoiceList tfoot').append(trInvoicelist);

                        }



                        $('#spnIsOpen').html(trInvoicelistIsOpen)
                        $('#spnIsClosed').html(trInvoicelistIsClosed)
                        $('#spnIsOverPaid').html(trInvoicelistIsOverPaid)
                        $('#spnIssOverDue').html(trInvoicelistIsOverDue)


                        $('#invoiceList').show();


                    },
                    error: function (err) {
                        alert('failure');
                    },
                });
            }
            else
            {
                $("#searchBy").css('border-color', 'red');
            }
        };
        var saveAction;
        function btnOpenInvoiceDetail(id) {

            var sURL = '@Url.Action("InvoiceDetail", "AccountReceivable", new { area = "Portal" })?Id=' + id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#form_invoicedetail').html(data);
                    $("#modal_invoicedetail").modal({ backdrop: 'static' });
                },
                error: function () {
                    alert("Content load failed.");
                }
            });
        };

        $('#chkSelectAll').change(function () {
            if ($(this).is(":checked")) {
                $('input[rel="mgglchk"]').prop('checked', true);
            }
            else {
                $('input[rel="mgglchk"]').prop('checked', false);
            }
        });


        //Customer Credit
        function btnOpenApplyCreditForm(id) {

            $.blockUI();

            var sURL = '@Url.Action("ApplyCreditForm", "AccountReceivable", new { area = "Portal" })?Id=' + id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#div_applycreditform').html(data);
                    $(".date-picker").datepicker();
                    $(".input-group-btn").click(function () {
                        $(this).prev().trigger("focus");
                        $(this).prev().trigger("focus");
                    });
                    $.unblockUI();
                    $("#modal_applycreditform").modal({ backdrop: 'static' });
                    initCreditForm();
                    $('.creditfieldcurrency').each(function () {
                        applyMaskCurrency('#' + this.id);
                    });
                },
                error: function () {
                    $.unblockUI();
                    alert("Content load failed.");
                }
            });

            /*if (id == 2) {
                $("#modal_applycreditformconsolidated").modal({ backdrop: 'static' });
            }
            else {
                $("#modal_applycreditform").modal({ backdrop: 'static' });
            }*/
        };

        function submitForm() {
            
            $('.creditfieldcurrency').each(function () {
                $('#' + this.id).inputmask('remove');
            });

            $("#btnSaveClose").prop('disabled', true);
            $("#btnSaveNew").prop('disabled', true);
            $("#btnSaveApprove").prop('disabled', true);
            $.ajax({
                type: "POST",
                url: '@Url.Action("ApplyCredit","AccountReceivable","Portal")',
                data: $("#form_applycreditform").serialize() + "&action=" + saveAction,
                dataType: 'json',
                success: function (data) {
                    $('#modal_applycreditform').hide()
                    $("#btnSaveClose").prop('disabled', false);
                    $("#btnSaveNew").prop('disabled', false);
                    $("#btnSaveApprove").prop('disabled', false);
                    //document.location.href = data;
                },
                error: function (error) {
                    $("#div_applycreditform").modal('hide');
                    $("#btnSaveClose").prop('disabled', false);
                    $("#btnSaveNew").prop('disabled', false);
                    $("#btnSaveApprove").prop('disabled', false);
                }
            });
        }

        $(document).on("click",
               ".submit-button",
               function (e) {
                   e.preventDefault();
                   var flg = true;
                   if ($("#select_ReasonList").val() == "") {
                       flg = false;
                       $("#select_ReasonList").css("border-color", "red");
                   } else {
                       $("#select_ReasonList").css("border-color", "#c2cad8")
                   }
                   if ($("#creditDesc").val() == "") {
                       flg = false;
                       $("#creditDesc").css("border-color", "red");
                   } else {
                       if (flg)
                           flg = true;
                       else
                           flg = false;
                       $("#creditDesc").css("border-color", "#c2cad8");
                   }

                   var CCflg = validateCreditAmount();

                   if (flg && CCflg) {
                       var balance = parseFloat($("#newBalance").val());
                       var buttonName = $(this).attr("name");

                       saveAction = buttonName;
                       if (balance >= 0) // no customer credit necessary
                           submitForm();
                       else
                           promptCustomerCredit();
                   }
               });

        $(document).on("click",
            ".submit-button-no-prompt",
            function (e) {
                e.preventDefault();
                var flg = true;
                if ($("#select_ReasonList").val() == "") {
                    flg = false;
                    $("#select_ReasonList").css("border-color", "red");
                }
                if ($("#creditDesc").val() == "") {
                    flg = false;
                    $("#creditDesc").css("border-color", "red");
                }

                var CCflg = true;
                if (removeFormatting($("#oldBalance").val()) <= removeFormatting($("#creditAmt").val())) {
                    alert("Credit amount should be less than or equal to invoice amount.");
                    CCflg = false;
                } else {
                    CCflg = true;
                }
                if (flg && CCflg) {
                    var buttonName = $(this).attr("name");
                    saveAction = buttonName;
                    submitForm();
                }
            });

        function promptCustomerCredit() {

            var creditAmt = parseFloat(removeFormatting($("#newBalance").val()));
            if (creditAmt < 0)
                creditAmt = -creditAmt;

            var customerName = $("#lblCustomerName").text();

            $("#lblPromptCreditAmt").text("$" + formatCurrency(creditAmt));
            $("#lblPromptCreditCustomerName").text(customerName.trim());
            $("#modal_customercreditprompt").modal({ backdrop: 'static' });
        }

        function onClickYesApplyCustomerCredit() {
            $("#modal_customercreditprompt").modal('hide');
            submitForm();
        }

        function onClickNoApplyCustomerCredit() {
            $("#modal_customercreditprompt").modal('hide');
        }

        function applyMaskCurrency(id) {
            $(id).inputmask("currency", {
                alias: 'currency',
                prefix: '$ ',
                digits: 2,
                autoUnmask: true,
                removeMaskOnSubmit: true,
                unmaskAsNumber: true,
                allowPlus: false,
                allowMinus: true,
                autoGroup: true,
                positionCaretOnTab: false,
                positionCaretOnClick: "select",
                groupSeparator: ",",
            });
        }


    </script>
}



