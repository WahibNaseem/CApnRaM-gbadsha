@using JKViewModels.Common
@{
    ViewBag.Title = "Approve Manual Invoices";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    var IsApprove = false;
    var IsReject = false;
    JKApi.Core.Common.ClaimView _claim = JKApi.Core.Common.ClaimView.Instance;
    var getPermission = _claim.GETCLAIM_AR_PERMISSION();
    if (getPermission != null)
    {
        string enumName = ARPermission.Account_Invoice_Pending.ToString();
        var validIsApprove = getPermission.Where(x => x.EnumName == enumName && x.IsApprove).FirstOrDefault();
        if (validIsApprove != null && validIsApprove.IsApprove)
        {
            IsApprove = true;
        }
        var validIsReject = getPermission.Where(x => x.EnumName == enumName && x.IsReject).FirstOrDefault();
        if (validIsReject != null && validIsReject.IsReject)
        {
            IsReject = true;
        }
    }
}

@section styles{
    <link href="@Url.Content("~/Content/admin/assets/global/plugins/datatables/datatables.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/admin/assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/admin/assets/global/plugins/bootstrap-multiselect/css/bootstrap-multiselect.css")" rel="stylesheet" />

    <style type="text/css">
        .topheader {
            font-size: 14px;
            font-weight: bold;
            color: #FFF !important;
            text-transform: uppercase;
            margin-top: 3px;
        }

        tr > td {
            font-size: 12px !important;
            padding: 4px !important;
        }

        /*tr > th {
            font-size: 11px !important;
            text-transform: uppercase;
        }*/

        .row {
            margin: 0;
            padding: 5px 0;
        }

        .opendiv {
            padding: 4px;
            background-color: gold;
            text-align: center;
            font-weight: bold;
            color: #ffffff;
        }

        .closeddiv {
            padding: 4px;
            background-color: limegreen;
            text-align: center;
            font-weight: bold;
            color: #ffffff;
        }

        .overpaiddiv {
            padding: 4px;
            background-color: deepskyblue;
            text-align: center;
            font-weight: bold;
            color: #ffffff;
        }

        .overduediv {
            padding: 4px;
            background-color: orangered;
            text-align: center;
            font-weight: bold;
            color: #ffffff;
        }

        .btn.multiselect {
            text-align: left;
            padding-top: 4px;
            padding-bottom: 4px;
            font-size: 11px;
            color: #555;
        }

        .multiselect .caret {
            right: 0;
            position: absolute;
            margin-top: 8px;
            margin-right: 8px;
        }

        .multiselect-container.dropdown-menu {
            text-transform: none;
            font-size: 14px;
        }

        .no-padding {
            padding: 0;
        }

        #tblcontractdetailrows {
        }

        .theadRow tr {
            font-size: 12px;
        }

        .theadRow td {
            border: 1px solid #e8e8e8 !important;
            padding: 0px 5px !important;
            font-size: 12px;
        }

        .theadRowH td {
            border-left: 1px solid #e8e8e8 !important;
            border-right: 1px solid #e8e8e8 !important;
            border-bottom: 1px solid #e8e8e8 !important;
            padding: 5px 5px !important;
            font-size: 12px;
        }

        .theadRowH.remove-padding td {
            padding: 0px !important;
            font-size: 12px;
        }

        .theadRow td > label, .theadRowH td > label {
            float: left;
            margin-top: 3px;
            font-size: 12px;
        }

        .theadRow td input[type=checkbox], .theadRowH td input[type=checkbox] {
            float: left;
            margin-right: 5px;
            margin-top: 6px;
            font-size: 12px;
        }

        .theadRow td input[type=text], .theadRowH td input[type=text] {
            margin-top: 0px !important;
            border: 0;
            border-radius: 0;
            font-size: 12px;
        }

        .theadRow td .input-sm, .theadRowH td .input-sm {
            margin-top: 0px !important;
            border: 0;
            border-radius: 0;
            font-size: 12px;
        }

        .close {
            background-image: url(/Content/admin/assets/global/img/stick_close.png) !important;
            height: 12px !important;
            width: 12px !important;
            margin-top: 0px !important;
        }
    </style>

}
<div class="headerbox">
    <div class="row" style="background-color: #3598DC;color: #fff;">
        <div class="col-md-12 no-padding">
            <div class="alignCenter">
                <div class="col-md-4" style="text-align:right;">
                </div>
                <div class="col-md-4 topheader">
                    MANUAL INVOICE - PENDING APPROVAL
                </div>
                <div class="col-md-4" style="padding-right:5px;">
                    <div class="col-md-7 pull-right no-padding">
                        <div style="display:table-cell;padding-right: 5px;">
                            Region
                        </div>
                        <div style="display:table-cell;width:100%;">
                            @if (ViewBag.regionlist != null)
                            {
                                <select class="form-control input-sm" multiple="multiple" id="regionlist" style="display:none;">
                                    @foreach (var item in (SelectList)ViewBag.regionlist)
                                    {
                                        <option @(item.Selected ? "selected" : "") value="@item.Value">@item.Text</option>
                                    }
                                </select>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="custom-listbox" id="divfranchiseList">
    <div class="headerbox">
        <div class="row">
            <div class="col-md-4">
                &nbsp;
            </div>
        </div>
    </div>
    <form class="form-horizontal" role="form" method="post">
        <input type="hidden" id="hdf" name="hdftotallineno" value="0" />
        <div class="tablebox">
            <div class="table-responsive">
                <table class="table table-striped table-bordered table-hover order-column" id="invoiceList">
                    <thead>
                        <tr>
                            <th style="text-align:center;width:40px;">
                                <input type="checkbox" id="chkSelectAll" name="chkSelectAll" />
                            </th>
                            <th style="text-align:center;width:60px;">
                                Region
                            </th>
                            <th style="text-align:center;width:60px;">
                                Customer No
                            </th>
                            <th style="text-align:center;width:220px">
                                Customer Name
                            </th>
                            <th style="text-align:center;width:70px">
                                Invoice Date
                            </th>
                            <th style="text-align:right;">
                                Description
                            </th>
                            <th style="text-align:center;width:80px">
                                Extended Price
                            </th>
                            <th style="text-align:center;width:70px">
                                Tax
                            </th>
                            <th style="text-align:center;width:100px">
                                Total
                            </th>
                            <th style="text-align:center;width:110px">
                                Status
                            </th>
                            <th style="text-align:center;width:110px">
                                Created By
                            </th>
                            <th style="text-align:center;width:110px" colspan="2">
                                Action
                            </th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
                <input type="hidden" id="hdnCustomerId" name="hdnCustomerId" />
                <input type="hidden" id="hdnMasterTmpTrxId" name="hdnMasterTmpTrxId" />
            </div>
            <div class="row" style="padding-top: 10px; padding-bottom: 20px">
                <div class="col-md-2 control-label" style="padding-top: 0px;">
                    Note :<span class="required"> * </span>
                </div>
                <div class="col-md-5">
                    <textarea class="form-control input-sm" style="resize: none;overflow-x: hidden;" rows="3" id="txtNoteBulk"></textarea>
                </div>
                <div class="col-md-5" style="text-align:left;">
                    @if (IsReject)
                    {
                        <button type="button" id="btnRejectInvoices" class="btn btn-primary">Reject Selected Invoices</button>
                    }
                    @if (IsApprove)
                    {
                        <button type="button" id="btnApproveInvoices" class="btn btn-primary">Approve Selected Invoices</button>
                    }
                </div>
            </div>
        </div>
    </form>
</div>

<form class="form-horizontal" action="" id="form_invoicedetail"></form>
<div class="form-horizontal" id="form_invoiceedit"></div>



@section pageplugins{
    @*<script src="@Url.Content("~/Content/admin/assets/global/plugins/jquery-ui/jquery-ui.min.js")" type="text/javascript"></script>*@
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/jquery-validation/js/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/jquery-inputmask/jquery.inputmask.bundle.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/scripts/datatable.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/datatables/datatables.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/pages/scripts/table-datatables-managed.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/moment.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/bootstrap-typeahead/bootstrap3-typeahead.min.js")" type="text/javascript"></script>
    <script src="~/Scripts/jquery-ui.js" type="text/javascript"></script>
    <script src="~/Content/admin/assets/Card/dist/jquery.card.js"></script>
}
@section scripts{
    <script src="@Url.Content("~/Content/admin/assets/pages/scripts/components-date-time-pickers.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Areas/Portal/Scripts/ApplyCreditForm.js")" type="text/javascript"></script>

    <script>
        var flagForCreatedUser = '@Convert.ToString(JKApi.Core.Common.ClaimView.Instance.GetCLAIM_ROLE_TYPE() == "Accounting-User" || JKApi.Core.Common.ClaimView.Instance.GetCLAIM_ROLE_TYPE() == "Marketing" ? true : false)'
        var CustomerId = parseInt(@TempData["CustomerID"])
        var MID = parseInt(@TempData["MID"])
        $(document).ready(function () {
            bindInvoiceList();
            if (!isNaN(CustomerId) && !isNaN(MID)) {
                btnOpenInvoiceEdit(MID, CustomerId);
            }
            $("#regionlist").multiselect({
                includeSelectAllOption: true,
                selectAllText: 'Select all',
                buttonWidth: '100%',
                nonSelectedText: 'Select region..',
                dropRight: true,
                numberDisplayed: 2
            });
        });

        $("#regionlist").change(function () {
            bindInvoiceList();
        })

        var lstContractDetailServiceTypeList = [];

        $('#chkSelectAll').change(function () {
            if ($(this).is(":checked")) {
                $('input[rel="mgglchk"]').prop('checked', true);
            }
            else {
                $('input[rel="mgglchk"]').prop('checked', false);
            }
        });


        $('#btnApproveInvoices').click(function () {
            var Ids = "";
            $('input[rel="mgglchk"]').each(function (item) {


                if ($(this).is(":checked")) {
                    var mId = $(this).attr('relid');
                    if (Ids != "")
                        Ids = Ids + "," + mId;
                    else
                        Ids = mId;
                }
            });
            if (Ids != "") {
                var note = $("#txtNoteBulk").val();
                var sURL = '@Url.Action("GenerateInvoiceByID", "AccountReceivable", new { area = "Portal" })?ids=' + Ids + '&status=' + 1 + '&note=' + note;
                $.ajax(
                {
                    type: "GET", //HTTP POST Method
                    url: sURL, // Controller/View
                    success: function (res) {
                        $("#txtNoteBulk").val("");
                        bindInvoiceList();
                    },
                    error: function (err) {
                        alert('failure');
                    },
                });
            }
        });

        $('#btnRejectInvoices').click(function () {
            var Ids = "";
            $('input[rel="mgglchk"]').each(function (item) {


                if ($(this).is(":checked")) {
                    var mId = $(this).attr('relid');
                    if (Ids != "")
                        Ids = Ids + "," + mId;
                    else
                        Ids = mId;
                }
            });
            if (Ids != "") {
                var note = $("#txtNoteBulk").val();
                var sURL = '@Url.Action("GenerateInvoiceByID", "AccountReceivable", new { area = "Portal" })?ids=' + Ids + '&status=' + 2 + "&note=" + note;
                $.ajax(
                {
                    type: "GET", //HTTP POST Method
                    url: sURL, // Controller/View
                    success: function (res) {
                        bindInvoiceList();
                    },
                    error: function (err) {
                        alert('failure');
                    },
                });
            }
        });

        function bindInvoiceList() {
            var sURL = '@Url.Action("InvoicesGenerateResultData", "AccountReceivable", new { area = "Portal" })?rgId=' + $('#regionlist').val();
            $.blockUI();//$.blockUI({ message: $('#throbberBlock'), theme: true, baseZ: 12000 });
            $.ajax(
            {
                type: "GET", //HTTP POST Method
                url: sURL, // Controller/View
                success: function (res) {
                    var tblinvoiceList = $('#invoiceList tbody');
                    tblinvoiceList.html("");
                    res.forEach(function (item) {
                        trInvoicelist = "";
                        trInvoicelist += '<tr>';
                        trInvoicelist += '<td style="text-align:center;">'
                        trInvoicelist += '<input type="checkbox" rel="mgglchk" relId="' + item.ManualInvoiceTmpId + '" name="chkCT' + item.ManualInvoiceTmpId + '" />'
                        trInvoicelist += '</td><td style="text-align:center;">'
                        trInvoicelist += item.RegionAcronym;
                        trInvoicelist += '</td><td style="text-align:center;">'
                        trInvoicelist += item.CustomerNo;
                        trInvoicelist += '</td><td style="text-align:left;">'
                        trInvoicelist += item.Name
                        trInvoicelist += '</td><td style="text-align:center;">'
                        trInvoicelist += moment(new Date(parseInt(item.InvoiceDate.substr(6)))).format("MM/DD/YYYY")
                        trInvoicelist += '</td><td style="text-align:center;">'
                        trInvoicelist += item.InvoiceDescription == null ? '' : item.InvoiceDescription
                        trInvoicelist += '</td><td style="text-align:right;">'
                        trInvoicelist += '$ ' + parseFloat(item.ExtendedPrice, 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString()
                        trInvoicelist += '</td><td style="text-align:right;">'
                        trInvoicelist += '$ ' + parseFloat(item.Tax, 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString()
                        trInvoicelist += '</td><td style="text-align:right;">'
                        trInvoicelist += '$ ' + parseFloat(item.Total, 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString()
                        trInvoicelist += '</td><td style="text-align:center;">'
                        trInvoicelist += item.TransactionStatus
                        trInvoicelist += '</td><td style="text-align:center;">'
                        trInvoicelist += item.CreatedBy
                        trInvoicelist += '</td><td style="text-align:center;width: 60px;">'
                        trInvoicelist += '    <a href="javascript:void(0)" onclick="btnOpenInvoiceEdit(' + item.ManualInvoiceTmpId + ',' + item.CustomerId + ')">View/Edit</a> '
                        trInvoicelist += '</td><td style="text-align:center;width: 60px;">'
                        trInvoicelist += '    <a href="javascript:void(0)" onclick="btnOpenInvoiceDelete(' + item.ManualInvoiceTmpId + ')">Delete</a> '
                        trInvoicelist += '</td></tr>'

                        tblinvoiceList.append(trInvoicelist);
                    });


                },
                error: function (err) {
                    alert('failure');
                },
            });
        };


        function btnOpenInvoiceDetail(id) {

            var sURL = '@Url.Action("ManualInvoiceDetail", "AccountReceivable", new { area = "Portal" })?Id=' + id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#form_invoicedetail').html(data);






                    $("#modal_invoicedetail").modal({ backdrop: 'static' });
                },
                error: function () {
                    alert("Content load failed.");
                }
            });
        };

        function btnOpenInvoiceEdit(id, cid) {
            $(".PendingMessage").remove();
            var sURL = '@Url.Action("ManualInvoiceEdit", "AccountReceivable", new { area = "Portal" })?Id=' + id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#form_invoiceedit').html(data);
                    $("#modal_invoiceedit").modal({ backdrop: 'static' });

                    applymaskPercentage("#txtCommissionAmount");

                    lineNo = parseInt($('#hdftotallineno').val());
                    flineNo = parseInt($('#hdfftotallineno').val());
                    $.ajax({
                        type: "GET",
                        url: '@Url.Action("GetContractDetailServiceTypeList", "AccountReceivable", new { area = "Portal" })',
                        success: function (data) {
                            lstContractDetailServiceTypeList = data;
                            var items = [];
                            items.push("<option>Select</option>");
                            $.each(lstContractDetailServiceTypeList, function () {
                                items.push("<option value=" + this.ServiceTypeListid + ">" + this.name + "</option>");
                            });
                            $(' #ddldetaillinenumber').html('');
                            var lineitems = []; lineitems.push("<option>Select</option>");

                            for (var i = 1; i <= parseInt($('#hdftotallineno').val()) ; i++) {
                                $('#ContractDetailServiceTypeList' + i).html(items.join(' '));
                                $('#ContractDetailServiceTypeList' + i).val($('#ContractDetailServiceTypeList' + i).attr('relsel' + i));
                                ContractDetailServiceTypeListCheck('ContractDetailServiceTypeList' + i, i);
                                ContractDetailServiceTypeListOnChange('ContractDetailServiceTypeList' + i, i);
                                //OnlyNumber('#txtqtycc' + i)
                                //onlyDecimal('#txtunitprice' + i)
                                lineitems.push("<option value=" + i + ">" + i + "</option>");
                                applyMaskCurrency('#txtMarkupAmt' + i);
                                applyMaskCurrency('#txtExtendedPrice' + i);
                                applyMaskCurrency('#txtunitprice' + i);
                                applyMaskCurrency('#txttax' + i);
                                applyMaskCurrency('#txttotal' + i);
                                applyMaskNumber('#txtqty' + i);
                                applyTaxExcempt(i);
                                applyCommission(i);
                                applymaskPercentage("#txtCommissionAmount"+i);
                            }
                            $('#ddldetaillinenumber').html(lineitems.join(' '));


                            $("#hdnCustomerId").val(cid);
                            $("#hdnMasterTmpTrxId").val(id);
                            if (flagForCreatedUser != null && flagForCreatedUser != undefined && flagForCreatedUser != "") {
                                if (flagForCreatedUser == "True") {
                                    $(".MainAdmins").hide();
                                }

                            }
                            applyMaskCurrency('#txtsubtotal');
                            applyMaskCurrency('#txttaxamount');
                            applyMaskCurrency('#txttotalamount');


                            $("#tblcontractdetailrows .input-sm").prop('readonly', true)
                            $("#btnSaveMInvoice").click(function (e) {
                                e.preventDefault();
                                $.blockUI();//$.blockUI({ message: $('#throbberBlock'), theme: true, baseZ: 12000 });
                                $("#form_manualinvoice_submitForm").submit();
                            });
                            $("#btnEditMInvoice").click(function (e) {
                                $("#tblcontractdetailrows .input-sm").prop('readonly', false)
                                $("#btnSaveMInvoice").show();
                                $("#btnCancelMInvoice").show();
                                $("#btnEditMInvoice").hide();
                            });
                            $("#btnCancelMInvoice").click(function (e) {
                                $("#tblcontractdetailrows .input-sm").prop('readonly', true)
                                $("#btnSaveMInvoice").hide();
                                $("#btnCancelMInvoice").hide();
                                $("#btnEditMInvoice").show();
                            });
                        }
                    });

                    $('#fsearch-box').typeahead({
                        source: F_typeaheadSource,
                        updater: function (item) {
                            $("#hdfFrenchiseeId").val(item.id);
                            if ($('#ddldetaillinenumber').val() != "Select")
                                bindfranchiseedetail($('#ddldetaillinenumber').val(), item.id, item.name);
                            return item;
                        }
                    }).focus();




                },
                error: function () {
                    alert("Content load failed.");
                }
            });
        };

        function btnOpenInvoiceDelete(id) {

            var sURL = '@Url.Action("ManualInvoiceDelete", "AccountReceivable", new { area = "Portal" })?Id=' + id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    //console.log(data);
                    bindInvoiceList();
                },
                error: function () {
                    alert("Content load failed.");
                }
            });
        };

        var F_typeaheadSource = [];
        function applyAutoSeacrh() {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetAllFranchisees", "Franchise", new { area = "Portal" })',
                data: {},
                success: function (data) {

                    $.each(data, function (key, value) {
                        F_typeaheadSource.push({ id: value.FranchiseeId, name: value.FranchiseeNo + ' ' + value.Name })
                    });


                }
            });
        }
        applyAutoSeacrh();
        var lineNo = 0;
        var flineNo = 0;

        function bindcustomerdetail(customerid) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("CustomerDetaildata", "AccountReceivable", new { area = "Portal" })',
                data: 'customerid=' + customerid,
                success: function (data) {
                    $("#spncustomerno").text($.trim(data.CustomerNo));
                    $("#spncustomername").text($.trim(data.Name));
                    $("#spncustomeraddress").text($.trim(data.Address1));
                    $("#spncustomercity").text($.trim(data.City))
                    $("#spncustomerstate").text($.trim(data.StateName));
                    $("#spncustomerpincode").text($.trim(data.PostalCode));
                    $("#spncustomerbname").text($.trim(data.BName));
                    $("#spncustomerbattname").text($.trim(data.Attention));
                    $("#spncustomeraddress1").text($.trim(data.BAddress1));
                    $("#spncustomercity1").text($.trim(data.BCity))
                    $("#spncustomerstate1").text($.trim(data.BStateName));
                    $("#spncustomerpincode1").text($.trim(data.PostalCode));
                    $("#hdfTaxRateId").val(data.TaxRateId);
                    $("#hdfContractTaxRate").val(data.ContractTaxRate);
                    $("#hdfLeaseTaxRate").val(data.LeaseTaxRate);
                    $("#hdfSupplyTaxRate").val(data.SupplyTaxRate);
                }
            });
        }

        function BindTaxDetails(customerid) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("CustomerDetaildata", "AccountReceivable", new { area = "Portal" })',
                data: 'customerid=' + customerid,
                success: function (data) {
                    $("#hdfTaxRateId").val(data.TaxRateId);
                    $("#hdfContractTaxRate").val(data.ContractTaxRate);
                    $("#hdfLeaseTaxRate").val(data.LeaseTaxRate);
                    $("#hdfSupplyTaxRate").val(data.SupplyTaxRate);
                }
            });
        }



        $('#fsearch-box').keypress(function (event) {
            var keycode = (event.keyCode ? event.keyCode : event.which);
            if (keycode == '13') {
                $("#ddldetaillinenumber").val('')
                $("#fsearch-box'").val('')
            }
        });

        function CalculateAmount(ln) {
            if ($("#hdfContractTaxRate").val() == undefined || $("#hdfContractTaxRate").val() == "")
                $("#hdfContractTaxRate").val("0.0");

            var temptax = parseFloat($("#hdfContractTaxRate").val()) || 0;
            var txtmarkup = parseFloat($('#txtmarkup' + ln).val() == '' ? 0 : $('#txtmarkup' + ln).val())

            var txtunitpriceT = parseFloat($('#hdfunitprice' + ln).val() == '' ? 0 : $('#hdfunitprice' + ln).val());

            var txtqty = parseFloat($('#txtqty' + ln).val() == '' ? 0 : $('#txtqty' + ln).val())
            var txtmarkupamt = (txtunitpriceT * txtmarkup / 100);
            var txtunitpriceplusmarkup = (txtunitpriceT + txtmarkupamt);
            var txttax = $('#txttax' + ln)
            var txttotal = $('#txttotal' + ln)
            var txtExtetotal = 0;

            $('#txtMarkupAmt' + ln).val(txtmarkupamt);
            txtExtetotal = (txtunitpriceplusmarkup * txtqty);
            var taxAmt = 0;
            //txtExtetotal = ((txtunitprice + (txtunitprice * txtmarkup / 100)) * txtqty);
            $('#txtExtendedPrice' + ln).val(txtExtetotal);
            if ($('#chkTaxExcempt' + ln).is(":checked")) {
                taxAmt = 0;
            }
            else {
                taxAmt = txtExtetotal * temptax / 100;
            }

            txttax.val(taxAmt);
            txttotal.val(txtExtetotal + taxAmt);

            var ftotallineno = parseInt($("#hdfftotallineno").val()) || 0;
            debugger
            for (var i = 1; i <= ftotallineno; i++) {                
                $('#frfranchiseeamount' + ln + '_'+ i).val(txtExtetotal);
            }

            var toAmt = 0;
            var toTaxAmt = 0;
            for (var i = 1; i <= lineNo; i++) {

                toTaxAmt = toTaxAmt + parseFloat($('#txttax' + i).inputmask('unmaskedvalue') == '' ? 0 : $('#txttax' + i).inputmask('unmaskedvalue'));
                toAmt = toAmt + parseFloat($('#txttotal' + i).inputmask('unmaskedvalue') == '' ? 0 : $('#txttotal' + i).inputmask('unmaskedvalue'));
            }
            $('#txtsubtotal').val(toAmt - toTaxAmt)
            $('#txttaxamount').val(toTaxAmt)
            $('#txttotalamount').val(toAmt)


            //

            applyMaskCurrency('#txtsubtotal');
            applyMaskCurrency('#txttaxamount');
            applyMaskCurrency('#txttotalamount');
        };
        function applyCommission(id) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetAdditionalBilling", "AccountReceivable", new { area = "Portal" })',
                data: {},
                success: function (data) {


                    if (!$('#rdoAdditional' + id).is(":checked"))
                        $('#txtCommissionAmount' + id).hide();
                    $('#rdoAdditional' + id).change(function () {
                        if ($(this).is(":checked")) {
                            $('#txtCommissionAmount' + id).show();
                            $('#txtCommissionAmount' + id).val(data);
                        }
                        else {
                            $('#txtCommissionAmount' + id).val("0");
                            $('#txtCommissionAmount' + id).hide();
                        }
                    });
                    $('#rdoRegularBilling' + id).change(function () {
                        if ($(this).is(":checked")) {
                            $('#txtCommissionAmount' + id).val("0");
                            $('#txtCommissionAmount' + id).hide();
                        }
                    });
                    $('#rdoExtraWork' + id).change(function () {
                        if ($(this).is(":checked")) {
                            $('#txtCommissionAmount' + id).val("0");
                            $('#txtCommissionAmount' + id).hide();
                        }
                    });
                }
            });
            ////$('#txtCommissionAmount' + id).hide();
            ////$('#chkCommission' + id).change(function () {
            ////    if ($(this).is(":checked")) {
            ////        $('#txtCommissionAmount' + id).show();
            ////    }
            ////    else {
            ////        $('#txtCommissionAmount' + id).val("0");
            ////        $('#txtCommissionAmount' + id).hide();
            ////    }
            ////});
            //$('#txtCommissionAmount' + id).hide();
            //$('#rdoAdditional' + id).change(function () {
            //    if ($(this).is(":checked")) {
            //        $('#txtCommissionAmount' + id).show();
            //    }
            //    else {
            //        $('#txtCommissionAmount' + id).val("0");
            //        $('#txtCommissionAmount' + id).hide();
            //    }
            //});
            //$('#rdoRegularBilling' + id).change(function () {
            //    if ($(this).is(":checked")) {
            //        $('#txtCommissionAmount' + id).val("0");
            //        $('#txtCommissionAmount' + id).hide();
            //    }
            //});
            //$('#rdoExtraWork' + id).change(function () {
            //    if ($(this).is(":checked")) {
            //        $('#txtCommissionAmount' + id).val("0");
            //        $('#txtCommissionAmount' + id).hide();
            //    }
            //});
        }
        function applyTaxExcempt(id) {
            $('#chkTaxExcempt' + id).change(function () { CalculateAmount(id); });
        }
        /*function onlyDecimal(id) {
            $(id).keydown(function (event) {
                if (event.shiftKey == true) { event.preventDefault(); }
                if ((event.keyCode >= 48 && event.keyCode <= 57) || (event.keyCode >= 96 && event.keyCode <= 105) || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 37 || event.keyCode == 39 || event.keyCode == 46 || event.keyCode == 190 || event.keyCode == 110) { }
                else { event.preventDefault(); }
                if ($(this).val().indexOf('.') !== -1 && (event.keyCode == 190 || event.keyCode == 110)) event.preventDefault();
            });
        }*/
        function OnlyNumber(id) {
            $(id).keydown(function (event) {
                //if (event.shiftKey == true) { event.preventDefault(); }
                if ((event.keyCode >= 48 && event.keyCode <= 57) || (event.keyCode >= 96 && event.keyCode <= 105) || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 37 || event.keyCode == 39 || event.keyCode == 46) { }
                else { event.preventDefault(); }
            });
        }
        function applymaskPercentage(id) {
            $(id).inputmask("numeric", {
                radixPoint: ".",
                groupSeparator: ",",
                autoGroup: true,
                suffix: " %",
                rightAlign: true,
                autoUnmask: true,
                removeMaskOnSubmit: true,
                clearMaskOnLostFocus: false,
                oncleared: function () { self.Value(''); }
            });
        }
        function applyMaskCurrency(id) {
            $(id).inputmask("currency", {
                alias: 'currency',
                prefix: '$ ',
                digits: 2,
                autoUnmask: true,
                removeMaskOnSubmit: true,
                unmaskAsNumber: true,
                allowPlus: false,
                allowMinus: false,
                autoGroup: true,
                groupSeparator: ",",
            });
        }

        function applyMaskNumber(id) {
            $(id).inputmask("numeric", {
                autoUnmask: true,
                removeMaskOnSubmit: true,
                oncleared: function () { self.Value(''); }
            });
        }


        function ContractDetailServiceTypeListOnChange(id, line) {
            $('#' + id).change(function () {
                ContractDetailServiceTypeListCheck(id, line);
                CalculateAmount(line);
            });
        }

        function changeSelectedType(line) {
            debugger
            if ($('#rdoclientsupplies'+line).is(':checked')) {
                $('#ContractDetailServiceTypeList' + line).val(29)
            }

            
            if ($('#ContractDetailServiceTypeList' + line).val() == 5 || $('#ContractDetailServiceTypeList' + line).val() == 29) {

                $('#rdoclientsupplies' + line).prop('checked', true);
                $('#rdoclientsupplies' + line).prop('disabled', false);

                $('#rdoExtraWork' + line).prop('disabled', true);
                $('#rdoAdditional' + line).prop('disabled', true);
                $('#rdoRegularBilling' + line).prop('disabled', true);
                

                $('#txtCommissionAmount' + line).val("0");
                $('#txtCommissionAmount' + line).hide();
                $('#spnPer' + line).hide();

                $('#txtmarkup' + line).prop("readonly", false);
            }
            else {
                $('#rdoExtraWork' + line).prop('disabled', false);
                $('#rdoAdditional' + line).prop('disabled', false);
                $('#rdoRegularBilling' + line).prop('disabled', false);
                $('#rdoclientsupplies' + line).prop('disabled', false);

                $('#txtmarkup' + line).prop("readonly", true);
                $('#txtmarkup' + line).val(0);
            }

           
        }
        function ContractDetailServiceTypeListCheck(id, line) {
            if ($('#' + id).val() == 5 || $('#' + id).val() == 29) {
                $('#rdoclientsupplies' + line).prop('checked', true);

                $('#rdoExtraWork' + line).prop('disabled', true);
                $('#rdoAdditional' + line).prop('disabled', true);
                $('#rdoRegularBilling' + line).prop('disabled', true);
                $('#rdoclientsupplies' + line).prop('disabled', false);

                $('#txtCommissionAmount' + line).val("0");
                $('#txtCommissionAmount' + line).hide();
                $('#spnPer' + line).hide();

                $('#txtmarkup' + line).prop("readonly", false);
            }
            else {
                if ($('#' + id).val() != 29 && $('#rdoclientsupplies' + line).is(':Checked')) {
                    $('#rdoExtraWork' + line).prop('checked', true);
                }

                $('#rdoExtraWork' + line).prop('disabled', false);
                $('#rdoAdditional' + line).prop('disabled', false);
                $('#rdoRegularBilling' + line).prop('disabled', false);
                $('#rdoclientsupplies' + line).prop('disabled', false);

                $('#txtmarkup' + line).prop("readonly", true);
                $('#txtmarkup' + line).val(0);
            }

            //if ($('#' + id).val() == 5 || $('#' + id).val() == 29) {
                
            //    $('#rdoclientsupplies' + line).prop('checked', true);

            //    $('#rdoExtraWork' + line).prop('disabled', true);
            //    $('#rdoAdditional' + line).prop('disabled', true);
            //    $('#rdoRegularBilling' + line).prop('disabled', true);
            //    $('#rdoclientsupplies' + line).prop('disabled', true);

            //    $('#txtCommissionAmount' + line).val("0");
            //    $('#txtCommissionAmount' + line).hide();
            //    $('#spnPer' + line).hide();

            //    $('#txtmarkup' + line).prop("readonly", false);
            //}
            //else {
            //    $('#rdoExtraWork' + line).prop('readonly', false);
            //    $('#rdoAdditional' + line).prop('disabled', false);
            //    $('#rdoRegularBilling' + line).prop('disabled', false);
            //    $('#rdoclientsupplies' + line).prop('disabled', false);

            //    $('#txtmarkup' + line).prop("readonly", true);
            //    $('#txtmarkup' + line).val(0);
            //}
        }


        function bindfranchiseedetail(linenumber, franchiseeid, franchiseename) {
            flineNo++;


            //var txtmarkup = parseFloat($('#txtmarkup' + linenumber).val() == '' ? 0 : $('#txtmarkup' + linenumber).val())
            var txtqty = parseFloat($('#txtqty' + linenumber).val() == '' ? 0 : $('#txtqty' + linenumber).val())
            var txtunitprice = parseFloat($('#txtunitprice' + linenumber).inputmask('unmaskedvalue') == '' ? 0 : $('#txtunitprice' + linenumber).inputmask('unmaskedvalue'))
            var txttotal = (txtqty * txtunitprice)

            var lineTotalAmount = 0;
            $('input[relLinea="' + linenumber + '"]').each(function (el) {
                lineTotalAmount += parseFloat(this.defaultValue);
            });

            if (lineTotalAmount + txttotal > txttotal) {
                if (lineTotalAmount < txttotal) {
                    txttotal = txttotal - lineTotalAmount;
                }
                else {
                    txttotal = 0;
                }
            }



            var tempRow = '<tr id=row_' + flineNo + '><td><input type="hidden" relLine="' + linenumber + '" id="hdfFrenchiseeId' + flineNo + '_' + linenumber + '" name="hdfFrenchiseeId' + flineNo + '_' + linenumber + '" value="' + franchiseeid + '" /><input type="text" readonly id="frlinenumber' + flineNo + '_' + linenumber + '" name="frlinenumber' + flineNo + '_' + linenumber + '" value="' + linenumber + '" class="form-control input-sm cnumeric" style="padding: 5px;border-radius: 0px;" /></td>'
            tempRow = tempRow + '<td><input type="text" required relLine="' + linenumber + '" readonly id="frfranchiseeno' + flineNo + '_' + linenumber + '" name="frfranchiseeno' + flineNo + '_' + linenumber + '" value="' + $.trim(franchiseename.split('   ')[0]) + '" class="form-control input-sm cnumeric" style="padding: 5px;border-radius: 0px;" /></td>'
            tempRow = tempRow + '<td><input type="text" required relLine="' + linenumber + '" readonly id="frfranchiseename' + flineNo + '_' + linenumber + '" name="frfranchiseename' + flineNo + '_' + linenumber + '" value="' + $.trim(franchiseename.split('   ')[1]) + '" class="form-control input-sm cnumeric" style="padding: 5px;border-radius: 0px;" /></td>'
            tempRow = tempRow + '<td><input type="text" required relLine="' + linenumber + '"  relLinea="' + linenumber + '" id="frfranchiseeamount' + flineNo + '_' + linenumber + '" name="frfranchiseeamount' + flineNo + '_' + linenumber + '" value="' + txttotal + '" class="form-control input-sm cnumeric requiredValidation" style="padding: 5px;border-radius: 0px;" /></td>';
            tempRow = tempRow + '<td><a style="font-size: 16px;padding: 3px;color: mediumvioletred;" href="javascript:deleteFrenchisee(' + linenumber + ',' + flineNo + ');"><i class="fa fa-trash" aria-hidden="true"></i></a></td></tr>';



            $('#frdestributionTable tbody').append(tempRow);
            applyMaskCurrency('#frfranchiseeamount' + flineNo + '_' + linenumber);
            $("#hdfftotallineno").val(flineNo);


            setTimeout(function () {
                $("#hdfFrenchiseeId").val(0);
                //document.getElementById('ddldetaillinenumber').selectedIndex = 0;
                $('#fsearch-box').val('');
            }, 500);

        }



    </script>
}




