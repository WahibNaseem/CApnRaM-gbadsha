@model JKViewModels.AccountReceivable.CreditsSearchViewModel
@{
    ViewBag.Title = "Account Receivable Credit List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section styles{
    <link href="~/Content/admin/assets/global/plugins/jquery-ui/jquery-ui.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="@Url.Content("~/Content/admin/assets/global/plugins/bootstrap-multiselect/css/bootstrap-multiselect.css")" />

    <style type="text/css">
        .topheader {
            font-size: 14px;
            font-weight: bold;
            color: #FFF !important;
            text-transform: uppercase;
            margin-top: 3px;
        }


        .lbl-p5 {
            padding: 5px;
        }

            .lbl-p5.red {
                color: red;
            }


            .lbl-p5.green {
                color: lightgreen;
            }

        input[type="text"].txtcolon:before {
            content: ": ";
        }

        .credit-field {
            width: 80px !important;
        }

        .alignRight {
            text-align: right;
        }

        .alignCenter {
            text-align: center;
        }

        .close {
            background-image: url(/Content/admin/assets/global/img/stick_close.png) !important;
            height: 12px !important;
            width: 12px !important;
            margin-top: 0px !important;
        }

        .custom-listbox .headerbox {
            padding: 3px 0px 3px 5px;
            font-weight: normal;
        }

        .custom-listbox {
            margin-top: 4px;
            margin-bottom: 0px;
        }

        .row {
            margin: 0;
            padding: 3px 0;
        }

        .btn.multiselect {
            text-align: left;
            padding-top: 4px;
            padding-bottom: 4px;
            font-size: 11px;
            color: #555;
        }

        .multiselect .caret {
            right: 0;
            position: absolute;
            margin-top: 8px;
            margin-right: 8px;
        }

        .multiselect-container.dropdown-menu {
            text-transform: none;
            font-size: 14px;
        }

        .no-padding {
            padding: 0;
        }

        #modal_RegionModel .modal-content {
            width: 55% !important;
            margin-left: 30% !important;
        }
    </style>

}

@Html.HiddenFor(o => o.searchBy)
@Html.HiddenFor(o => o.searchValue)
@Html.HiddenFor(o => o.billMonth)
@Html.HiddenFor(o => o.billYear)

<div class="custom-listbox" id="divCreditList">
    <div class="headerbox">
        <div class="row">
            <div class="col-md-12 text-center">
                Credit List
            </div>
        </div>
    </div>
</div>
<div class="tablebox">
    <div class="row padding-tb1">
        <div class="row no-padding">
            <div class="table-responsive">
                <table class="table table-striped table-bordered table-hover" id="CustomerCreditsList">
                    <thead>
                        <tr>
                            <th style="text-align:center;width:7%;font-weight: normal;">
                                Region Name
                            </th>
                            <th style="text-align:center;width:8%; font-weight: normal;">
                                Credit No
                            </th>
                            <th style="text-align:center;width:7%; font-weight: normal;">
                                Credit Date
                            </th>
                            <th style="text-align:center;width:7%; font-weight: normal;">
                                Customer No
                            </th>
                            <th style="text-align:center;width:20%; font-weight: normal;">
                                Customer Name
                            </th>
                            <th style="text-align:center;width:10%; font-weight: normal;">
                                Reason
                            </th>
                            <th style="text-align:center;width:20%; font-weight: normal;">
                                Description
                            </th>
                            <th style="text-align:center;width:7%; font-weight: normal;">
                                Invoice No
                            </th>
                            <th style="text-align:center;width:7%; font-weight: normal;">
                                Invoice Amount
                            </th>
                            <th style="text-align:center;width:7%; font-weight: normal;">
                                Credit Amount
                            </th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                    <tfoot>
                        <tr style="background:#95a5a6;color:white;">
                            <td colspan="7"></td>
                            <td style="text-align:center;"><strong>Total:</strong> </td>
                            <td style="text-align:right;width:50px;"><strong><span id="totalInvAmount" style="float: right"></span> </strong> </td>
                            <td style="text-align:right;width:45px;"><strong><span id="totalCrdAmount" style="float: right"></span> </strong> </td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
</div>

<div class="form-horizontal" id="form_invoicedetailPopup"></div>

<div class="form-horizontal" id="form_CusCreditDetails"></div>

<form class="form-horizontal" action="" id="form_Billingsetting" method="POST">
    @*<div class="modal fade custom-model custom-form-design" id="ModalEditCustomerInfo" tabindex="-1" role="basic" aria-hidden="true" style="display: none;">
        <div class="modal-dialog" style="width:869px" id="RenderEditCustomerInfoPopup">
        </div>
    </div>*@
</form>

@section scripts{
    @*<script src="@Url.Content("~/Content/admin/assets/pages/scripts/components-date-time-pickers.min.js")" type="text/javascript"></script>*@
    <script>
        $(document).ready(function () {

            bindCreditList($('#billMonth').val(), $('#billYear').val());
        });

        $(document).on('click', '#btnClosemodel', function () {
            $("#modal_invoicedetail").modal('hide');
        });

        function getTableURL(_monthVal, _yearVal) {
            console.log($('#searchBy').val())
            console.log($('#searchValue').val())
            console.log($('#billMonth').val())
            console.log($('#billYear').val())
            var sURL = '@Url.Action("CreditSearchResultData", "AccountReceivable", new { area = "Portal" })?m=' + _monthVal + '&y=' + _yearVal + '&sv=' + $('#searchValue').val() + '&sb=' + $('#searchBy').val()

            return sURL;
        };

        function bindCreditList(_monthVal, _yearVal) {
            var totalInvAmount = 0.0;
            var totalCrdAmount = 0.0;
            var sURL = getTableURL(_monthVal, _yearVal);
            var ps = $('#pageSize').val();
            $('#totalInvAmount').text(totalInvAmount);
            $('#totalCrdAmount').text(totalCrdAmount);
            $('#CustomerCreditsList tbody').html('');
            var elem = $('#CustomerCreditsList tbody');
            var ps = $('#pageSize').val();

            $('#CustomerCreditsList').dataTable({
                "ordering": false,
                "bAutoWidth": false,
                "iDisplayLength": ps == '-1' ? 25 : ps,
                "bDestroy": true,
                //"aLengthMenu": [[5, 7, 10, 25, 50, -1], [5, 7, 10, 25, 50, "All"]],
                "dom": "<'table-responsive't><'bottom'ip><'clear'>",
                "aaSorting": [[0, "desc"]],
            })
            $.blockUI();
            $.ajax({
                url: sURL,
                success: function (res) {
                    var tempRow = "";
                    $(elem).html('');
                    $.each(res, function (index, value) {

                        tempRow = "";

                        totalInvAmount = totalInvAmount + parseFloat(value.InvAmount);
                        totalCrdAmount = totalCrdAmount + parseFloat(value.CrdAmount);

                        tempRow += '<tr>';
                        tempRow += '<td style="text-align: center;font-size: 12px;">' + value.RegionName + '</td>';
                        tempRow += '<td style="text-align: left;font-size: 12px;"><a onclick="btnOpenCusCreditDetail(\'' + value.CreditId + '\')">' + value.TransactionNumber + '</a></td>';
                        tempRow += '<td style="text-align: center;font-size: 12px;">' + formatJSONDateUtc(value.CreditDateForCreditList) + '</td>'

                        tempRow += '<td style="text-align: center;font-size: 12px;"><a onclick="showEditCustomerInfo(\'' + value.CustomerId + '\')">' + value.CustomerNo + '</a></td>';
                        tempRow += '<td style="text-align: left;font-size: 12px;">' + value.CustomerName + '</td>';

                        tempRow += '<td style="text-align: center;font-size: 12px;">' + value.Reason + '</td>';
                        tempRow += '<td style="text-align: left;font-size: 12px;">' + value.Description + '</td>';

                        tempRow += '<td style="text-align: center;font-size: 12px;"><a onclick="showInvoiceDetail(\'' + value.InvoiceId + '\')">' + value.InvoiceNo + '</a></td>';
                        tempRow += '<td style="text-align: right;font-size: 12px;">' + formatCurrency(value.InvAmount, true) + '</td>';
                        tempRow += '<td style="text-align: right;font-size: 12px;">' + formatCurrency(value.CrdAmount, true) + '</td>';
                        tempRow += '</tr>';

                        $(elem).append(tempRow);
                    });

                    $.unblockUI();
                    $('#totalInvAmount').text(formatCurrency(totalInvAmount, true));
                    $('#totalCrdAmount').text(formatCurrency(totalCrdAmount, true));

                },
                error: function () { }

            });
        };

        function btnOpenCusCreditDetail(id) {
            $.blockUI();
            var sURL = '@Url.Action("CustomerCreditDetailPopup", "AccountReceivable", new { area = "Portal" })?Id=' + id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#form_CusCreditDetails').html(data);
                    $("#modal_CusCreditDetail").modal({ backdrop: 'static' });
                    $('.modal-dialog').draggable();
                    $.unblockUI();
                },
                error: function () {
                    alert("Content load failed.");
                }
            });
        };
        function showInvoiceDetail(id) {
            $.blockUI();
            var sURL = '@Url.Action("InvoiceDetail", "AccountReceivable", new { area = "Portal" })?Id=' + id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#form_invoicedetailPopup').html(data);
                    $("#modal_invoicedetail").modal({ backdrop: 'static' });
                    $('.modal-dialog').draggable();
                    $.unblockUI();
                },
                error: function () {
                    $.unblockUI();
                    alert("Content load failed.");
                }
            });
        }

        function showEditCustomerInfo(Id) {

            var sURL = '@Url.Action("PendingApprovalListEditCustomerPopup", "Customer", new { area = "Portal" })?id=' + Id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#form_Billingsetting').html(data);
                    $("#ModalEditCustomerInfo").modal({ backdrop: 'static' });
                    $(".input-group-btn").click(function () {
                        $(this).prev().trigger("focus");
                        $(this).prev().trigger("focus");
                    });
                    $(".date-picker").datepicker();
                    $(".edit").attr("disabled", "disabled");
                    $(".edit").attr("readonly", "readonly");

                    $("#btnSave").prop("disabled", "false");
                    $("#btnSave").prop("readonly", "true");
                    $("#btnCancel").prop("disabled", "false");
                    $("#btnCancel").prop("readonly", "true");
                    $("#btnSave").hide();
                    $("#btnCancel").hide();

                    $(".editmain1").attr("disabled", "disabled");
                    $(".editmain1").attr("readonly", "readonly");
                    $(".editmain").attr("disabled", "disabled");
                    $(".editmain").attr("readonly", "readonly");

                    $(".editbill1").attr("disabled", "disabled");
                    $(".editbill1").attr("readonly", "readonly");
                    $(".editbill").attr("disabled", "disabled");
                    $(".editbill").attr("readonly", "readonly");

                    $(".EditBtn").show();
                    $(".SaveBtn").hide();
                    $(".CancelBtn").hide();

                },
                error: function () {
                    alert("Content load failed.");
                }
            });

        }

        function btnInvoicePopupClose() {
            $("#modal_invoicedetail").modal('hide');
        }
        function formatJSONDateUtc(jsonDate) {
            if (jsonDate != null) {
                var dtstr = jsonDate.substr(6);
                var dateString = dtstr.substring(0, dtstr.length - 2);
                var currentTime = new Date(parseInt(dateString));
                var date = moment.utc(currentTime).format("MM/DD/YYYY");
                return date;
            }
            return null;
        }       
        function formatCurrency(total, dollar) {
            dollar = (dollar == true ? true : false);
            var neg = false;
            if (total < 0) {
                neg = true;
                total = Math.abs(total);
            }
            return (neg ? "-" : '') + (dollar ? "$" : "") + parseFloat(total, 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString();
        }

    </script>
}