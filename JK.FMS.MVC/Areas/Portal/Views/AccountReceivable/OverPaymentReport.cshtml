@{
    ViewBag.Title = "Over Payment Report";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section styles{
    <link href="~/Content/admin/assets/global/plugins/jquery-ui/jquery-ui.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="@Url.Content("~/Content/admin/assets/global/plugins/bootstrap-multiselect/css/bootstrap-multiselect.css")" />

    <style type="text/css">
        .topheader {
            font-size: 14px;
            font-weight: bold;
            color: #FFF !important;
            text-transform: uppercase;
            margin-top: 3px;
        }


        .lbl-p5 {
            padding: 5px;
        }

            .lbl-p5.red {
                color: red;
            }


            .lbl-p5.green {
                color: lightgreen;
            }

        input[type="text"].txtcolon:before {
            content: ": ";
        }

        .credit-field {
            width: 80px !important;
        }

        .alignRight {
            text-align: right;
        }

        .alignCenter {
            text-align: center;
        }
        .alignLeft {
            text-align: left;
        }

        .close {
            background-image: url(/Content/admin/assets/global/img/stick_close.png) !important;
            height: 12px !important;
            width: 12px !important;
            margin-top: 0px !important;
        }

        .custom-listbox .headerbox {
            padding: 3px 0px 3px 5px;
            font-weight: normal;
        }

        .custom-listbox {
            margin-top: 4px;
            margin-bottom: 0px;
        }

        .row {
            margin: 0;
            padding: 3px 0;
        }

        .btn.multiselect {
            text-align: left;
            padding-top: 4px;
            padding-bottom: 4px;
            font-size: 11px;
            color: #555;
        }

        .multiselect .caret {
            right: 0;
            position: absolute;
            margin-top: 8px;
            margin-right: 8px;
        }

        .multiselect-container.dropdown-menu {
            text-transform: none;
            font-size: 14px;
        }

        .no-padding {
            padding: 0;
        }

        #modal_RegionModel .modal-content {
            width: 55% !important;
            margin-left: 30% !important;
        }
    </style>

}
<div class="headerbox">
    <div class="row" style="background-color: #3598DC;color: #fff;">
        <div class="col-md-12 no-padding">
            <div class="alignCenter">
                <div class="col-md-4" style="text-align:right;">
                </div>
                <div class="col-md-4 topheader">
                    Over Payment Balance
                </div>
                <div class="col-md-2 pull-right" style="padding-right:5px;">
                    <div style="display:table-cell;padding-right: 5px;">
                        Region
                    </div>
                    <div style="display:table-cell;width:100%;">
                        @if (ViewBag.regionlist != null)
                        {
                            <select class="form-control input-sm" multiple="multiple" id="regionlist" style="display:none;">
                                @foreach (var item in (SelectList)ViewBag.regionlist)
                                {
                                    <option @(item.Selected ? "selected" : "") value="@item.Value">@item.Text</option>
                                }
                            </select>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="custom-listbox" id="divfranchiseList" style="margin-top:4px;margin-bottom:3px;">
    <div class="headerbox">
        <div class="row no-padding">
            <div class="col-sm-1 page-size">
                <select class="form-control input-sm" id="pageSize" style="padding-left:6px;">
                    <option value="-1">All</option>
                    <option value="100" selected>100</option>
                    <option value="50">50</option>
                    <option value="25">25</option>
                </select>
            </div>
            <div class="col-md-3">
                <div class="input-icon">
                    <i class="icon-magnifier icon-align-right" style="margin-top: 8px;"></i>
                    <input id="input_Search" type="text" required name="customernumber" autocomplete="off" placeholder="Search" value="" class="form-control input-sm typeahead" />
                </div>
            </div>

            <div class="col-md-5 pull-right no-padding">

                <div class="col-md-10 pull-right no-padding" style="text-align:center;">
                    <div class="col-md-6 no-padding" style="margin-left:30px;">
                        <select id="select_timeduration" class="form-control input-sm">
                            <option value="1">This Week</option>
                            <option value="2">This Week-to-date</option>
                            <option value="3" selected="selected">This Month</option>
                            <option value="4">This Month-to-date</option>
                            <option value="5">This Quarter</option>
                            <option value="6">This Quarter-to-date</option>
                            <option value="7">This Fiscal Year</option>
                            <option value="8">This Fiscal Year-to-date</option>
                            <option value="9">Today</option>
                            <option value="10">Yesterday</option>
                            <option value="11">Last Week</option>
                            <option value="12">Last Month</option>
                            <option value="13">Last Quarter</option>
                            <option value="14">Last Year</option>
                            <option value="15">Custom Date</option>
                            <option value="16">Period</option>
                        </select>
                    </div>
                    <div class="col-md-5 divspandate no-padding" style="margin-top: 3px; margin-left: 0px; display: block; float: right;" id="divspandate">
                        <span id="spnStartDate"></span> - <span id="spnEndtDate"></span>
                    </div>
                    <div class="col-md-3 no-padding" style="margin-left: 3px; width: 70px; display: none;" id="divSD">
                        <input type="text" name="txtStartDate" id="txtStartDate" value="" class="form-control input-sm date-picker RemovePeriodvalidation" style="padding: 3px;" />
                    </div>
                    <div class="col-md-3 no-padding" style="margin-left: 3px; width: 70px; display: none;" id="divED">
                        <input type="text" name="txtEndtDate" id="txtEndtDate" value="" class="form-control input-sm date-picker RemovePeriodvalidation" style="padding: 3px;" />
                    </div>
                    <div class="col-md-3 no-padding" style="margin-left: 3px; width: 70px; display: none;" id="divmonth">
                        <select id="monthlist" class="form-control input-sm">
                            <option value=""></option>
                            <option value="1">Jan</option>
                            <option value="2">Feb</option>
                            <option value="3">Mar</option>
                            <option value="4">Apr</option>
                            <option value="5">May</option>
                            <option value="6">June</option>
                            <option value="7">July</option>
                            <option value="8">Aug</option>
                            <option value="9">Sep</option>
                            <option value="10">Oct</option>
                            <option value="11">Nov</option>
                            <option value="12">Dec</option>
                        </select>
                    </div>
                    <div class="col-md-3 no-padding" style="margin-left: 3px; width: 70px; display: none;" id="divyear">
                        <select class="form-control input-sm" id="yearlist" style="padding-left: 2px;">
                            <option value=""></option>
                            <option value="2018">2018</option>
                            <option value="2017">2017</option>
                            <option value="2016">2016</option>
                            <option value="2015">2015</option>
                            <option value="2014">2014</option>
                            <option value="2013">2013</option>
                            <option value="2012">2012</option>
                            <option value="2011">2011</option>
                            <option value="2010">2010</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="tablebox">
    <div class="row padding-tb1">
        <div class="row no-padding">
            <div class="table-responsive" style="padding-bottom: 100px;">
                <table class="table table-striped table-bordered table-hover" id="OverPaymentList">
                    <thead>
                        <tr>
                            <th style="text-align:center;width:30px;font-size: 11px !important;font-weight: normal;">
                                <input type="checkbox" id="chkOPSelectAll"  value="" />
                            </th>
                            <th style="text-align:center;width:30px;font-size: 11px !important;font-weight: normal;">
                                Region
                            </th>
                            <th style="text-align:center;width:80px;font-size: 11px !important;font-weight: normal;">
                                Customer No
                            </th>
                            <th style="text-align:left;font-size: 11px !important;font-weight: normal;">
                                Customer Name
                            </th>
                            <th style="text-align:center;width:150px;font-size: 11px !important;font-weight: normal;">
                                Description
                            </th>
                            <th style="text-align:center;width:80px;font-size: 11px !important;font-weight: normal;">
                                Invoice #
                            </th>
                            <th style="text-align:center;width:100px;font-size: 11px !important;font-weight: normal;">
                                Invoice Amount
                            </th>
                            <th style="text-align:center;width:100px;font-size: 11px !important;font-weight: normal;">
                                Invoice Balance
                            </th>                          
                            <th style="text-align:center;width:3%;font-size: 11px !important;font-weight: normal;">
                                Action
                            </th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                    <tfoot>
                        <tr style="background:#95a5a6;color:white;">
                            <td colspan="4"></td>
                            <td colspan="2" style="text-align:right;font-size: 11px !important;    padding: 5px !important;"><strong>Total:</strong> </td>
                            @*<td style="text-align:right;width:50px;font-size: 11px !important;    padding: 5px !important;"><strong><span id="totalCheckAmount" style="float: right"></span> </strong> </td>*@
                            <td style="text-align:right;width:50px;font-size: 11px !important;    padding: 5px !important;"><strong><span id="totalApplyAmount" style="float: right"></span> </strong> </td>
                            <td style="text-align:right;width:45px;font-size: 11px !important;    padding: 5px !important;"><strong><span id="totalBalance" style="float: right"></span> </strong> </td>
                            <td></td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
</div>


<div class="modal fade in" id="modal_RegionModel" tabindex="-1" role="basic" aria-hidden="true" style="display: none; padding-right: 17px;">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" style="border-radius: 8px;">
            <div class="modal-header headerbox list" style="padding:0px!important;border-bottom: none;">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true" style="margin-top: 12px !important;margin-right: 12px !important;"></button>
                <h4 class="modal-title text-center" style="margin-top: 0px; margin-bottom: 4px;  padding: 7px!important;font-size: 12px;font-weight: bold;background: #3598DC !important;color: #FFF !important;border: 1px solid #3598DC !important;padding: 0px;text-transform: uppercase;">
                    Select Region
                </h4>
            </div>
            <div class="modal-body form form-horizontal" style="padding-top: 1px;margin-top: -5px;">
                <div class="form-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label class="control-label col-md-12" style="text-align: center;padding: 5px;background-color: #e8e8e8;margin-bottom:5px;font-weight:bold;">Select Region</label>
                                @if (ViewBag.regionlist != null)
                                {
                                    <select class="form-control input-sm" id="selectregionlist">
                                        <option value="">Select Region</option>
                                        @foreach (var item in (SelectList)ViewBag.regionlist)
                                        {
                                            <option @(item.Selected ? "selected" : "") value="@item.Value">@item.Text</option>
                                        }
                                    </select>
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-actions">
                    <div class="col-md-12">
                        <button type="button" name="SaveNew" id="btnRegion" class="btn btn-primary button-next pull-right" onclick="" style="margin-right:0px;">Select Region</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="form-horizontal" id="form_paymentlist"></div>
<div id="div_applycreditform"></div>
<div class="form-horizontal" id="form_invoicedetailPopup"></div>

<div class="form-horizontal" id="form_CusCreditDetails"></div>

<form class="form-horizontal" action="" id="form_Billingsetting" method="POST">
    @*<div class="modal fade custom-model custom-form-design" id="ModalEditCustomerInfo" tabindex="-1" role="basic" aria-hidden="true" style="display: none;">
            <div class="modal-dialog" style="width:869px" id="RenderEditCustomerInfoPopup">
            </div>
        </div>*@
</form>
<div id="divmodal_ManualPayment"></div>
@section scripts{
    <script type="text/javascript">

        var OverPmtList;
        var totalInvAmount = 0.0;
        var totalCrdAmount = 0.0;

        function getTableURL() {
            var regionIds = $("#regionlist").val();
            var spnStartDate = $('#spnStartDate').text();
            var spnEndDate = $('#spnEndtDate').text();
            var _monthVal = $('#monthlist').val();
            var _yearVal = $('#yearlist').val();
           

            if (_monthVal > 0 && _yearVal > 0) {
                var date = new Date(_monthVal + '/01/' + _yearVal);
                var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);
                var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);
                $('#spnStartDate').html(moment(firstDay).format('L'));
                $('#spnEndtDate').html(moment(lastDay).format('L'));

                spnStartDate = $('#spnStartDate').text();
                spnEndDate = $('#spnEndtDate').text();
            }



            var sURL = '@Url.Action("OverPaymentReportData", "AccountReceivable", new { area = "Portal" })?regionIds=' + regionIds + '&FromDate=' + spnStartDate + '&ToDate=' + spnEndDate + '&SearchText=';

            return sURL;
        };

        $("#regionlist").change(function () {
            refreshTable();
        })
        $(window).load(function () {
            if ('@ViewBag.selectedRegionId' == 0) {
                $("#modal_RegionModel").modal({ backdrop: 'static' });
            } else {
                refreshTable();
            }
        });
        $(document).ready(function () {

            $("#btnRegion").click(function () {
                if ($("#selectregionlist").val() != "") {
                    $("#regionlist option[value='" + $("#selectregionlist").val() + "']").attr("selected", 1);
                    $("#regionlist").multiselect("refresh");
                    refreshTable();
                    $(".close").click();
                }
            });

            @*if ('@ViewBag.selectedRegionId' > 0) {
                $("#regionlist option[value='" + '@ViewBag.selectedRegionId' + "']").attr("selected", 1);
                $("#regionlist").multiselect("refresh");
            }*@

            $("#regionlist").multiselect({
                includeSelectAllOption: true,
                selectAllText: 'Select all',
                buttonWidth: '100%',
                nonSelectedText: 'Select region..',
                dropRight: true,
                numberDisplayed: 2
            });

            $('#divspandate').show();
            $('#divSD').hide();
            $('#divED').hide();

            firstDay = moment().subtract(0, 'month').startOf('month').toString();
            lastDay = moment().subtract(0, 'month').endOf('month').toString();

            $('#spnStartDate').html(moment(firstDay).format('L'));
            $('#spnEndtDate').html(moment(lastDay).format('L'));
            //$('#txtStartDate').inputmask("mm/dd/yyyy", {});
            //$('#txtEndtDate').inputmask("mm/dd/yyyy", {});
            $("#input_Search").keyup(function () {
                var table = $("#OverPaymentList").DataTable();
                table.search($(this).val()).draw();
            });

            $("#pageSize").change(function () {
                setPaging();
            });

            OverPmtList = $('#OverPaymentList').DataTable({
                "bAutoWidth": false,
                cache: false,
                "order": false,
                "iDisplayLength": 25,
                "dom": '<"top">rt<"bottom"lp><"clear">',
                "aaSorting": [[0, "desc"]],
                "bLengthChange": false,
                "ajax": {
                    "dataSrc": "aadata"
                },
                "aoColumns": [
                    {
                        "sName": "checkbox",
                        "bSortable": true,
                        "sClass": "dt-center",
                        "mRender": function (data, type, full) {
                            return '<input type="checkbox" id="chkOPInvoice_' + full.InvoiceId +'" relOPCHK = "chkOPInv"  value="" />';
                        }
                    },                        
                    {
                        "sName": "Region",
                        "bSortable": true,
                        "sClass": "dt-center",
                        "mRender": function (data, type, full) {
                            return full.Region;
                        }
                    }, {
                        "sName": "CustomerNo",
                        "bSortable": true,
                        "sClass": "dt-center",
                        "mRender": function (data, type, full) {
                            return full.CustomerNo;
                        }
                    },
                    {
                        "sName": "CustomerName",
                        "bSortable": true,
                        "sClass": "alignLeft",
                        "mRender": function (data, type, full) {
                            return full.CustomerName;
                        }
                    },
                    {
                        "sName": "InvoiceDescription",
                        "bSortable": true,
                        "sClass": "alignLeft",
                        "mRender": function (data, type, full) {
                            return full.InvoiceDescription;
                        }
                    },
                    {
                        "sName": "InvoiceNo",
                        "bSortable": true,
                        "sClass": "dt-center",
                        "mRender": function (data, type, full) {
                            var html =  "<a onclick=showInvoiceDetail('" + full.InvoiceId + "') >" + full.InvoiceNo + "</a>";
                            return html;
                            return full.InvoiceNo;
                        }
                    },
                    {
                        "sName": "InvoiceAmount",
                        "bSortable": true,
                        "sClass": "dt-right",
                        "mRender": function (data, type, full) {
                            return '$' + formatCurrency(full.InvoiceAmount);
                        }
                    },
                    {
                        "sName": "InvoiceBalance",
                        "bSortable": true,
                        "sClass": "dt-right",
                        "mRender": function (data, type, full) {

                            var _amtBAL = full.InvoiceBalance;
                            if (full.InvoiceBalance < 0)
                                _amtBAL = '<span style="color:red;">($' + formatCurrency(_amtBAL * -1) + ')</span>';

                            return _amtBAL;
                        }
                    },

                    //{
                    //    "sName": "PaymentNo",
                    //    "bSortable": true,
                    //    "sClass": "dt-center",
                    //    "mRender": function (data, type, full) {
                    //        var html = "";
                    //        if (full.SourceTypeListId == 3)
                    //            html = "<a onclick=btnOpenPaymentDetail('" + full.SourceId + "') >" + full.SourceId + "</a>";
                    //        if (full.SourceTypeListId == 4)
                    //            html = "<a onclick=btnOpenCusCreditDetail('" + full.SourceId + "') >" + full.SourceId + "</a>";
                    //        return html;

                    //    }
                    //},
                    //{
                    //    "sName": "CheckNumber",
                    //    "bSortable": true,
                    //    "sClass": "dt-center",
                    //    "mRender": function (data, type, full) {
                    //        return full.CheckNumber;
                    //    }
                    //},
                    //{
                    //    "sName": "CheckAmount",
                    //    "bSortable": true,
                    //    "sClass": "dt-right",
                    //    "mRender": function (data, type, full) {
                    //        return '$' + formatCurrency(full.CheckAmount);
                    //    }
                    //},
                    //{
                    //    "sName": "PaymentApplyAmount",
                    //    "bSortable": true,
                    //    "sClass": "dt-right",
                    //    "mRender": function (data, type, full) {
                    //        return '$' + formatCurrency(full.PaymentApplyAmount);
                    //    }
                    //},
                    //{
                    //    "sName": "OverflowAmount",
                    //    "bSortable": true,
                    //    "sClass": "dt-right",
                    //    "mRender": function (data, type, full) {
                    //        return '$' + formatCurrency(full.OverflowAmount);
                    //    }
                    //},
                    {
                        "sName": "Action",
                        "bSortable": false,
                        "sClass": "personlink alignCenter",
                        "mRender": function (data, type, full) {
                            var action = "<div class='btn-group dropdown'>";
                            action += "<a target='_blank'  dropdown-toggle' data-toggle='dropdown'>";
                            action += "<i class='fa fa-hand-o-right' aria-hidden='true'></i>";
                            action += "</a>";
                            action += "<ul class='dropdown-menu pull-right'>";
                            action += "<li><a href='javascript:void(0);' onclick='showApplyOverflowPayment(" + full.CustomerId + "," + full.InvoiceId + "," + full.OverflowId + "," + full.OverflowAmount + ")'><i class='fa fa-plus'></i> Select </a></li>";
                            action += "<li><a href='javascript:void(0);' onclick='showApplyOverflowPayment(" + full.CustomerId + "," + full.InvoiceId + "," + full.OverflowId + "," + full.OverflowAmount + ")'><i class='fa fa-plus'></i> Move Money </a></li>";
                            action += "<li><a href='javascript:void(0);' onclick='showApplyOverflowIssueRefund(" + full.CustomerId + "," + full.InvoiceId + "," + full.OverflowId + "," + full.OverflowAmount + ")'><i class='fa fa-plus'></i> Issue Refund </a></li>";
                            
                            //if (full.SourceTypeListId == 4) {
                            //    action += "<li><a href='javascript:void(0);' onclick='btnOpenApplyCreditForm(" + full.InvoiceId + ")'><i class='fa fa-plus'></i> Apply Credit </a></li>";
                            //}
                            //if (full.SourceTypeListId == 3) {
                            //    action += "<li><a href='javascript:void(0);' onclick='showManualPayment(" + full.CustomerId + ")'><i class='fa fa-plus'></i> Apply Payment </a></li>";
                            //}
                            action += "</ul></div>";
                            return action;
                        }



                    }]
                , "footerCallback": function (row, data, start, end, display) {
                    var api = this.api(), data;

                   

                    var _checkAmount = 0;
                    var _applyAmount = 0;
                    var _balanceAmount = 0;

                    $.each(data, function (key, value) {
                        _checkAmount += value.CheckAmount;
                        //_applyAmount += value.PaymentApplyAmount;
                        //_balanceAmount += value.OverflowAmount;


                        
                        _applyAmount += value.InvoiceAmount;
                        if (value.InvoiceBalance < 0)
                            _balanceAmount += value.InvoiceBalance * -1;
                    });

                    $('#totalCheckAmount').html('$' + formatCurrency(_checkAmount));
                    $('#totalApplyAmount').html('$' + formatCurrency(_applyAmount));
                    $('#totalBalance').html('$' + formatCurrency(_balanceAmount));

                    //// Remove the formatting to get integer data for summation
                    //var intVal = function (i) {
                    //    return typeof i === 'string' ?
                    //        i.replace(/[\$,]/g, '') * 1 :
                    //        typeof i === 'number' ?
                    //            i : 0;
                    //};

                    //var totalRevenue = api
                    //    .column(5)
                    //    .data()
                    //    .reduce(function (a, b) {
                    //        return intVal(a) + intVal(b);
                    //    }, 0);

                    ////var totalPayment = api
                    ////    .column(6)
                    ////    .data()
                    ////    .reduce(function (a, b) {
                    ////        return intVal(a) + intVal(b);
                    ////    }, 0);

                    //console.log(totalRevenue);
                    ////$(api.column(4).footer()).html(formatCurrency(totalRevenue));
                    ///$(api.column(5).footer()).html(formatCurrency(totalRevenue));
                    ////$(api.column(6).footer()).html(formatCurrency(totalPayment));
                }
            });
        });

        var date = new Date(), y = date.getFullYear(), m = date.getMonth();
        var firstDay;
        var lastDay;
        Date.prototype.getWeek = function (start) {
            //Calcing the starting point
            start = start || 0;
            var today = new Date(this.setHours(0, 0, 0, 0));
            var day = today.getDay() - start;
            var date = today.getDate() - day;

            // Grabbing Start/End Dates
            var StartDate = new Date(today.setDate(date));
            var EndDate = new Date(today.setDate(date + 6));
            return [StartDate, EndDate];
        };

        function setPaging() {
            var z = $("#pageSize").val();
            var table = $("#OverPaymentList").DataTable();
            if (z > 0) {
                table.page.len(z).draw();
            }
            else if (z == -1) {
                table.page.len(table.rows().count()).draw();
            }
            else {
                table.page.page.len(25).draw();
            }
        }

        function refreshTable() {
            totalInvAmount = 0.0;
            totalCrdAmount = 0.0;
            $('#totalInvAmount').text(totalInvAmount);
            $('#totalCrdAmount').text(totalCrdAmount);
            var url = getTableURL();
            $.blockUI();
            OverPmtList.ajax.url(url).load(function () { $.unblockUI(); });
            $.unblockUI();
        }

        $('#txtStartDate').change(function () {
            $('#spnStartDate').html($(this).val());
            if ($('#txtStartDate').val() != '' && $('#txtEndtDate').val() != '')
                refreshTable();
        });

        $('#txtEndtDate').change(function () {
            $('#spnEndtDate').html($(this).val());
            if ($('#txtStartDate').val() != '' && $('#txtEndtDate').val() != '')
                refreshTable();
        });

        $('#monthlist').change(function () {
            $('#spnStartDate').html('');
            if ($('#monthlist').val() != '' && $('#yearlist').val() != '')
                refreshTable();
        });

        $('#yearlist').change(function () {
            $('#spnEndtDate').html('');
            if ($('#monthlist').val() != '' && $('#yearlist').val() != '')
                refreshTable();
        });

        $('#select_timeduration').change(function () {
            //alert($(this).val());
            $('#spnStartDate').html('');
            $('#spnEndtDate').html('');
            $('#divspandate').show();
            $('#divSD').hide();
            $('#divED').hide();
            $('#divmonth').hide();
            $('#divyear').hide();
            $('#monthlist').val('');
            $('#yearlist').val('');
            switch (parseInt($(this).val())) {
                case 1:
                    firstDay = moment().startOf('isoWeek').toString();
                    lastDay = moment().endOf('isoWeek').toString();
                    break;
                case 2:
                    //code block
                    firstDay = moment().startOf('isoWeek').toString();
                    lastDay = new Date().toString();
                    break;
                case 3:
                    firstDay = moment().subtract(0, 'month').startOf('month').toString();
                    lastDay = moment().subtract(0, 'month').endOf('month').toString();
                    break;
                case 4:
                    //code block
                    firstDay = moment().subtract(0, 'month').startOf('month').toString();
                    lastDay = new Date().toString();
                    break;
                case 5:
                    //code block
                    firstDay = moment().startOf('quarter').toString();
                    lastDay = moment().endOf('quarter').toString();
                    break;
                case 6:
                    //code block
                    firstDay = moment().startOf('quarter').toString();
                    lastDay = new Date().toString();
                    break;
                case 7:
                    //code block
                    firstDay = moment().startOf('year').toString();;
                    lastDay = moment().endOf('year').toString();
                    break;
                case 8:
                    //code block
                    firstDay = moment().startOf('year').toString();
                    lastDay = new Date().toString();
                    break;
                case 9:
                    //code block
                    firstDay = moment().toString();
                    lastDay = moment().toString();
                    break;
                case 10:
                    //code block
                    firstDay = moment().add(-1, 'days').toString();
                    lastDay = moment().add(-1, 'days').toString();
                    break;
                case 11:
                    //code block
                    firstDay = moment().subtract(1, 'week').startOf('week').toString();
                    lastDay = moment().subtract(1, 'week').endOf('week').toString();
                    break;
                case 12:
                    //code block
                    firstDay = moment().subtract(1, 'month').startOf('month').toString();
                    lastDay = moment().subtract(1, 'month').endOf('month').toString();
                    break;
                case 13:
                    //code block
                    firstDay = moment().subtract(1, 'quarter').startOf('quarter').toString();
                    lastDay = moment().subtract(1, 'quarter').endOf('quarter').toString();
                    break;
                case 14:
                    //code block
                    firstDay = moment().subtract(1, 'year').startOf('year').toString();
                    lastDay = moment().subtract(1, 'year').endOf('year').toString();
                    break;
                case 15:
                    //code block
                    $('#divspandate').hide();
                    $('#divSD').show();
                    $('#divED').show();
                    $('#txtStartDate').val('');
                    $('#txtEndtDate').val('')
                    break;
                case 16:
                    //code block
                    $('#divspandate').hide();
                    $('#divSD').hide();
                    $('#divED').hide();
                    $('#divmonth').show();
                    $('#divyear').show();
                    break;
                default:
                    //code block
            }
            $('#spnStartDate').html(moment(firstDay).format('L'));
            $('#spnEndtDate').html(moment(lastDay).format('L'));

            refreshTable();
        });

        function btnOpenCusCreditDetail(id) {
         
            $.blockUI();
            var sURL = '@Url.Action("CustomerCreditDetailPopup", "AccountReceivable", new { area = "Portal" })?Id=' + id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#form_CusCreditDetails').html(data);
                    $("#modal_CusCreditDetail").modal({ backdrop: 'static' });
                    $('.modal-dialog').draggable();
                    $.unblockUI();
                },
                error: function () {
                    alert("Content load failed.");
                }
            });
        };


         /*Manual Payment */
         function showManualPayment(id) {

            var currenturl = '@Url.Action("ManualPaymentPopup", "Customer",new { area="Portal" })?id=' + id;
            $.ajax({
                type: "GET",
                url: currenturl,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#divmodal_ManualPayment').html(data);
                    manualPaymentInIt();
                    $('#modal_ManualPayment').modal('show');
                },
                error: function () {
                    alert("Content load failed.");
                }
            });
        }

        function showInvoiceDetail(id) {
            $.blockUI();
            var sURL = '@Url.Action("InvoiceDetail", "AccountReceivable", new { area = "Portal" })?Id=' + id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#form_invoicedetailPopup').html(data);
                    $("#modal_invoicedetail").modal({ backdrop: 'static' });
                    $('.modal-dialog').draggable();
                    $.unblockUI();
                },
                error: function () {
                    $.unblockUI();
                    alert("Content load failed.");
                }
            });
        }

        function showEditCustomerInfo(Id) {

            var sURL = '@Url.Action("PendingApprovalListEditCustomerPopup", "Customer", new { area = "Portal" })?id=' + Id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#form_Billingsetting').html(data);
                    $("#ModalEditCustomerInfo").modal({ backdrop: 'static' });
                    $(".input-group-btn").click(function () {
                        $(this).prev().trigger("focus");
                        $(this).prev().trigger("focus");
                    });
                    $(".date-picker").datepicker();
                    $(".edit").attr("disabled", "disabled");
                    $(".edit").attr("readonly", "readonly");

                    $("#btnSave").prop("disabled", "false");
                    $("#btnSave").prop("readonly", "true");
                    $("#btnCancel").prop("disabled", "false");
                    $("#btnCancel").prop("readonly", "true");
                    $("#btnSave").hide();
                    $("#btnCancel").hide();

                    $(".editmain1").attr("disabled", "disabled");
                    $(".editmain1").attr("readonly", "readonly");
                    $(".editmain").attr("disabled", "disabled");
                    $(".editmain").attr("readonly", "readonly");

                    $(".editbill1").attr("disabled", "disabled");
                    $(".editbill1").attr("readonly", "readonly");
                    $(".editbill").attr("disabled", "disabled");
                    $(".editbill").attr("readonly", "readonly");

                    $(".EditBtn").show();
                    $(".SaveBtn").hide();
                    $(".CancelBtn").hide();

                },
                error: function () {
                    alert("Content load failed.");
                }
            });

        }
//Customer Credit
    function btnOpenApplyCreditForm(id) {

        var sURL = '@Url.Action("ApplyCreditForm", "AccountReceivable", new { area = "Portal" })?Id=' + id;
        $.ajax({
            type: "GET",
            url: sURL,
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (data) {
                $('#div_applycreditform').html(data);
                $(".date-picker").datepicker();
                $(".input-group-btn").click(function () {
                    $(this).prev().trigger("focus");
                    $(this).prev().trigger("focus");
                });
                $("#modal_applycreditform").modal({ backdrop: 'static' });
                //initCreditForm();
                $('.creditfieldcurrency').each(function () {
                    applyMaskCurrency('#' + this.id);
                });
            },
            error: function () {
                alert("Content load failed.");
            }
        });

        /*if (id == 2) {
            $("#modal_applycreditformconsolidated").modal({ backdrop: 'static' });
        }
        else {
            $("#modal_applycreditform").modal({ backdrop: 'static' });
        }*/
    };


        function applyMaskCurrency(id) {
            $(id).inputmask("currency", {
                alias: 'currency',
                prefix: '$ ',
                digits: 2,
                autoUnmask: true,
                removeMaskOnSubmit: true,
                unmaskAsNumber: true,
                allowPlus: false,
                allowMinus: true,
                autoGroup: true,
                positionCaretOnTab: false,
                positionCaretOnClick: "select",
                groupSeparator: ",",
            });
        }

        function btnInvoicePopupClose() {
            $("#modal_invoicedetail").modal('hide');
        }

        function formatJSONDateUtc(jsonDate) {
            if (jsonDate != null) {
                var dtstr = jsonDate.substr(6);
                var dateString = dtstr.substring(0, dtstr.length - 2);
                var currentTime = new Date(parseInt(dateString)).toUTCString();
                var date = moment.utc(currentTime).format("MM/DD/YYYY");
                return date;
            }
            return null;
        }

        function formatCurrency(total, dollar) {
            dollar = (dollar == true ? true : false);
            var neg = false;
            if (total < 0) {
                neg = true;
                total = Math.abs(total);
            }
            return (neg ? "-" : '') + (dollar ? "$" : "") + parseFloat(total, 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString();
        }

        function btnOpenPaymentDetail(strNo) {

            $.blockUI();

            var sURL = '@Url.Action("PaymentDetailPopup", "AccountReceivable", new { area = "Portal" })?paymentId=' + strNo;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#form_paymentlist').html(data);
                    $("#modal_paymentdetail").modal({ backdrop: 'static' });
                    $('.modal-dialog').draggable();

                    $.unblockUI();
                },
                error: function () {
                    $.unblockUI();
                    alert("Content load failed.");
                }
            });
        }

        function btnOpenInvoiceDetail(id) {

            var sURL = '@Url.Action("InvoiceDetail", "AccountReceivable", new { area = "Portal" })?Id=' + id;
            $.ajax({
                type: "GET",
                url: sURL,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#form_invoicedetail').html(data);
                    $("#modal_invoicedetail").modal({ backdrop: 'static' });
                },
                error: function () {
                    alert("Content load failed.");
                }
            });

            //if (id == 2) {
            //    $("#modal_invoicedetailconsolidated").modal({ backdrop: 'static' });
            //}
            //else {
            //    $("#modal_invoicedetail").modal({ backdrop: 'static' });
            //}
        };



        /*Manual Payment */
        function showApplyOverflowPayment(cid,id,oid,oamt) {

            var currenturl = '@Url.Action("ApplyOverflowPaymentDetailPP", "AccountReceivable", new { area="Portal" })?id=' + id + '&oid=' + oid + '&OAmount=' + oamt;
            $.ajax({
                type: "GET",
                url: currenturl,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#divmodal_ManualPayment').html(data);
                    manualPaymentInIt(cid);
                    $('#modal_ManualPayment').modal('show');
                    $(".date-picker").datepicker();
                },
                error: function () {
                    alert("Content load failed.");
                }
            });
        }
        var ManualPaymentList;


        function showApplyOverflowIssueRefund(cid,id,oid,oamt) {

            

            var sList = "";
            $('input[relopchk=chkOPInv]').each(function () {
                if ($(this).is(':checked')) {
                    console.log($(this).attr('id'))
                    var sThisVal = $(this).attr('id').toString().split(',')[1];
                    sList += (sList == "" ? sThisVal : "," + sThisVal);
                }


                
            });
            console.log(sList);

           
            @*var currenturl = '@Url.Action("ApplyOverflowPaymentDetailPP", "AccountReceivable", new { area="Portal" })?id=' + id + '&oid=' + oid + '&OAmount=' + oamt;
            $.ajax({
                type: "GET",
                url: currenturl,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    $('#divmodal_ManualPayment').html(data);
                    manualPaymentInIt(cid);
                    $('#modal_ManualPayment').modal('show');
                    $(".date-picker").datepicker();
                },
                error: function () {
                    alert("Content load failed.");
                }
            });*@
        }


    </script>
}



