@model JKViewModels.Customer.FullCustomerViewModel
@{
    ViewBag.Title = "Add";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section styles{}
<div class="col-md-12 page-custom-header"><h5>Customer Maintenance</h5></div>
@Html.HiddenFor(one => one.CustomerViewModel.CustomerId)
@Html.HiddenFor(one => one.CustomerViewModel.IsDelete)
@Html.HiddenFor(one => one.CustomerViewModel.IsActive)
@Html.HiddenFor(one => one.CustomerViewModel.ModifiedBy)
@Html.HiddenFor(one => one.CustomerViewModel.CreatedBy)
@Html.HiddenFor(one => one.CustomerViewModel.DateCreate)
@Html.HiddenFor(one => one.CustomerViewModel.DateModified)
@Html.HiddenFor(one => one.MainContact.ContactId)
@Html.HiddenFor(one => one.MainContact.IsDelete)
@Html.HiddenFor(one => one.MainContact.IsActive)
@Html.HiddenFor(one => one.MainContact.ModifiedBy)
@Html.HiddenFor(one => one.MainContact.CreatedBy)
@Html.HiddenFor(one => one.MainContact.DateCreated)
@Html.HiddenFor(one => one.MainContact.DateModified)
@Html.HiddenFor(one => one.MainAddress.AddressId)
@Html.HiddenFor(one => one.MainAddress.IsDelete)
@Html.HiddenFor(one => one.MainAddress.IsActive)
@Html.HiddenFor(one => one.MainAddress.ModifiedBy)
@Html.HiddenFor(one => one.MainAddress.CreatedBy)
@Html.HiddenFor(one => one.MainAddress.DateCreate)
@Html.HiddenFor(one => one.MainAddress.DateModified)
@Html.HiddenFor(one => one.MainEmail.EmailId)
@Html.HiddenFor(one => one.MainEmail.IsDelete)
@Html.HiddenFor(one => one.MainEmail.IsActive)
@Html.HiddenFor(one => one.MainEmail.ModifiedBy)
@Html.HiddenFor(one => one.MainEmail.CreatedBy)
@Html.HiddenFor(one => one.MainEmail.DateCreated)
@Html.HiddenFor(one => one.MainEmail.DateModified)
@Html.HiddenFor(one => one.MainPhone.PhoneId)
@Html.HiddenFor(one => one.MainPhone.IsDelete)
@Html.HiddenFor(one => one.MainPhone.IsActive)
@Html.HiddenFor(one => one.MainPhone.ModifiedBy)
@Html.HiddenFor(one => one.MainPhone.CreatedBy)
@Html.HiddenFor(one => one.MainPhone.DateCreate)
@Html.HiddenFor(one => one.MainPhone.DateModified)

@Html.HiddenFor(one => one.BillingContact.ContactId)
@Html.HiddenFor(one => one.BillingContact.IsDelete)
@Html.HiddenFor(one => one.BillingContact.IsActive)
@Html.HiddenFor(one => one.BillingContact.ModifiedBy)
@Html.HiddenFor(one => one.BillingContact.CreatedBy)
@Html.HiddenFor(one => one.BillingContact.DateCreated)
@Html.HiddenFor(one => one.BillingContact.DateModified)
@Html.HiddenFor(one => one.BillingAddress.AddressId)
@Html.HiddenFor(one => one.BillingAddress.IsDelete)
@Html.HiddenFor(one => one.BillingAddress.IsActive)
@Html.HiddenFor(one => one.BillingAddress.ModifiedBy)
@Html.HiddenFor(one => one.BillingAddress.CreatedBy)
@Html.HiddenFor(one => one.BillingAddress.DateCreate)
@Html.HiddenFor(one => one.BillingAddress.DateModified)

@Html.HiddenFor(one => one.ContactInformation.ContactId)
@Html.HiddenFor(one => one.ContactInformation.IsDelete)
@Html.HiddenFor(one => one.ContactInformation.IsActive)
@Html.HiddenFor(one => one.ContactInformation.ModifiedBy)
@Html.HiddenFor(one => one.ContactInformation.CreatedBy)
@Html.HiddenFor(one => one.ContactInformation.DateCreated)
@Html.HiddenFor(one => one.ContactInformation.DateModified)

@Html.HiddenFor(one => one.ContactInformationAddress.AddressId)
@Html.HiddenFor(one => one.ContactInformationAddress.IsDelete)
@Html.HiddenFor(one => one.ContactInformationAddress.IsActive)
@Html.HiddenFor(one => one.ContactInformationAddress.ModifiedBy)
@Html.HiddenFor(one => one.ContactInformationAddress.CreatedBy)
@Html.HiddenFor(one => one.ContactInformationAddress.DateCreate)
@Html.HiddenFor(one => one.ContactInformationAddress.DateModified)

@Html.HiddenFor(one => one.ContactInformationEmail.EmailId)
@Html.HiddenFor(one => one.ContactInformationEmail.IsDelete)
@Html.HiddenFor(one => one.ContactInformationEmail.IsActive)
@Html.HiddenFor(one => one.ContactInformationEmail.ModifiedBy)
@Html.HiddenFor(one => one.ContactInformationEmail.CreatedBy)
@Html.HiddenFor(one => one.ContactInformationEmail.DateCreated)
@Html.HiddenFor(one => one.ContactInformationAddress.DateModified)
@Html.HiddenFor(one => one.ContactInformationPhone.PhoneId)
@Html.HiddenFor(one => one.ContactInformationPhone.IsDelete)
@Html.HiddenFor(one => one.ContactInformationPhone.IsActive)
@Html.HiddenFor(one => one.ContactInformationPhone.ModifiedBy)
@Html.HiddenFor(one => one.ContactInformationPhone.CreatedBy)
@Html.HiddenFor(one => one.ContactInformationPhone.DateCreate)
@Html.HiddenFor(one => one.ContactInformationPhone.DateModified)
@Html.HiddenFor(one => one.BillingInformation.ContactId)
@Html.HiddenFor(one => one.BillingInformation.IsDelete)
@Html.HiddenFor(one => one.BillingInformation.IsActive)
@Html.HiddenFor(one => one.BillingInformation.ModifiedBy)
@Html.HiddenFor(one => one.BillingInformation.CreatedBy)
@Html.HiddenFor(one => one.BillingInformation.DateCreated)
@Html.HiddenFor(one => one.BillingInformation.DateModified)
@Html.HiddenFor(one => one.BillingInformationAddress.AddressId)
@Html.HiddenFor(one => one.BillingInformationAddress.IsDelete)
@Html.HiddenFor(one => one.BillingInformationAddress.IsActive)
@Html.HiddenFor(one => one.BillingInformationAddress.ModifiedBy)
@Html.HiddenFor(one => one.BillingInformationAddress.CreatedBy)
@Html.HiddenFor(one => one.BillingInformationAddress.DateCreate)
@Html.HiddenFor(one => one.BillingInformationAddress.DateModified)
@Html.HiddenFor(one => one.BillingInformationEmail.EmailId)
@Html.HiddenFor(one => one.BillingInformationEmail.IsDelete)
@Html.HiddenFor(one => one.BillingInformationEmail.IsActive)
@Html.HiddenFor(one => one.BillingInformationEmail.ModifiedBy)
@Html.HiddenFor(one => one.BillingInformationEmail.CreatedBy)
@Html.HiddenFor(one => one.BillingInformationEmail.DateCreated)
@Html.HiddenFor(one => one.BillingInformationEmail.DateModified)
@Html.HiddenFor(one => one.BillingInformationPhone.PhoneId)
@Html.HiddenFor(one => one.BillingInformationPhone.IsDelete)
@Html.HiddenFor(one => one.BillingInformationPhone.IsActive)
@Html.HiddenFor(one => one.BillingInformationPhone.ModifiedBy)
@Html.HiddenFor(one => one.BillingInformationPhone.CreatedBy)
@Html.HiddenFor(one => one.BillingInformationPhone.DateCreate)
@Html.HiddenFor(one => one.BillingInformationPhone.DateModified)
@section styles{
    <style type="text/css">
        .modal-dialog {
            width: 750px;
        }
    </style>

}
<div class="col-md-12 page-custom-header"><h5>Franchise Maintenance</h5></div>

<div class="custom-form portlet light" id="form_wizard_1">
    <div class="portlet-body form">
        <form class="form-horizontal" action="#" id="submit_form" method="POST">
            <div class="form-wizard">
                <div class="form-body-outer" style="padding: 0px;">
                    <ul class="nav nav-pills nav-justified steps" style="display:none;">
                        <li>
                            <a href="#tb_fr_page1" data-toggle="tab" class="step">Customer Maintenance</a>
                        </li>
                        <li>
                            <a href="#tb_fr_page2" data-toggle="tab" class="step">Customer Bill Setting</a>
                        </li>
                        <li>
                            <a href="#tb_fr_page3" data-toggle="tab" class="step">Customer Contract</a>
                        </li>
                        <li>
                            <a href="#tb_fr_page4" data-toggle="tab" class="step">Customer Contract Detail</a>
                        </li>
                    </ul>
                    <div class="tab-content">
                        <div class="tab-pane active" id="tb_fr_page1">
                            <h4 class="blocktop">Customer Maintenance</h4>
                            <div style="width: 50%;margin:0px; padding: 0em; float:left;">
                                <h4 class="subblock">Main Address</h4>

                                <div class="form-group" style="padding-top:0px;">
                                    <label class="control-label col-md-3">
                                        Name
                                        <span class="required"> * </span>
                                    </label>
                                    <div class="col-md-9">
                                        @Html.TextBoxFor(one => one.MainContact.FirstName, new { @class = "form-control input-sm", required = "required"})
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-3">
                                        Address
                                        <span class="required"> * </span>
                                    </label>
                                    <div class="col-md-9">
                                        @Html.TextBoxFor(one => one.MainAddress.Address1, new { @class = "form-control input-sm", required = "required", placeholder = "Required" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-3">
                                        City
                                        <span class="required"> * </span>
                                    </label>
                                    <div class="col-md-6">
                                        @Html.TextBoxFor(one => one.MainAddress.City, new { @class = "form-control input-sm", required = "required", placeholder = "Required" })
                                    </div>

                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-3">
                                        State
                                        <span class="required"> * </span>
                                    </label>
                                    <div class="col-md-4">
                                        @Html.DropDownList("MainStatesList", null, "Select", new { @class = "form-control input-sm", required = "required", @id = "MainStatesList" })
                                    </div>
                                    <label class="control-label col-md-2">
                                        Zip
                                        <span class="required"> * </span>
                                    </label>
                                    <div class="col-md-3">
                                        @Html.TextBoxFor(one => one.MainAddress.PostalCode, new { @class = "form-control input-sm", required = "required", placeholder = "Required" })
                                    </div>
                                </div>


                                <div class="form-group">
                                    <label class="control-label col-md-3">
                                        Phone
                                        <span class="required"> * </span>
                                    </label>
                                    <div class="col-md-6">
                                        @Html.TextBoxFor(one => one.MainPhone.Phone1, new { @class = "form-control input-sm", required = "required", placeholder = "Required" })
                                    </div>
                                </div>


                                <div class="form-group">
                                    <label class="control-label col-md-3">
                                        Fax
                                        <span class="required"> * </span>
                                    </label>
                                    <div class="col-md-6">
                                        @Html.TextBoxFor(one => one.MainPhone.Fax, new { @class = "form-control input-sm", required = "required", placeholder = "Required" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-md-3">
                                        Email
                                    </label>
                                    <div class="col-md-9">
                                        @Html.TextBoxFor(one => one.MainEmail.EmailAddress, new { @class = "form-control input-sm", required = "required", placeholder = "Required" })
                                    </div>
                                </div>
                                <h4 class="subblock">Billing Address</h4>

                                <div class="form-group">
                                    <label class="control-label col-md-2">
                                    </label>
                                    <div class="col-md-6">
                                        <label class="mt-checkbox">
                                            <input type="checkbox" name="chkbillingsameas" id="chkbillingsameas">Same as Main Address
                                            <span></span>
                                        </label>
                                    </div>
                                </div>
                                <div class="form-group" style="padding-top:10px;">
                                    <label class="control-label col-md-3">
                                        Name
                                        <span class="required"> * </span>
                                    </label>
                                    <div class="col-md-9">
                                        @Html.TextBoxFor(one => one.BillingContact.DisplayName, new { @class = "form-control input-sm", required = "required", placeholder = "Required" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-3">
                                        Attention
                                    </label>
                                    <div class="col-md-9">
                                        @Html.TextBoxFor(one => one.BillingContact.Attention, new { @class = "form-control input-sm", placeholder = "" })
                                    </div>
                                </div>
                                <div class="form-group">

                                    <label class="control-label col-md-3">
                                        Address<span class="required"> * </span>
                                    </label>
                                    <div class="col-md-9">
                                        @Html.TextBoxFor(one => one.BillingAddress.Address1, new { @class = "form-control input-sm", required = "required", placeholder = "Required" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-3">
                                        City
                                        <span class="required"> * </span>
                                    </label>
                                    <div class="col-md-5">
                                        @Html.TextBoxFor(one => one.BillingAddress.City, new { @class = "form-control input-sm", required = "required", placeholder = "Required" })
                                    </div>
                                </div>

                                <div class="form-group">

                                    <label class="control-label col-md-3">
                                        State
                                        <span class="required"> * </span>
                                    </label>
                                    <div class="col-md-4">
                                        @Html.DropDownList("BillingStatesList", null, "Select", new { @class = "form-control input-sm", required = "required", @id = "BillingStatesList"})
                                    </div>
                                    <label class="control-label col-md-2">
                                        Zip
                                        <span class="required"> * </span>
                                    </label>
                                    <div class="col-md-3">
                                        @Html.TextBoxFor(one => one.BillingAddress.PostalCode, new { @class = "form-control input-sm", required = "required", placeholder = "Required" })
                                    </div>
                                </div>
                            </div>
                            <div style="width: 50%;margin:0px; padding: 0em; background: white;float:right; border-left:solid #95A5A6 1px; ">
                                <h4 class="subblock">Contact Information</h4>

                                <div class="form-group" style="padding-top:0px; text-wrap:none">
                                    <label class="control-label col-md-3">
                                        FirstName<span class="required"> * </span>
                                    </label>
                                    <div class="col-md-9">
                                        @Html.TextBoxFor(one => one.ContactInformation.FirstName, new { @class = "form-control input-sm", required = "required", placeholder = "Required" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-3">
                                        LastName
                                        <span class="required"> * </span>
                                    </label>
                                    <div class="col-md-9">
                                        @Html.TextBoxFor(one => one.ContactInformation.LastName, new { @class = "form-control input-sm", required = "required", placeholder = "Required" })
                                    </div>
                                </div>


                                <div class="form-group">
                                    <label class="control-label col-md-3">
                                        Title
                                    </label>
                                    <div class="col-md-5">
                                        @Html.TextBoxFor(one => one.ContactInformation.Title, new { @class = "form-control input-sm", placeholder = "" })
                                    </div>
                                </div>


                                <div class="form-group">
                                    <label class="control-label col-md-3">
                                        Phone <span class="required"> * </span>
                                    </label>
                                    <div class="col-md-5">
                                        @Html.TextBoxFor(one => one.ContactInformationPhone.Phone1, new { @class = "form-control input-sm", required = "required", placeholder = "Required" })
                                    </div>
                                    <label class="control-label col-md-1">
                                        Ext
                                    </label>
                                    <div class="col-md-3">
                                        @Html.TextBoxFor(one => one.ContactInformationPhone.PhoneExt, new { @class = "form-control input-sm", placeholder = "" })
                                    </div>
                                </div>


                                <div class="form-group">
                                    <label class="control-label col-md-3">
                                        Cell
                                    </label>
                                    <div class="col-md-5">
                                        @Html.TextBoxFor(one => one.ContactInformationPhone.Cell, new { @class = "form-control input-sm", required = "required", placeholder = "Required" })
                                    </div>
                                </div>


                                <div class="form-group">
                                    <label class="control-label col-md-3">
                                        Fax
                                    </label>
                                    <div class="col-md-5">
                                        @Html.TextBoxFor(one => one.ContactInformationPhone.Fax, new { @class = "form-control input-sm", required = "required", placeholder = "Required" })
                                    </div>
                                </div>


                                <div class="form-group">
                                    <label class="control-label col-md-3">
                                        Email
                                    </label>
                                    <div class="col-md-9">
                                        @Html.TextBoxFor(one => one.ContactInformationEmail.EmailAddress, new { @class = "form-control input-sm", required = "required", placeholder = "Required" })
                                    </div>
                                </div>
                                <h4 class="subblock">Billing Contact Information</h4>

                                <div class="form-group">
                                    <label class="control-label col-md-2">
                                    </label>
                                    <div class="col-md-8">
                                        <label class="mt-checkbox">
                                            <input type="checkbox" name="chkbillingcontactsameas" id="chkbillingcontactsameas">Same as Contact Information
                                            <span></span>
                                        </label>
                                    </div>
                                </div>
                                <div class="form-group" style="padding-top:0px;">
                                    <label class="control-label col-md-3">
                                        FirstName
                                        <span class="required"> * </span>
                                    </label>
                                    <div class="col-md-9">
                                        @Html.TextBoxFor(one => one.BillingContact.FirstName, new { @class = "form-control input-sm", required = "required", placeholder = "Required" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-3">
                                        LastName
                                        <span class="required"> * </span>
                                    </label>
                                    <div class="col-md-9">
                                        @Html.TextBoxFor(one => one.BillingContact.LastName, new { @class = "form-control input-sm", required = "required", placeholder = "Required" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-3">
                                        Title
                                    </label>
                                    <div class="col-md-5">
                                        @Html.TextBoxFor(one => one.BillingContact.Title, new { @class = "form-control input-sm", placeholder = "" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-md-3">
                                        Phone <span class="required"> * </span>
                                    </label>
                                    <div class="col-md-5">
                                        @Html.TextBoxFor(one => one.BillingInformationPhone.Phone1, new { @class = "form-control input-sm", required = "required", placeholder = "Required" })
                                    </div>
                                    <label class="control-label col-md-1">
                                        Ext
                                    </label>
                                    <div class="col-md-3">
                                        @Html.TextBoxFor(one => one.BillingInformationPhone.PhoneExt, new { @class = "form-control input-sm", required = "", placeholder = "" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-3">
                                        Cell
                                    </label>
                                    <div class="col-md-5">
                                        @Html.TextBoxFor(one => one.BillingInformationPhone.Cell, new { @class = "form-control input-sm", required = "", placeholder = "" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-3">
                                        Fax
                                    </label>
                                    <div class="col-md-5">
                                        @Html.TextBoxFor(one => one.BillingInformationPhone.Fax, new { @class = "form-control input-sm", required = "", placeholder = "" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-3">
                                        Email
                                    </label>
                                    <div class="col-md-9">
                                        @Html.TextBoxFor(one => one.BillingInformationEmail.EmailAddress, new { @class = "form-control input-sm", placeholder = "" })
                                    </div>
                                </div>
                            </div>
                            <div style="overflow:auto;width: 100%; margin: 0em auto;padding-left:300px;padding-top:20px;">
                                <div class="form-group">
                                    <div class="col-md-3">
                                        <label class="mt-checkbox">
                                            <input type="checkbox" name="chkbillingcontactsameas" id="chkReference">Reference
                                            <span></span>
                                        </label>
                                    </div>
                                    <div class="col-md-3">
                                        <label class="mt-checkbox">
                                            <input type="checkbox" name="chkbillingcontactsameas" id="chkNationalAccount">National Account
                                            <span></span>
                                        </label>
                                    </div>
                                    <div class="col-md-3">
                                        <label class="mt-checkbox">
                                            <input type="checkbox" name="chkbillingcontactsameas" id="chkParentAccount">Parent Account
                                            <span></span>
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="tab-pane" id="tb_fr_page2">
                            <h4 class="blocktop">Customer Bill Settings</h4>
                            <div class="form-group">
                                <label class="control-label col-md-2">
                                    Customer No.
                                </label>
                                <div class="col-md-2">
                                    <label class="control-label col-md-4">
                                        106052
                                    </label>
                                    @*@Html.LabelFor(o => o.BillingSettings.CustomerId, new { @class = "form-control input-sm" })*@
                                </div>
                                <div class="col-md-1 col-md-offset-2">
                                    <label style="margin-bottom: 8px;margin:8px">
                                        Address
                                    </label>
                                </div>
                                <div class="col-md-4">
                                    <label class="control-label col-md-11">
                                        698 1/2 south odgen street buffalo, NY 14206
                                    </label>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-2">
                                    Customer Name
                                </label>
                                <div class="col-md-4">
                                    <label class="control-label col-md-9">
                                        Capital Management
                                    </label>
                                </div>

                            </div>
                            <h4 class="block">Billing Setting Section</h4>
                            <div class="form-group" style="margin:0px 30px;">
                                <div class="col-md-3">

                                    <label class="mt-checkbox" style="margin-bottom: 8px;">
                                        <input type="checkbox" name="BillSettings_Chargeback" id="BillSettings_Chargeback">Chargeback
                                        <span></span>
                                    </label>
                                </div>
                                <div class="col-md-3">
                                    <label class="mt-checkbox" style="margin-bottom: 8px;">
                                        <input type="checkbox" name="BillSettings_BBPAdministrationFee" id="BillSettings_BBPAdministrationFee"> BBP Administration Fee
                                        <span></span>
                                    </label>
                                </div>
                                <div class="col-md-3">
                                    <label class="mt-checkbox" style="margin-bottom: 8px;">
                                        <input type="checkbox" name="BillSettings_AccountRebate" id="BillSettings_AccountRebate"> Account Rebate
                                        <span></span>
                                    </label>
                                </div>
                                <div class="col-md-3">
                                    <label class="mt-checkbox" style="margin-bottom: 8px;">
                                        <input type="checkbox" name="BillSettings_GenerateReport" id="BillSettings_GenerateReport"> Generate Report
                                        <span></span>
                                    </label>
                                </div>
                            </div>
                        </div>
                        
                    </div>
                </div>
                <div class="form-actions">
                    <div class="col-md-12" style="padding-right: 28px;">
                        <a href="javascript:;" class="btn btn-primary button-submit  pull-right" style="margin-left: 10px;">
                            Submit
                            <i class="fa fa-check"></i>
                        </a>
                        &nbsp;&nbsp;&nbsp;&nbsp;
                        <a href="javascript:;" class="btn btn-primary button-next  pull-right" style="margin-left: 10px;">
                            Continue
                            <i class="fa fa-angle-right"></i>
                        </a>&nbsp;&nbsp;&nbsp;&nbsp;
                        <a href="javascript:;" class="btn btn-primary  pull-right" style="margin-left: 10px;">
                            Save
                            <i class="fa fa-check"></i>
                        </a>
                        &nbsp;&nbsp;&nbsp;&nbsp;
                        <a href="javascript:;" class="btn default button-previous  pull-right" style="margin-left: 10px;">
                            <i class="fa fa-angle-left"></i> Back
                        </a>
                    </div>
                </div>
            </div>
        </form>

    </div>
    <form class="form-horizontal" action="#" id="submit_form_Owner" method="POST">
        <div class="modal fade custom-model custom-form-design" id="popup_ownermanage" tabindex="-1" role="basic" aria-hidden="true" style="display: none;">
            <div class="modal-dialog">
                <div class="modal-content">

                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                        <h4 class="modal-title">Owner</h4>
                    </div>
                    <div class="modal-body">

                        <div class="form-group">
                            <label class="control-label col-md-2">
                                SSN
                                <span class="required"> * </span>
                            </label>
                            <div class="col-md-3">
                                <input type="text" name="ownerssn" id="ownerssn" value="" class="form-control input-sm" required="required" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2">
                                First Name
                                <span class="required"> * </span>
                            </label>
                            <div class="col-md-3">

                                @Html.TextBoxFor(o => o.OwnertInfo.FirstName, new { @class = "form-control input-sm", required = "required" })
                            </div>
                            <label class="control-label col-md-1">
                                MI
                            </label>
                            <div class="col-md-1">
                                @Html.TextBoxFor(o => o.OwnertInfo.MI, new { @class = "form-control input-sm" })
                            </div>
                            <label class="control-label col-md-2">
                                Last Name
                                <span class="required"> * </span>
                            </label>
                            <div class="col-md-3">
                                @Html.TextBoxFor(o => o.OwnertInfo.LastName, new { @class = "form-control input-sm", required = "required" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2">
                                Address
                                <span class="required"> * </span>
                            </label>
                            <div class="col-md-10">
                                @Html.TextBoxFor(o => o.OwnerInfoAddress.Address1, new { @class = "form-control input-sm", required = "required" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2">
                                City
                                <span class="required"> * </span>
                            </label>
                            <div class="col-md-3">
                                @Html.TextBoxFor(o => o.OwnerInfoAddress.City, new { @class = "form-control input-sm", required = "required" })
                            </div>
                            <label class="control-label col-md-1">
                                State
                                <span class="required"> * </span>
                            </label>
                            <div class="col-md-3">
                                @Html.DropDownListFor(n => n.OwnerInfoAddress.State, new SelectList(ViewBag.StateList, "Value", "Text", "Select One"), new { @class = "form-control input-sm", required = "required" })
                            </div>
                            <label class="control-label col-md-1">
                                Zip
                                <span class="required"> * </span>
                            </label>
                            <div class="col-md-2">
                                @Html.TextBoxFor(o => o.OwnerInfoAddress.PostalCode, new { @class = "form-control input-sm", required = "required" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2">
                                Phone
                                <span class="required"> * </span>
                            </label>
                            <div class="col-md-3">
                                @Html.TextBoxFor(o => o.OwnerInfoPhone.Phone1, new { @class = "form-control input-sm", required = "required" })
                            </div>
                            <label class="control-label col-md-1">
                                Ext
                            </label>
                            <div class="col-md-1">
                                @Html.TextBoxFor(o => o.OwnerInfoPhone.PhoneExt, new { @class = "form-control input-sm" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2">
                                Fax
                            </label>
                            <div class="col-md-3">
                                @Html.TextBoxFor(o => o.OwnerInfoPhone.Fax, new { @class = "form-control input-sm" })
                            </div>
                            <label class="control-label col-md-1">
                                Cell
                            </label>
                            <div class="col-md-3">
                                @Html.TextBoxFor(o => o.OwnerInfoPhone.Cell, new { @class = "form-control input-sm" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2">
                                Email
                                <span class="required"> * </span>
                            </label>
                            <div class="col-md-10">
                                @Html.TextBoxFor(o => o.OwnerInfoEmail.EmailAddress, new { @class = "form-control input-sm", type = "email", required = "required" })
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Save changes</button>
                    </div>

                </div>
            </div>
            <!-- /.modal-content -->
        </div>
    </form>

    <form class="form-horizontal" action="#" id="submit_form_Fee" method="POST">
        <div class="modal fade custom-model custom-form-design" id="popup_feemanage" tabindex="-1" role="basic" aria-hidden="true" style="display: none;">
            <div class="modal-dialog">
                <div class="modal-content">

                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                        <h4 class="modal-title">Fees</h4>
                    </div>
                    <div class="modal-body">

                        <div class="form-group">
                            <label class="control-label col-md-2">
                                Fee
                                <span class="required"> * </span>
                            </label>
                            <div class="col-md-3">
                                @Html.DropDownListFor(n => n.OwnerInfoAddress.State, new SelectList(ViewBag.StateList, "Value", "Text", "Select One"), new { @class = "form-control input-sm", required = "required" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2">
                                Percentage
                                <span class="required"> * </span>
                            </label>
                            <div class="col-md-3">
                                @Html.TextBoxFor(o => o.OwnertInfo.FirstName, new { @class = "form-control input-sm", required = "required" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-2">
                                Status
                                <span class="required"> * </span>
                            </label>
                            <div class="col-md-2">
                                @Html.DropDownListFor(n => n.OwnerInfoAddress.State, new SelectList(ViewBag.StateList, "Value", "Text", "Select One"), new { @class = "form-control input-sm", required = "required" })
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Save</button>
                        <button type="button" class="btn default">Cancel</button>
                    </div>

                </div>
            </div>
            <!-- /.modal-content -->
        </div>
    </form>

</div>







@section pageplugins{

    <!-- BEGIN PAGE LEVEL PLUGINS -->
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/select2/js/select2.full.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/jquery-validation/js/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/jquery-validation/js/additional-methods.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/bootstrap-wizard/jquery.bootstrap.wizard.min.js")" type="text/javascript"></script>

    <script src="@Url.Content("~/Content/admin/assets/global/plugins/jquery-inputmask/jquery.inputmask.bundle.min.js")" type="text/javascript"></script>
    <!-- END PAGE LEVEL PLUGINS -->
    <!-- BEGIN PAGE LEVEL SCRIPTS -->
    @*<script src="@Url.Content("~/Content/admin/assets/pages/scripts/form-wizard.min.js")" type="text/javascript"></script>*@
    <!-- END PAGE LEVEL SCRIPTS -->
    @*<script src="@Url.Content("~/Content/admin/assets/pages/scripts/form-validation.min.js")" type="text/javascript"></script>*@

}
@section scripts{
    <script>
        var MaintenanceFormWizard = function () {


            return {
                //main function to initiate the module
                init: function () {
                    if (!jQuery().bootstrapWizard) {
                        return;
                    }

                    function format(state) {
                        if (!state.id) return state.text; // optgroup
                        return "<img class='flag' src='../../assets/global/img/flags/" + state.id.toLowerCase() + ".png'/>&nbsp;&nbsp;" + state.text;
                    }

                    //$("#country_list").select2({
                    //    placeholder: "Select",
                    //    allowClear: true,
                    //    formatResult: format,
                    //    width: 'auto',
                    //    formatSelection: format,
                    //    escapeMarkup: function (m) {
                    //        return m;
                    //    }
                    //});

                    var form = $('#submit_form');
                    var error = $('.alert-danger', form);
                    var success = $('.alert-success', form);

                    form.validate({
                        doNotHideMessage: true, //this option enables to show the error/success messages on tab switch.
                        errorElement: 'span', //default input error message container
                        errorClass: 'help-block help-block-error', // default input error message class
                        focusInvalid: false, // do not focus the last invalid input
                        rules: {},
                        messages: { // custom messages for radio buttons and checkboxes
                            'payment[]': {
                                required: "Please select at least one option",
                                minlength: jQuery.validator.format("Please select at least one option")
                            }
                        },

                        errorPlacement: function (error, element) { // render error placement for each input type
                        },

                        invalidHandler: function (event, validator) { //display error alert on form submit
                            success.hide();
                            error.show();
                            App.scrollTo(error, -200);
                        },

                        highlight: function (element) { // hightlight error inputs
                            $(element)
                                .closest('.form-group').removeClass('has-success').addClass('has-error'); // set error class to the control group
                        },

                        unhighlight: function (element) { // revert the change done by hightlight
                            $(element)
                                .closest('.form-group').removeClass('has-error'); // set error class to the control group
                        },

                        success: function (label) {
                            if (label.attr("for") == "gender" || label.attr("for") == "payment[]") { // for checkboxes and radio buttons, no need to show OK icon
                                label
                                    .closest('.form-group').removeClass('has-error').addClass('has-success');
                                label.remove(); // remove error label here
                            } else { // display success icon for other inputs
                                label
                                    .addClass('valid') // mark the current input as valid and display OK icon
                                .closest('.form-group').removeClass('has-error').addClass('has-success'); // set success class to the control group
                            }
                        },

                        submitHandler: function (form) {
                            success.show();
                            error.hide();
                            form[0].submit();
                            //add here some ajax code to submit your form or just call form.submit() if you want to submit the form without ajax
                        }

                    });

                    var displayConfirm = function () {
                        //$('#tab4 .form-control-static', form).each(function () {
                        //    var input = $('[name="' + $(this).attr("data-display") + '"]', form);
                        //    if (input.is(":radio")) {
                        //        input = $('[name="' + $(this).attr("data-display") + '"]:checked', form);
                        //    }
                        //    if (input.is(":text") || input.is("textarea")) {
                        //        $(this).html(input.val());
                        //    } else if (input.is("select")) {
                        //        $(this).html(input.find('option:selected').text());
                        //    } else if (input.is(":radio") && input.is(":checked")) {
                        //        $(this).html(input.attr("data-title"));
                        //    } else if ($(this).attr("data-display") == 'payment[]') {
                        //        var payment = [];
                        //        $('[name="payment[]"]:checked', form).each(function () {
                        //            payment.push($(this).attr('data-title'));
                        //        });
                        //        $(this).html(payment.join("<br>"));
                        //    }
                        //});
                    }

                    var handleTitle = function (tab, navigation, index) {
                        var total = navigation.find('li').length;
                        var current = index + 1;
                        // set wizard title
                        $('.step-title', $('#form_wizard_1')).text('Step ' + (index + 1) + ' of ' + total);
                        // set done steps
                        jQuery('li', $('#form_wizard_1')).removeClass("done");
                        var li_list = navigation.find('li');
                        for (var i = 0; i < index; i++) {
                            jQuery(li_list[i]).addClass("done");
                        }

                        if (current == 1) {
                            $('#form_wizard_1').find('.button-previous').hide();
                        } else {
                            $('#form_wizard_1').find('.button-previous').show();
                        }

                        if (current >= total) {
                            $('#form_wizard_1').find('.button-next').hide();
                            $('#form_wizard_1').find('.button-submit').show();
                            displayConfirm();
                        } else {
                            $('#form_wizard_1').find('.button-next').show();
                            $('#form_wizard_1').find('.button-submit').hide();
                        }
                        App.scrollTo($('.page-title'));
                    }

                    // default form wizard
                    $('#form_wizard_1').bootstrapWizard({
                        'nextSelector': '.button-next',
                        'previousSelector': '.button-previous',
                        onTabClick: function (tab, navigation, index, clickedIndex) {
                            return false;

                            success.hide();
                            error.hide();
                            if (form.valid() == false) {
                                return false;
                            }

                            handleTitle(tab, navigation, clickedIndex);
                        },
                        onNext: function (tab, navigation, index) {
                            success.hide();
                            error.hide();

                            if (form.valid() == false) {
                                return false;
                            }
                            //var modelDataJSON =model;// '@Html.Raw(Json.Encode(Model))';
                            saveFranchiseeData("");
                            handleTitle(tab, navigation, index);
                        },
                        onPrevious: function (tab, navigation, index) {
                            success.hide();
                            error.hide();

                            handleTitle(tab, navigation, index);
                        },
                        onTabShow: function (tab, navigation, index) {

                            //var total = navigation.find('li').length;
                            var current = index + 1;
                            //var $percent = (current / total) * 100;
                            //$('#form_wizard_1').find('.progress-bar').css({
                            //    width: $percent + '%'
                            //});
                        }
                    });

                    $('#form_wizard_1').find('.button-previous').hide();
                    $('#form_wizard_1 .button-submit').click(function () {
                        alert('Finished! Hope you like it :)');
                    }).hide();

                    $('#divachsubsection').hide();
                    $('#chkcopyaddresstocontact').change(function () {
                        var ContactInfo_Name = $('#ContactInfo_Name');
                        var ContactInfoAddress_Address1 = $('#ContactInfoAddress_Address1');
                        var ContactInfoAddress_City = $('#ContactInfoAddress_City');
                        var ContactInfoAddress_State = $('#ContactInfoAddress_State');
                        var ContactInfoAddress_PostalCode = $('#ContactInfoAddress_PostalCode');

                        var ContactInfoPhone_Phone1 = $('#ContactInfoPhone_Phone1');
                        var ContactInfoEmail_EmailAddress = $('#ContactInfoEmail_EmailAddress');




                        if ($(this).prop('checked')) { //3rd radiobutton
                            ContactInfo_Name.val($('#BusinessInfo_Name').val());
                            ContactInfoAddress_Address1.val($('#BusinessInfoAddress_Address1').val());
                            ContactInfoAddress_City.val($('#BusinessInfoAddress_City').val());
                            ContactInfoAddress_State.val($('#BusinessInfoAddress_State').val());
                            ContactInfoAddress_PostalCode.val($('#BusinessInfoAddress_PostalCode').val());
                            ContactInfoPhone_Phone1.val($('#BusinessInfoPhone_Phone1').val());
                            ContactInfoEmail_EmailAddress.val($('#BusinessInfoEmail_EmailAddress').val());

                            ContactInfo_Name.attr("disabled", "disabled");
                            ContactInfoAddress_Address1.attr("disabled", "disabled");
                            ContactInfoAddress_City.attr("disabled", "disabled");
                            ContactInfoAddress_State.attr("disabled", "disabled");
                            ContactInfoAddress_PostalCode.attr("disabled", "disabled");
                            ContactInfoPhone_Phone1.attr("disabled", "disabled");
                            ContactInfoEmail_EmailAddress.attr("disabled", "disabled");
                        }
                        else {
                            ContactInfo_Name.val('');
                            ContactInfoAddress_Address1.val('');
                            ContactInfoAddress_City.val('');
                            ContactInfoAddress_State.val('');
                            ContactInfoAddress_PostalCode.val('');
                            ContactInfoPhone_Phone1.val('');
                            ContactInfoEmail_EmailAddress.val('');

                            ContactInfo_Name.removeAttr("disabled");
                            ContactInfoAddress_Address1.removeAttr("disabled");
                            ContactInfoAddress_City.removeAttr("disabled");
                            ContactInfoAddress_State.removeAttr("disabled");
                            ContactInfoAddress_PostalCode.removeAttr("disabled");
                            ContactInfoPhone_Phone1.removeAttr("disabled");
                            ContactInfoEmail_EmailAddress.removeAttr("disabled");

                        }


                    });
                    $('#chkcopyaddresstopayee').change(function () {
                        var PayeeInfo_PayeeName = $('#PayeeInfo_PayeeName');
                        var PayeeInfoAddress_Address1 = $('#PayeeInfoAddress_Address1');
                        var PayeeInfoAddress_City = $('#PayeeInfoAddress_City');
                        var PayeeInfoAddress_State = $('#PayeeInfoAddress_State');
                        var PayeeInfoAddress_PostalCode = $('#PayeeInfoAddress_PostalCode');


                        if ($(this).prop('checked')) { //3rd radiobutton
                            PayeeInfo_PayeeName.val($('#BusinessInfo_Name').val());
                            PayeeInfoAddress_Address1.val($('#BusinessInfoAddress_Address1').val());
                            PayeeInfoAddress_City.val($('#BusinessInfoAddress_City').val());
                            PayeeInfoAddress_State.val($('#BusinessInfoAddress_State').val());
                            PayeeInfoAddress_PostalCode.val($('#BusinessInfoAddress_PostalCode').val());

                            PayeeInfo_PayeeName.attr("disabled", "disabled");
                            PayeeInfoAddress_Address1.attr("disabled", "disabled");
                            PayeeInfoAddress_City.attr("disabled", "disabled");
                            PayeeInfoAddress_State.attr("disabled", "disabled");
                            PayeeInfoAddress_PostalCode.attr("disabled", "disabled");
                        }
                        else {
                            PayeeInfo_PayeeName.val('');
                            PayeeInfoAddress_Address1.val('');
                            PayeeInfoAddress_City.val('');
                            PayeeInfoAddress_State.val('');
                            PayeeInfoAddress_PostalCode.val('');

                            PayeeInfo_PayeeName.removeAttr("disabled");
                            PayeeInfoAddress_Address1.removeAttr("disabled");
                            PayeeInfoAddress_City.removeAttr("disabled");
                            PayeeInfoAddress_State.removeAttr("disabled");
                            PayeeInfoAddress_PostalCode.removeAttr("disabled");

                        }


                    });
                    $('#chkachsectionenable').change(function () {

                        var ACHBankInfo_Name = $('#ACHBankInfo_Name');
                        var ACHBankInfo_RoutingNumber = $('#ACHBankInfo_RoutingNumber');
                        var ACHBankInfo_AccountNumber = $('#ACHBankInfo_AccountNumber');
                        var ACHBankInfo_Descrption = $('#ACHBankInfo_Descrption');
                        var ACHBankInfo_RemittanceNotes = $('#ACHBankInfo_RemittanceNotes');

                        ACHBankInfo_Name.val('');
                        ACHBankInfo_RoutingNumber.val('');
                        ACHBankInfo_AccountNumber.val('');
                        ACHBankInfo_Descrption.val('');
                        ACHBankInfo_RemittanceNotes.val('');


                        if ($(this).prop('checked')) {
                            ACHBankInfo_Name.removeAttr("disabled");
                            ACHBankInfo_RoutingNumber.removeAttr("disabled");
                            ACHBankInfo_AccountNumber.removeAttr("disabled");
                            ACHBankInfo_Descrption.removeAttr("disabled");
                            ACHBankInfo_RemittanceNotes.removeAttr("disabled");


                            ACHBankInfo_Name.attr("required", "required");
                            ACHBankInfo_RoutingNumber.attr("required", "required");
                            ACHBankInfo_AccountNumber.attr("required", "required");
                            ACHBankInfo_Descrption.attr("required", "required");
                            ACHBankInfo_RemittanceNotes.attr("required", "required");

                            $('#divachsubsection').show();


                        }
                        else {
                            ACHBankInfo_Name.attr("disabled", "disabled");
                            ACHBankInfo_RoutingNumber.attr("disabled", "disabled");
                            ACHBankInfo_AccountNumber.attr("disabled", "disabled");
                            ACHBankInfo_Descrption.attr("disabled", "disabled");
                            ACHBankInfo_RemittanceNotes.attr("disabled", "disabled");

                            ACHBankInfo_Name.removeAttr("required");
                            ACHBankInfo_RoutingNumber.removeAttr("required");
                            ACHBankInfo_AccountNumber.removeAttr("required");
                            ACHBankInfo_Descrption.removeAttr("required");
                            ACHBankInfo_RemittanceNotes.removeAttr("required");
                            $('#divachsubsection').hide();
                        }


                    })

                    function saveFranchiseeData(inputData) {
                        var sURL = '@Url.Action("Maintenance", "Franchise", new { area = "Portal" })'
                        $.ajax({
                            type: "POST",
                            url: sURL,
                            data: $("#form_wizard_1").serialize(),
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (data, status) {
                                alert(data);
                            },
                            error: function () {
                                alert('error');
                            }
                        });
                    }

                    $("#ContractInfo_MonthlyPaymentAmount").inputmask();
                    $("#ContractInfo_IBAmount").inputmask();
                    $("#ContractInfo_DownPaymentAmount").inputmask();
                    $("#ContractInfo_Interest").inputmask();
                    $("#ContractInfo_Amount").inputmask();
                    $("#ContractInfo_TotalPayments").inputmask();
                    $("#ContractInfo_CurrentPayment").inputmask();
                    $("#ContractInfo_TriggerAmount").inputmask();
                    $('#ContactInfoPhone_Phone1').inputmask("mask", {
                        "mask": "(999) 999-9999"
                    });
                    $('#ContactInfoPhone_Cell').inputmask("mask", {
                        "mask": "(999) 999-9999"
                    });
                    $('#BusinessInfoPhone_Phone1').inputmask("mask", {
                        "mask": "(999) 999-9999"
                    });
                    $('#ownerssn').inputmask("mask", {
                        "mask": "aaa-aa-aaaa"
                    });
                    $('#OwnerInfoPhone_Phone1').inputmask("mask", {
                        "mask": "(999) 999-9999"
                    });

                    $('#OwnerInfoPhone_Cell').inputmask("mask", {
                        "mask": "(999) 999-9999"
                    });
                    $('#OwnerInfoPhone_Fax').inputmask("mask", {
                        "mask": "(999) 999-9999"
                    });


                }

            };

        }();
        var MaintenanceFormWizardOwner = function () {


            return {
                //main function to initiate the module
                init: function () {
                    if (!jQuery().bootstrapWizard) {
                        return;
                    }

                    function format(state) {
                        if (!state.id) return state.text; // optgroup
                        return "<img class='flag' src='../../assets/global/img/flags/" + state.id.toLowerCase() + ".png'/>&nbsp;&nbsp;" + state.text;
                    }

                    //$("#country_list").select2({
                    //    placeholder: "Select",
                    //    allowClear: true,
                    //    formatResult: format,
                    //    width: 'auto',
                    //    formatSelection: format,
                    //    escapeMarkup: function (m) {
                    //        return m;
                    //    }
                    //});

                    var form = $('#submit_form_owner');
                    var error = $('.alert-danger', form);
                    var success = $('.alert-success', form);

                    form.validate({
                        doNotHideMessage: true, //this option enables to show the error/success messages on tab switch.
                        errorElement: 'span', //default input error message container
                        errorClass: 'help-block help-block-error', // default input error message class
                        focusInvalid: false, // do not focus the last invalid input
                        rules: {},
                        messages: { // custom messages for radio buttons and checkboxes
                            'payment[]': {
                                required: "Please select at least one option",
                                minlength: jQuery.validator.format("Please select at least one option")
                            }
                        },

                        errorPlacement: function (error, element) { // render error placement for each input type
                        },

                        invalidHandler: function (event, validator) { //display error alert on form submit
                            success.hide();
                            error.show();
                            App.scrollTo(error, -200);
                        },

                        highlight: function (element) { // hightlight error inputs
                            $(element)
                                .closest('.form-group').removeClass('has-success').addClass('has-error'); // set error class to the control group
                        },

                        unhighlight: function (element) { // revert the change done by hightlight
                            $(element)
                                .closest('.form-group').removeClass('has-error'); // set error class to the control group
                        },

                        success: function (label) {
                            if (label.attr("for") == "gender" || label.attr("for") == "payment[]") { // for checkboxes and radio buttons, no need to show OK icon
                                label
                                    .closest('.form-group').removeClass('has-error').addClass('has-success');
                                label.remove(); // remove error label here
                            } else { // display success icon for other inputs
                                label
                                    .addClass('valid') // mark the current input as valid and display OK icon
                                .closest('.form-group').removeClass('has-error').addClass('has-success'); // set success class to the control group
                            }
                        },

                        submitHandler: function (form) {
                            success.show();
                            error.hide();
                            form[0].submit();
                            //add here some ajax code to submit your form or just call form.submit() if you want to submit the form without ajax
                        }

                    });

                    var displayConfirm = function () {
                        //$('#tab4 .form-control-static', form).each(function () {
                        //    var input = $('[name="' + $(this).attr("data-display") + '"]', form);
                        //    if (input.is(":radio")) {
                        //        input = $('[name="' + $(this).attr("data-display") + '"]:checked', form);
                        //    }
                        //    if (input.is(":text") || input.is("textarea")) {
                        //        $(this).html(input.val());
                        //    } else if (input.is("select")) {
                        //        $(this).html(input.find('option:selected').text());
                        //    } else if (input.is(":radio") && input.is(":checked")) {
                        //        $(this).html(input.attr("data-title"));
                        //    } else if ($(this).attr("data-display") == 'payment[]') {
                        //        var payment = [];
                        //        $('[name="payment[]"]:checked', form).each(function () {
                        //            payment.push($(this).attr('data-title'));
                        //        });
                        //        $(this).html(payment.join("<br>"));
                        //    }
                        //});
                    }

                    var handleTitle = function (tab, navigation, index) {
                        var total = navigation.find('li').length;
                        var current = index + 1;
                        // set wizard title
                        $('.step-title', $('#form_wizard_1')).text('Step ' + (index + 1) + ' of ' + total);
                        // set done steps
                        jQuery('li', $('#form_wizard_1')).removeClass("done");
                        var li_list = navigation.find('li');
                        for (var i = 0; i < index; i++) {
                            jQuery(li_list[i]).addClass("done");
                        }

                        if (current == 1) {
                            $('#form_wizard_1').find('.button-previous').hide();
                        } else {
                            $('#form_wizard_1').find('.button-previous').show();
                        }

                        if (current >= total) {
                            $('#form_wizard_1').find('.button-next').hide();
                            $('#form_wizard_1').find('.button-submit').show();
                            displayConfirm();
                        } else {
                            $('#form_wizard_1').find('.button-next').show();
                            $('#form_wizard_1').find('.button-submit').hide();
                        }
                        App.scrollTo($('.page-title'));
                    }


                    //apply validation on select2 dropdown value change, this only needed for chosen dropdown integration.
                    $('#country_list', form).change(function () {
                        form.validate().element($(this)); //revalidate the chosen dropdown value and show error or success message for the input
                    });




                }

            };

        }();
        jQuery(document).ready(function () {
            MaintenanceFormWizard.init();
            MaintenanceFormWizardOwner.init();


            $('.date-picker').datepicker({ autoclose: true, dateFormat: 'mm/dd/yy' });
            $('.date-picker').attr("placeholder", "mm/dd/yyyy");

        });
    </script>
}
