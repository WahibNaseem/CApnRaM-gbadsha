@model JKViewModels.Franchisee.FullFranchiseeViewModel
@{
    ViewBag.Title = "MaintenanceStepThree";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section styles{
    <style type="text/css">
        .smallform {
            width: 780px !important;
            margin-left: 275px;
        }
    </style>

}


<div class="col-md-12 page-custom-header"><h5>Franchise Maintenance</h5></div>

<div class="custom-form portlet light" id="">
    <div class="portlet-body">
        @using (Html.BeginForm("MaintenanceStepThree", "Franchise", FormMethod.Post, new { @id = "form_wizard_1", @role = "form", @class = "form form-horizontal smallform " }))
        {

            @Html.HiddenFor(one => one.ButtonType)
            @Html.HiddenFor(one => one.BusinessInfo.FranchiseeId)
            @Html.HiddenFor(one => one.FullfillmentInfo.FranchiseeFullfillmentId)

            <div class="tab-pane" id="tb_fr_page3">
                <h4 class="blocktop">Fullfillment Section</h4>
                <div class="form-group" style="margin-right:60px !important;">
                    <label class="control-label col-md-3">
                        Background Check
                        <span class="required"> * </span>
                    </label>
                    <div class="col-md-3">
                        <div class="input-group date" data-date-format="mm/dd/yyyy">
                            @Html.TextBoxFor(o => o.FullfillmentInfo.BackgroundCheckDate, new { @class = "form-control input-sm date-picker", required = "required" })
                            <span class="input-group-btn cal-btn">
                                <button class="btn default" type="button" style="margin-top: 3px;">
                                    <i class="fa fa-calendar"></i>
                                </button>
                            </span>
                        </div>
                    </div>
                    <label class="control-label col-md-3">
                        Business Protection
                        <span class="required"> * </span>
                    </label>
                    <div class="col-md-3">
                        <div class="input-group date" data-date-format="mm/dd/yyyy">
                            @Html.TextBoxFor(o => o.FullfillmentInfo.BusinessProtectionDate, new { @class = "form-control input-sm date-picker", required = "required" })
                            <span class="input-group-btn cal-btn">
                                <button class="btn default" type="button" style="margin-top: 3px;">
                                    <i class="fa fa-calendar"></i>
                                </button>
                            </span>
                        </div>
                    </div>
                </div>
                <div class="form-group" style="margin-right:60px !important;">
                    <label class="control-label col-md-3">
                        Business License
                        <span class="required"> * </span>
                    </label>
                    <div class="col-md-3">
                        <div class="input-group date" data-date-format="mm/dd/yyyy">
                            @Html.TextBoxFor(o => o.FullfillmentInfo.BusinessLicensedate, new { @class = "form-control input-sm date-picker", required = "required" })
                            <span class="input-group-btn cal-btn">
                                <button class="btn default" type="button" style="margin-top: 3px;">
                                    <i class="fa fa-calendar"></i>
                                </button>
                            </span>
                        </div>
                    </div>
                    <label class="control-label col-md-3">
                        Equipment & Supply
                        <span class="required"> * </span>
                    </label>
                    <div class="col-md-3">
                        <div class="input-group date" data-date-format="mm/dd/yyyy">
                            @Html.TextBoxFor(o => o.FullfillmentInfo.EquipmentAndSupplyDate, new { @class = "form-control input-sm date-picker", required = "required" })
                            <span class="input-group-btn cal-btn">
                                <button class="btn default" type="button" style="margin-top: 3px;">
                                    <i class="fa fa-calendar"></i>
                                </button>
                            </span>
                        </div>
                    </div>
                </div>
                <div class="form-group" style="margin-right:60px !important;">
                    <label class="control-label col-md-3">
                        Training
                        <span class="required"> * </span>
                    </label>
                    <div class="col-md-3">
                        <div class="input-group date" data-date-format="mm/dd/yyyy">
                            @Html.TextBoxFor(o => o.FullfillmentInfo.TrainingDate, new { @class = "form-control input-sm date-picker", required = "required" })
                            <span class="input-group-btn cal-btn">
                                <button class="btn default" type="button" style="margin-top: 3px;">
                                    <i class="fa fa-calendar"></i>
                                </button>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-actions">
                <div class="col-md-12" style="padding-right: 28px;">
                    <button type="submit" class="btn btn-primary button-next  pull-right" id="btnContinue" style="margin-left: 10px;">
                        Submit
                        <i class="fa fa-angle-right"></i>
                    </button>&nbsp;&nbsp;&nbsp;&nbsp;
                    @*<button type="submit" class="btn btn-primary  pull-right" id="btnSave" style="margin-left: 10px;">
                        Save
                        <i class="fa fa-check"></i>
                    </button>&nbsp;&nbsp;&nbsp;&nbsp;*@
                    <button type="submit" class="btn btn-primary button-next  pull-right" id="btnBack" style="margin-left: 10px;">
                        Back
                        <i class="fa fa-angle-right"></i>
                    </button> 
                </div>
            </div>
        }
    </div>
</div>



@section pageplugins{

    <!-- BEGIN PAGE LEVEL PLUGINS -->
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/select2/js/select2.full.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/jquery-validation/js/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/jquery-validation/js/additional-methods.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/bootstrap-wizard/jquery.bootstrap.wizard.min.js")" type="text/javascript"></script>

    <script src="@Url.Content("~/Content/admin/assets/global/plugins/jquery-inputmask/jquery.inputmask.bundle.min.js")" type="text/javascript"></script>
    <!-- END PAGE LEVEL PLUGINS -->
    <!-- BEGIN PAGE LEVEL SCRIPTS -->
    @*<script src="@Url.Content("~/Content/admin/assets/pages/scripts/form-wizard.min.js")" type="text/javascript"></script>*@
    <!-- END PAGE LEVEL SCRIPTS -->
    @*<script src="@Url.Content("~/Content/admin/assets/pages/scripts/form-validation.min.js")" type="text/javascript"></script>*@

}
@section scripts{
    <script>
        var MaintenanceFormWizard = function () {


            return {
                //main function to initiate the module
                init: function () {
                    if (!jQuery().bootstrapWizard) {
                      //  return;
                    }

                    function format(state) {
                        if (!state.id) return state.text; // optgroup
                        return "<img class='flag' src='../../assets/global/img/flags/" + state.id.toLowerCase() + ".png'/>&nbsp;&nbsp;" + state.text;
                    }

                    //$("#country_list").select2({
                    //    placeholder: "Select",
                    //    allowClear: true,
                    //    formatResult: format,
                    //    width: 'auto',
                    //    formatSelection: format,
                    //    escapeMarkup: function (m) {
                    //        return m;
                    //    }
                    //});

                    var form = $('#submit_form');
                    var error = $('.alert-danger', form);
                    var success = $('.alert-success', form);

                    form.validate({
                        doNotHideMessage: true, //this option enables to show the error/success messages on tab switch.
                        errorElement: 'span', //default input error message container
                        errorClass: 'help-block help-block-error', // default input error message class
                        focusInvalid: false, // do not focus the last invalid input
                        rules: {},
                        messages: { // custom messages for radio buttons and checkboxes
                            'payment[]': {
                                required: "Please select at least one option",
                                minlength: jQuery.validator.format("Please select at least one option")
                            }
                        },

                        errorPlacement: function (error, element) { // render error placement for each input type
                        },

                        invalidHandler: function (event, validator) { //display error alert on form submit
                            success.hide();
                            error.show();
                            App.scrollTo(error, -200);
                        },

                        highlight: function (element) { // hightlight error inputs
                            $(element)
                                .closest('.form-group').removeClass('has-success').addClass('has-error'); // set error class to the control group
                        },

                        unhighlight: function (element) { // revert the change done by hightlight
                            $(element)
                                .closest('.form-group').removeClass('has-error'); // set error class to the control group
                        },

                        success: function (label) {
                            if (label.attr("for") == "gender" || label.attr("for") == "payment[]") { // for checkboxes and radio buttons, no need to show OK icon
                                label
                                    .closest('.form-group').removeClass('has-error').addClass('has-success');
                                label.remove(); // remove error label here
                            } else { // display success icon for other inputs
                                label
                                    .addClass('valid') // mark the current input as valid and display OK icon
                                .closest('.form-group').removeClass('has-error').addClass('has-success'); // set success class to the control group
                            }
                        },

                        submitHandler: function (form) {
                            success.show();
                            error.hide();
                            form[0].submit();
                            //add here some ajax code to submit your form or just call form.submit() if you want to submit the form without ajax
                        }

                    });



                    $('#divachsubsection').hide();
                    $('#chkcopyaddresstocontact').change(function () {
                        var ContactInfo_Name = $('#ContactInfo_Name');
                        var ContactInfoAddress_Address1 = $('#ContactInfoAddress_Address1');
                        var ContactInfoAddress_City = $('#ContactInfoAddress_City');
                        var ContactInfoAddress_State = $('#ContactInfoAddress_State');
                        var ContactInfoAddress_PostalCode = $('#ContactInfoAddress_PostalCode');

                        var ContactInfoPhone_Phone1 = $('#ContactInfoPhone_Phone1');
                        var ContactInfoEmail_EmailAddress = $('#ContactInfoEmail_EmailAddress');




                        if ($(this).prop('checked')) { //3rd radiobutton
                            ContactInfo_Name.val($('#BusinessInfo_Name').val());
                            ContactInfoAddress_Address1.val($('#BusinessInfoAddress_Address1').val());
                            ContactInfoAddress_City.val($('#BusinessInfoAddress_City').val());
                            ContactInfoAddress_State.val($('#BusinessInfoAddress_State').val());
                            ContactInfoAddress_PostalCode.val($('#BusinessInfoAddress_PostalCode').val());
                            ContactInfoPhone_Phone1.val($('#BusinessInfoPhone_Phone1').val());
                            ContactInfoEmail_EmailAddress.val($('#BusinessInfoEmail_EmailAddress').val());

                            ContactInfo_Name.attr("disabled", "disabled");
                            ContactInfoAddress_Address1.attr("disabled", "disabled");
                            ContactInfoAddress_City.attr("disabled", "disabled");
                            ContactInfoAddress_State.attr("disabled", "disabled");
                            ContactInfoAddress_PostalCode.attr("disabled", "disabled");
                            ContactInfoPhone_Phone1.attr("disabled", "disabled");
                            ContactInfoEmail_EmailAddress.attr("disabled", "disabled");
                        }
                        else {
                            ContactInfo_Name.val('');
                            ContactInfoAddress_Address1.val('');
                            ContactInfoAddress_City.val('');
                            ContactInfoAddress_State.val('');
                            ContactInfoAddress_PostalCode.val('');
                            ContactInfoPhone_Phone1.val('');
                            ContactInfoEmail_EmailAddress.val('');

                            ContactInfo_Name.removeAttr("disabled");
                            ContactInfoAddress_Address1.removeAttr("disabled");
                            ContactInfoAddress_City.removeAttr("disabled");
                            ContactInfoAddress_State.removeAttr("disabled");
                            ContactInfoAddress_PostalCode.removeAttr("disabled");
                            ContactInfoPhone_Phone1.removeAttr("disabled");
                            ContactInfoEmail_EmailAddress.removeAttr("disabled");

                        }


                    });
                    $('#chkcopyaddresstopayee').change(function () {
                        var PayeeInfo_PayeeName = $('#PayeeInfo_PayeeName');
                        var PayeeInfoAddress_Address1 = $('#PayeeInfoAddress_Address1');
                        var PayeeInfoAddress_City = $('#PayeeInfoAddress_City');
                        var PayeeInfoAddress_State = $('#PayeeInfoAddress_State');
                        var PayeeInfoAddress_PostalCode = $('#PayeeInfoAddress_PostalCode');


                        if ($(this).prop('checked')) { //3rd radiobutton
                            PayeeInfo_PayeeName.val($('#BusinessInfo_Name').val());
                            PayeeInfoAddress_Address1.val($('#BusinessInfoAddress_Address1').val());
                            PayeeInfoAddress_City.val($('#BusinessInfoAddress_City').val());
                            PayeeInfoAddress_State.val($('#BusinessInfoAddress_State').val());
                            PayeeInfoAddress_PostalCode.val($('#BusinessInfoAddress_PostalCode').val());

                            PayeeInfo_PayeeName.attr("disabled", "disabled");
                            PayeeInfoAddress_Address1.attr("disabled", "disabled");
                            PayeeInfoAddress_City.attr("disabled", "disabled");
                            PayeeInfoAddress_State.attr("disabled", "disabled");
                            PayeeInfoAddress_PostalCode.attr("disabled", "disabled");
                        }
                        else {
                            PayeeInfo_PayeeName.val('');
                            PayeeInfoAddress_Address1.val('');
                            PayeeInfoAddress_City.val('');
                            PayeeInfoAddress_State.val('');
                            PayeeInfoAddress_PostalCode.val('');

                            PayeeInfo_PayeeName.removeAttr("disabled");
                            PayeeInfoAddress_Address1.removeAttr("disabled");
                            PayeeInfoAddress_City.removeAttr("disabled");
                            PayeeInfoAddress_State.removeAttr("disabled");
                            PayeeInfoAddress_PostalCode.removeAttr("disabled");

                        }


                    });
                    $('#chkachsectionenable').change(function () {

                        var ACHBankInfo_Name = $('#ACHBankInfo_Name');
                        var ACHBankInfo_RoutingNumber = $('#ACHBankInfo_RoutingNumber');
                        var ACHBankInfo_AccountNumber = $('#ACHBankInfo_AccountNumber');
                        var ACHBankInfo_Descrption = $('#ACHBankInfo_Descrption');
                        var ACHBankInfo_RemittanceNotes = $('#ACHBankInfo_RemittanceNotes');

                        ACHBankInfo_Name.val('');
                        ACHBankInfo_RoutingNumber.val('');
                        ACHBankInfo_AccountNumber.val('');
                        ACHBankInfo_Descrption.val('');
                        ACHBankInfo_RemittanceNotes.val('');


                        if ($(this).prop('checked')) {
                            ACHBankInfo_Name.removeAttr("disabled");
                            ACHBankInfo_RoutingNumber.removeAttr("disabled");
                            ACHBankInfo_AccountNumber.removeAttr("disabled");
                            ACHBankInfo_Descrption.removeAttr("disabled");
                            ACHBankInfo_RemittanceNotes.removeAttr("disabled");


                            ACHBankInfo_Name.attr("required", "required");
                            ACHBankInfo_RoutingNumber.attr("required", "required");
                            ACHBankInfo_AccountNumber.attr("required", "required");
                            ACHBankInfo_Descrption.attr("required", "required");
                            ACHBankInfo_RemittanceNotes.attr("required", "required");

                            $('#divachsubsection').show();


                        }
                        else {
                            ACHBankInfo_Name.attr("disabled", "disabled");
                            ACHBankInfo_RoutingNumber.attr("disabled", "disabled");
                            ACHBankInfo_AccountNumber.attr("disabled", "disabled");
                            ACHBankInfo_Descrption.attr("disabled", "disabled");
                            ACHBankInfo_RemittanceNotes.attr("disabled", "disabled");

                            ACHBankInfo_Name.removeAttr("required");
                            ACHBankInfo_RoutingNumber.removeAttr("required");
                            ACHBankInfo_AccountNumber.removeAttr("required");
                            ACHBankInfo_Descrption.removeAttr("required");
                            ACHBankInfo_RemittanceNotes.removeAttr("required");
                            $('#divachsubsection').hide();
                        }


                    })

                    function saveFranchiseeData(inputData) {
                       
                        var sURL = '@Url.Action("Maintenance", "Franchise", new { area = "Portal" })'
                        var dataString = new FormData(formData);
                        $.ajax({
                            type: "POST",
                            url: sURL,
                            data: $("form").serialize(),
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (data, status) {
                                alert(data);
                            },
                            error: function (e) {
                                alert(e);
                            }
                        });
                    }

                    $("#ContractInfo_MonthlyPaymentAmount").inputmask();
                    $("#ContractInfo_IBAmount").inputmask();
                    $("#ContractInfo_DownPaymentAmount").inputmask();
                    $("#ContractInfo_Interest").inputmask();
                    $("#ContractInfo_Amount").inputmask();
                    $("#ContractInfo_TotalPayments").inputmask();
                    $("#ContractInfo_CurrentPayment").inputmask();
                    $("#ContractInfo_TriggerAmount").inputmask();
                    $('#ContactInfoPhone_Phone1').inputmask("mask", {
                        "mask": "(999) 999-9999"
                    });
                    $('#ContactInfoPhone_Cell').inputmask("mask", {
                        "mask": "(999) 999-9999"
                    });
                    $('#BusinessInfoPhone_Phone1').inputmask("mask", {
                        "mask": "(999) 999-9999"
                    });
                    $('#ownerssn').inputmask("mask", {
                        "mask": "aaa-aa-aaaa"
                    });
                    $('#OwnerInfoPhone_Phone1').inputmask("mask", {
                        "mask": "(999) 999-9999"
                    });

                    $('#OwnerInfoPhone_Cell').inputmask("mask", {
                        "mask": "(999) 999-9999"
                    });
                    $('#OwnerInfoPhone_Fax').inputmask("mask", {
                        "mask": "(999) 999-9999"
                    });


                }

            };

        }();
        jQuery(document).ready(function () {
            MaintenanceFormWizard.init();
          //  MaintenanceFormWizardOwner.init();


            $('.date-picker').datepicker({ autoclose: true, dateFormat: 'mm/dd/yy' });
            $('.date-picker').attr("placeholder", "mm/dd/yyyy");

        });




        // Prevent the form to be submitted on ENTER
        $('#form_wizard_1').submit(function (e) {
          //  validateOnSubmit();
        });

        // Controll data
        $('#btnContinue').click(function () {
            
            var btnCount = @Convert.ToInt32(JKApi.Business.Enumeration.ButtonType.Continue)
            $("#ButtonType").val(btnCount);
            checkMandatoryFields(btnCount);
        });

        // Controll data
        $('#btnSave').click(function () {
            
            var btnCount = @Convert.ToInt32(JKApi.Business.Enumeration.ButtonType.Save)

            $("#ButtonType").val(btnCount);
            checkMandatoryFields(btnCount);
        });

        // Controll data
        $('#btnBack').click(function () {
            
            var btnCount = @Convert.ToInt32(JKApi.Business.Enumeration.ButtonType.Back)

            $("#ButtonType").val(btnCount);
            checkMandatoryFields(btnCount);
        });



        // Check mandatory fields before subitting:
        function checkMandatoryFields(count) {
            var form = $('#form_wizard_1');
            var error = $('.alert-danger', form);
            var success = $('.alert-success', form);

            form.validate({
                doNotHideMessage: true, //this option enables to show the error/success messages on tab switch.
                errorElement: 'span', //default input error message container
                errorClass: 'help-block help-block-error', // default input error message class
                focusInvalid: false, // do not focus the last invalid input
                rules: {},
                messages: { // custom messages for radio buttons and checkboxes
                    'payment[]': {
                        required: "Please select at least one option",
                        minlength: jQuery.validator.format("Please select at least one option")
                    }
                },

                errorPlacement: function (error, element) { // render error placement for each input type
                },

                invalidHandler: function (event, validator) { //display error alert on form submit
                    success.hide();
                    error.show();
                    App.scrollTo(error, -200);
                },

                highlight: function (element) { // hightlight error inputs
                    $(element)
                        .closest('.form-group').removeClass('has-success').addClass('has-error'); // set error class to the control group
                },

                unhighlight: function (element) { // revert the change done by hightlight
                    $(element)
                        .closest('.form-group').removeClass('has-error'); // set error class to the control group
                },

                success: function (label) {
                    if (label.attr("for") == "gender" || label.attr("for") == "payment[]") { // for checkboxes and radio buttons, no need to show OK icon
                        label
                            .closest('.form-group').removeClass('has-error').addClass('has-success');
                        label.remove(); // remove error label here
                    } else { // display success icon for other inputs
                        label
                            .addClass('valid') // mark the current input as valid and display OK icon
                        .closest('.form-group').removeClass('has-error').addClass('has-success'); // set success class to the control group
                    }
                },

                submitHandler: function (form) {
                    success.show();
                    error.hide();
                   // form[0].submit();
                    if (count > 0) {
                        $('#form_wizard_1')[0].submit();
                        //$('#form_wizard_1').submit();
                    }
                    //add here some ajax code to submit your form or just call form.submit() if you want to submit the form without ajax
                }

            });
            if ($('#FullfillmentInfo_BackgroundCheckDate').val() == '') { $('#FullfillmentInfo_BackgroundCheckDate').css('border-color', 'red'); } else { $('#FullfillmentInfo_BackgroundCheckDate').css('border-color', ''); }
            if ($('#FullfillmentInfo_BusinessProtectionDate').val() == '') { $('#FullfillmentInfo_BusinessProtectionDate').css('border-color', 'red'); } else { $('#FullfillmentInfo_BusinessProtectionDate').css('border-color', ''); }
            if ($('#FullfillmentInfo_BusinessLicensedate').val() == '') { $('#FullfillmentInfo_BusinessLicensedate').css('border-color', 'red'); } else { $('#FullfillmentInfo_BusinessLicensedate').css('border-color', ''); }
            if ($('#FullfillmentInfo_EquipmentAndSupplyDate').val() == '') { $('#FullfillmentInfo_EquipmentAndSupplyDate').css('border-color', 'red'); } else { $('#FullfillmentInfo_EquipmentAndSupplyDate').css('border-color', ''); }
            if ($('#FullfillmentInfo_TrainingDate').val() == '') { $('#FullfillmentInfo_TrainingDate').css('border-color', 'red'); } else { $('#FullfillmentInfo_TrainingDate').css('border-color', ''); }

        }
    </script>
}
 

