@model JKViewModels.Franchisee.FullFranchiseeViewModel

<style>
    .custom-form.portlet.light .form-group {
        margin: 0px !important;
        margin-top: 0px !important;
    }
</style>
@section styles{
    <link href="@Url.Content("~/Content/admin/assets/global/plugins/datatables/datatables.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/admin/assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.css")" rel="stylesheet" type="text/css" />
}
<div class="custom-form portlet light" id="" style="margin-top:1px;">

    <div class="headerbox" style="font-weight: normal;">
        <div class="col-md-12 text-center" style="font-size:15px;">
            <b> Plan Information </b>
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true" style="margin-top: 5px !important;margin-right: 12px !important;"></button>
        </div>
        <div class="clearfix"> </div>
    </div>

    <div class="portlet-body" style="padding:10px;padding-top:0px;padding-bottom:5px;">
        @using (Html.BeginForm("SaveFranchiseFourStepPopup", "Franchise", FormMethod.Post, new { @id = "form_wizard_fourstep", @role = "form", @class = "form form-horizontal" }))
        {
            @Html.HiddenFor(one => one.ButtonType)
            @Html.HiddenFor(one => one.BusinessInfo.FranchiseeId)
            @Html.HiddenFor(one => one.ContractInfo.FranchiseeContractId)
            @Html.HiddenFor(one => one.ContractInfo.FranchiseeContractTypeListId)
            @Html.HiddenFor(one => one.FranchiseeFeeConfigurationInfo.FeeConfigurationId)
            @Html.HiddenFor(one => one.FranchiseeFeeConfigurationInfo.RegionId)
            @Html.HiddenFor(one => one.FranchiseeFeeConfigurationInfo.FeeId)




            <div class="tab-pane" id="tb_fr_page4">
                <h4 class="blocktop" style="margin-top:3px;">
                    Contract
                    <button type="button" class="btn btn-primary button-next  pull-right CancelBtn" id="btnEditPlanInfoCancel" style="margin-left: 10px;padding-top:0px;margin-top:-5px;margin-right:20px;">Cancel</button>&nbsp;&nbsp;&nbsp;&nbsp;
                    <button type="button" class="btn btn-primary  pull-right SaveBtn" id="btnEditPlanInfoSave" style="margin-left: 10px;padding-top:0px;margin-top:-5px;">Save</button>&nbsp;&nbsp;&nbsp;&nbsp;
                    <button type="button" class="btn btn-primary  pull-right EditBtn" id="btnEditPlanInfo" onclick=EditfunctionPlanInfo(); style="margin-left: 10px;padding-top:0px;margin-top:-5px;">Edit</button>&nbsp;&nbsp;&nbsp;&nbsp;
                </h4>

                <div class="col-md-12">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="">
                                Date Sign
                                <span class="required"> * </span>
                            </label>
                            <div class="input-group date" data-date-format="mm/dd/yyyy">
                                @Html.TextBoxFor(o => o.ContractInfo.DateSign, "{0:MM/dd/yyyy}", new { @class = "form-control input-sm  edit-planinfo", required = "required", autocomplete = "off"  })
                                <span class="input-group-btn cal-btn">
                                    <button class="btn default cal-btn" type="button">
                                        <i class="fa fa-calendar"></i>
                                    </button>
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="">
                                Last FA Signed
                                <span class="required"> * </span>
                            </label>
                            <div class="input-group date" data-date-format="mm/dd/yyyy">
                                @Html.TextBoxFor(o => o.ContractInfo.LastRenewedContractDate, "{0:MM/dd/yyyy}", new { @class = "form-control input-sm  edit-planinfo", required = "required", autocomplete = "off", onchange = "TermOnchangeEvent()" })
                                <span class="input-group-btn cal-btn">
                                    <button class="btn default cal-btn" type="button">
                                        <i class="fa fa-calendar"></i>
                                    </button>
                                </span>
                            </div>
                        </div>
                    </div>                    
                </div>

                <div class="col-md-12">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="">
                                Term(Yrs)
                                <span class="required"> * </span>
                            </label>
                            @Html.TextBoxFor(o => o.ContractInfo.Term, new { @class = "form-control input-sm edit-planinfo", required = "required", onchange = "TermOnchangeEvent()" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="">Exp. Date<span class="required"> * </span></label>
                            <div class="input-group " data-date-format="mm/dd/yyyy">
                                @Html.TextBoxFor(o => o.ContractInfo.ExpireDate, "{0:MM/dd/yyyy}", new { @class = "form-control input-sm ", required = "required", @readonly = "readonly" })
                                <span class="input-group-btn cal-btn">
                                    <button class="btn default cal-btn" type="button">
                                        <i class="fa fa-calendar"></i>
                                    </button>
                                </span>
                            </div>
                        </div>
                    </div>
                   
                </div>

                <div class="col-md-12">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="">Plan Type<span class="required"> * </span></label>
                            @Html.DropDownList("ContractInfo_FranchiseeContractTypeListId", null, "Select", new { @class = "form-control input-sm edit-planinfo ddlFranchiseeContractTypeList", required = "required", @id = "ContractInfo_FranchiseeContractTypeListId", onchange = "OnChangeClickEvent()" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="">
                                Plan Amount
                                <span class="required"> * </span>
                            </label>
                            @Html.TextBoxFor(o => o.ContractInfo.Amount, new { @class = "form-control input-sm edit-planinfo", required = "required", data_inputmask = "'alias': 'decimal', 'groupSeparator': ',', 'autoGroup': true, 'digits': 2, 'digitsOptional': true, 'placeholder': '0.00'" })
                        </div>
                    </div>
                    
                </div>
                <div class="col-md-12">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for=""> IB Amount</label>
                            @Html.TextBoxFor(o => o.ContractInfo.IBAmount, new { @class = "form-control input-sm edit-planinfo", data_inputmask = "'alias': 'decimal', 'groupSeparator': ',', 'autoGroup': true, 'digits': 2, 'digitsOptional': true, 'placeholder': '0.00'" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for=""> Down Payment</label>
                            @Html.TextBoxFor(o => o.ContractInfo.DownPaymentAmount, new { @class = "form-control input-sm edit-planinfo", data_inputmask = "'alias': 'decimal', 'groupSeparator': ',', 'autoGroup': true, 'digits': 2, 'digitsOptional': true, 'placeholder': '0.00'" })
                        </div>
                    </div>
                   
                </div>
                <div class="col-md-12">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="">Interest</label>
                            @Html.TextBoxFor(o => o.ContractInfo.Interest, new { @class = "form-control input-sm edit-planinfo", data_inputmask = "'alias': 'decimal', 'groupSeparator': ',', 'autoGroup': true, 'digits': 2, 'digitsOptional': true, 'placeholder': '0.00'" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for=""> Payment Amount</label>
                            @Html.TextBoxFor(o => o.ContractInfo.MonthlyPaymentAmount, new { @class = "form-control input-sm edit-planinfo", data_inputmask = "'alias': 'decimal', 'groupSeparator': ',', 'autoGroup': true, 'digits': 2, 'digitsOptional': true, 'placeholder': '0.00'" })
                        </div>
                    </div>                   
                </div>
                <div class="col-md-12">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for=""> No of Payments<span class="required"> * </span></label>
                            @Html.TextBoxFor(o => o.ContractInfo.TotalPayments, new { @class = "form-control input-sm edit-planinfo", @required = "required", data_inputmask = "'alias': 'decimal', 'groupSeparator': ',', 'autoGroup': true, 'digits': 0, 'digitsOptional': true, 'placeholder': '0'" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="">Days To Fullfill</label>
                            @Html.TextBoxFor(o => o.ContractInfo.DaysToFullfill, new { @class = "form-control input-sm edit-planinfo", data_inputmask = "'alias': 'decimal', 'groupSeparator': ',', 'autoGroup': true, 'digits': 2, 'digitsOptional': true, 'placeholder': '0.00'" })
                        </div>
                    </div>
                </div>
                @*<div class="col-md-12">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="">Current Payment</label>
                            @Html.TextBoxFor(o => o.ContractInfo.CurrentPayment, new { @class = "form-control input-sm edit-planinfo", data_inputmask = "'alias': 'decimal', 'groupSeparator': ',', 'autoGroup': true, 'digits': 2, 'digitsOptional': true, 'placeholder': '0.00'" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for=""> Payment Start Date<span class="required"> * </span></label>
                            <div class="input-group date" data-date-format="mm/dd/yyyy">
                                @Html.TextBoxFor(o => o.ContractInfo.StartDate, "{0:MM/dd/yyyy}", new { @class = "form-control input-sm edit-planinfo", required = "required" })
                                <span class="input-group-btn cal-btn">
                                    <button class="btn default cal-btn" type="button">
                                        <i class="fa fa-calendar"></i>
                                    </button>
                                </span>
                            </div>
                        </div>
                    </div>                   
                </div>
                <div class="col-md-12">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for=""> Trigger Amt.<span class="required"> * </span></label>
                            @Html.TextBoxFor(o => o.ContractInfo.TriggerAmount, new { @class = "form-control input-sm edit-planinfo", required = "required", data_inputmask = "'alias': 'decimal', 'groupSeparator': ',', 'autoGroup': true, 'digits': 2, 'digitsOptional': true, 'placeholder': '0.00'" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="">
                                Legal Obl. Start
                                <span class="required"> * </span>
                            </label>
                            <div class="input-group date" data-date-format="mm/dd/yyyy">
                                @Html.TextBoxFor(o => o.ContractInfo.LegalObligationStartDate, "{0:MM/dd/yyyy}", new { @class = "form-control input-sm edit-planinfo", required = "required" })
                                <span class="input-group-btn cal-btn">
                                    <button class="btn default cal-btn" type="button">
                                        <i class="fa fa-calendar"></i>
                                    </button>
                                </span>
                            </div>
                        </div>
                    </div>                    
                </div>
                <div class="col-md-12">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="">
                                Legal Obl. End
                                <span class="required"> * </span>
                            </label>
                            <div class="input-group date cal-btn" data-date-format="mm/dd/yyyy">
                                @Html.TextBoxFor(o => o.ContractInfo.LegalObligationEndDate, "{0:MM/dd/yyyy}", new { @class = "form-control input-sm edit-planinfo", required = "required" })
                                <span class="input-group-btn">
                                    <button class="btn default cal-btn" type="button">
                                        <i class="fa fa-calendar"></i>
                                    </button>
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label for="">
                                Legal Obl. Due
                                <span class="required"> * </span>
                            </label>
                            @Html.TextBoxFor(o => o.ContractInfo.LegalObligaitonDueAmount, new { @class = "form-control input-sm edit-planinfo", required = "required" })
                        </div>
                    </div>
                </div>*@



                <div class="form-group">
                    <label class="control-label col-md-2">

                    </label>
                    <div class="col-md-2">

                    </div>
                    <label class="control-label col-md-2">

                    </label>
                    <div class="col-md-2">

                    </div>
                    <label class="control-label col-md-2">

                    </label>
                    <div class="col-md-2">
                        <div class="input-group">

                        </div>
                    </div>
                </div>


                <div class="custom-form portlet light custom-form-design custom-listbox" id="divFranchiseeMinimumRoyalty">
                    <h4 class="blocktop">
                        Minimum Royalty
                        <button type="button" class="btn btn-primary button-next  pull-right CancelBtn" id="btnEditFeeConfigurationCancel" style="margin-left: 10px;padding-top:0px;margin-top:-5px;margin-right:20px;">Cancel</button>&nbsp;&nbsp;&nbsp;&nbsp;
                        <button type="button" class="btn btn-primary  pull-right SaveBtn" id="btnEditFeeConfigurationSave" style="margin-left: 10px;padding-top:0px;margin-top:-5px;">Save</button>&nbsp;&nbsp;&nbsp;&nbsp;
                        <button type="button" class="btn btn-primary  pull-right EditBtn" id="btnEditFeeConfiguration" onclick=EditfunctionFeeConfiguration(); style="margin-left: 10px;padding-top:0px;margin-top:-5px;">Edit</button>&nbsp;&nbsp;&nbsp;&nbsp;
                    </h4>
                    <div class="tablebox">
                        <div class="col-md-12">
                            @{
                                if (ViewBag.lsFranchiseeFeeConfigurationInfo != null)
                                {
                                    <table width="100%" id="tblFranchiseeFeeConfiguration">
                                        <tr>
                                            <td width="45%">
                                                <label for="">Minimum Royalty</label>
                                            </td>
                                            <td width="45%">
                                                <label for="">Effective Date</label>
                                            </td>
                                            <td></td>
                                        </tr>
                                        @{
                                            int RowNo = 0;
                                        }
                                        @foreach (var item in ViewBag.lsFranchiseeFeeConfigurationInfo)
                                        {
                                            RowNo += 1;

                                            <tr class="trclsfrancon" id="tr_@RowNo" rel="@RowNo">
                                                <td width="45%">
                                                    <input type="hidden" id="hdn_@RowNo" value="@item.FeeConfigurationId" />
                                                    <div class="form-group">
                                                        <input type="hidden" value="@item.MinimumAmount" id="MinimumAmountOld_@RowNo" />
                                                        <input type="text" id="MinimumAmount_@RowNo" value="@item.MinimumAmount" class="form-control input-sm edit-planinfo-tab2" placeholder="Minimum Royalty" />
                                                    </div>
                                                </td>
                                                <td width="45%">
                                                    <div class="form-group">
                                                        <input type="hidden" value="@(item.EffectiveDate != null ? Convert.ToDateTime(item.EffectiveDate).ToString("MM/dd/yyyy") : string.Empty)" id="EffectiveDateOld_@RowNo" />
                                                        <input type="text" id="EffectiveDate_@RowNo" value="@(item.EffectiveDate != null ? Convert.ToDateTime(item.EffectiveDate).ToString("MM/dd/yyyy") : string.Empty)" class="form-control input-sm date-picker edit-planinfo-tab2" placeholder="Effective Date" autocomplete="off" />
                                                    </div>
                                                </td>
                                                <td>
                                                    <a class="trashdata" style="font-size: 16px;padding: 8px;" href="#" onclick="RemoveRecordRowData(@RowNo,@item.FeeConfigurationId)"><i class="fa fa-trash" aria-hidden="true"></i></a>
                                                </td>
                                            </tr>
                                        }

                                    </table>
                                    <table width="100%">
                                        <tr>
                                            <td width="45%"></td>
                                            <td width="45%"></td>
                                            <td>
                                                <input type="hidden" id="hdnrno" value="@RowNo" />
                                                <a style="margin-right: 4px;display:none;"  href="javascript:void(0);" id="_Add" onclick="AddnewRowData()">+ Add</a>
                                            </td>
                                        </tr>
                                   </table>
                                }
                            }
                            <div class="col-md-6" style="display:none;">
                                <div class="form-group">
                                    <label for="">Minimum Royalty</label>
                                    @Html.TextBoxFor(o => o.FranchiseeFeeConfigurationInfo.MinimumAmount, new { @class = "form-control input-sm edit-planinfo-tab2", data_inputmask = "'alias': 'decimal', 'groupSeparator': ',', 'autoGroup': true, 'digits': 2, 'digitsOptional': true, 'placeholder': '0.00'" })
                                </div>
                            </div>

                            <div class="col-md-6" style="display:none;">
                                <div class="form-group">
                                    <label for="">
                                        Effective Date
                                    </label>

                                    <div class="input-group date" data-date-format="mm/dd/yyyy">
                                        @Html.TextBoxFor(o => o.FranchiseeFeeConfigurationInfo.EffectiveDate, "{0:MM/dd/yyyy}", new { @class = "form-control input-sm date-picker  edit-planinfo-tab2", autocomplete = "off" })
                                        <span class="input-group-btn cal-btn">
                                            <button class="btn default cal-btn" type="button">
                                                <i class="fa fa-calendar"></i>
                                            </button>
                                        </span>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>

                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">
                    </label>

                    <div class="col-md-2">

                    </div>
                    <label class="control-label col-md-2">
                    </label>
                </div>

                <div class="custom-form portlet light custom-form-design custom-listbox" id="divfranchiseList">
                    <h4 class="blocktop">Franchisee Fee Maintanance</h4>
                    <button type="button" class="btn red dropdown-toggle pull-right subsectionBtn edit-feeinfo" id="addnewfree" onclick="addEditFranchiseeFeeList(0)" style="margin-right:80px;" ><i class="fa fa-plus"></i>&nbsp;<span class="hidden-sm hidden-xs">New&nbsp;</span></button>

                    <button type="button" class="btn btn-primary button-next  pull-right CancelBtn" id="btnEditFeeInfoCancel" style="margin-left: 10px;padding-top:0px;margin-top:-29px;margin-right:9px;">Cancel</button>&nbsp;&nbsp;&nbsp;&nbsp;
                    <button type="button" class="btn btn-primary  pull-right EditBtn" id="btnEditFeeInfo" onclick=EditfunctionFeeInfo(); style="margin-left: 10px;padding-top:0px;margin-top:-29px;margin-right:7px;">Edit</button>&nbsp;&nbsp;&nbsp;&nbsp;

                    <div class="tablebox">
                        <table class="table table-striped table-bordered table-hover order-column" id="generalFranchiseeList" style="width:100%;">
                            <thead>
                                <tr>
                                    <th style="text-align:center;width:57%">
                                        Name
                                    </th>
                                    <th style="text-align:center;width:5%">
                                        Rate
                                    </th>
                                    <th style="text-align:center;width:3.5%">
                                        Value
                                    </th>
                                    <th style="text-align:center;width:3.5%">
                                        Active
                                    </th>
                                    <th style="text-align:center;width:27%">
                                        Action
                                    </th>
                                </tr>
                            </thead>
                            <tbody id="tblFranchiseeFeeList" style="width:100%;">
                                @if (Model != null && Model.FeeFranchiseeFeeRateTypeListCollectionViewModel != null && Model.FeeFranchiseeFeeRateTypeListCollectionViewModel.Count > 0)
                                {
                                    foreach (var feeitem in Model.FeeFranchiseeFeeRateTypeListCollectionViewModel)
                                    {

                                        <tr>
                                            <td style="width:57%">
                                                @feeitem.FranchiseeFeeList.Name
                                            </td>
                                            <td style="text-align:center;width:5%">
                                                @feeitem.FeeRateTypeList.Rate
                                            </td>
                                            <td style="text-align:center;width:3.5%">
                                                @feeitem.FeesList.Amount@(feeitem.FeeRateTypeList.FeeRateTypeListId == (int)JKApi.Business.Enumeration.FeeRateTypeList.Percentage ? "%" : string.Empty)
                                            </td>
                                            <td style="text-align:center;width:3.5%">
                                                @if (feeitem.FeesList.IsActive == true)
                                                {
                                                    <text>Active</text>
                                                }
                                                else
                                                {
                                                    <text>Inactive</text>
                                                }
                                            </td>
                                            <td style="text-align:center;width:27%">
                                                <button type="button" class="btn-success edit-feeinfo btneditinfo" onclick="addEditFranchiseeFeeList(@feeitem.FeesList.FranchiseeFeeId)" style="padding-left:1px;padding-right:3px;"><span class="hidden-sm hidden-xs">Edit</span></button>&nbsp;
                                                <button type="button" class="btn-success edit-feeinfo btneditinfo" onclick="removeFranchiseeFeeListWithId(@feeitem.FeesList.FranchiseeFeeId)" style="padding-left:1px;padding-right:3px;"><span class="hidden-sm hidden-xs">Remove</span></button>
                                            </td>
                                        </tr>
                                    }
                                }


                                @*@if (Model != null && Model.FranchiseeFeeListFeeRateTypeListCollectionViewModel != null && Model.FranchiseeFeeListFeeRateTypeListCollectionViewModel.FranchiseeFeeListFeeRateTypeListCollectionViewModel.Count > 0)
                                    {
                                        foreach (var franchiseeitem in Model.FranchiseeFeeListFeeRateTypeListCollectionViewModel.FranchiseeFeeListFeeRateTypeListCollectionViewModel)
                                        {

                                            <tr>
                                                <td style="max-width:300px">
                                                    @franchiseeitem.FranchiseeFeeList.Name
                                                </td>
                                                <td style="width:90px;text-align:center;">
                                                    @franchiseeitem.FeeRateTypeList.Rate
                                                </td>
                                                <td style="width:100px;text-align:center;">
                                                    @franchiseeitem.FranchiseeFeeList.Amount
                                                </td>
                                                <td style="text-align:center;width:100px;">
                                                    @if (@franchiseeitem.FranchiseeFeeList.IsActive == true)
                                                    {
                                                        <span><i class="fa fa-check"></i></span>
                                                    }
                                                    else
                                                    {
                                                        <span></span>
                                                    }
                                                </td>

                                                <td style="text-align:center;width:137px;">
                                                    <button type="button" class="btn-success" onclick="addEditFranchiseeFeeList(@franchiseeitem.FranchiseeFeeList.FranchiseeFeeListId)"><i class="fa fa-check"></i>&nbsp;<span class="hidden-sm hidden-xs">Edit&nbsp;</span></button>
                                                </td>
                                            </tr>
                                        }
                                    }*@
                            </tbody>
                        </table>

                    </div>

                </div>



                <div class="modal fade custom-model custom-form-design" id="modalEditMinFeedata" tabindex="-1" role="basic" aria-hidden="true" style="display: none;"></div>
            </div>

            <div class="form-actions" style="display:none;">
                <div class="col-md-12" style="padding-right: 28px;">
                    <button type="submit" class="btn btn-primary  pull-right" id="btnSubmit" style="margin-left: 10px;">
                        Submit
                        <i class="fa fa-check"></i>
                    </button>&nbsp;&nbsp;&nbsp;&nbsp;
                    @*<button type="submit" class="btn btn-primary button-next  pull-right" id="btnBack" style="margin-left: 10px;">
                            Back
                            <i class="fa fa-angle-right"></i>
                        </button>*@
                </div>
            </div>
                                            }
    </div>
</div>
@section pageplugins{

    <!-- BEGIN PAGE LEVEL PLUGINS -->
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/select2/js/select2.full.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/jquery-validation/js/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/jquery-validation/js/additional-methods.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/bootstrap-wizard/jquery.bootstrap.wizard.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/scripts/datatable.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/datatables/datatables.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/datatables/plugins/bootstrap/datatables.bootstrap.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/scripts/app.min.js")" type="text/javascript" )"></script>
    <script src="@Url.Content("~/Content/admin/assets/pages/scripts/table-datatables-managed.min.js")" type="text/javascript"></script>

    <script src="@Url.Content("~/Content/admin/assets/global/plugins/jquery-inputmask/jquery.inputmask.bundle.min.js")" type="text/javascript"></script>
    <!-- END PAGE LEVEL PLUGINS -->
    <!-- BEGIN PAGE LEVEL SCRIPTS -->
    @*<script src="@Url.Content("~/Content/admin/assets/pages/scripts/form-wizard.min.js")" type="text/javascript"></script>*@
    <!-- END PAGE LEVEL SCRIPTS -->
    @*<script src="@Url.Content("~/Content/admin/assets/pages/scripts/form-validation.min.js")" type="text/javascript"></script>*@

}

<script>
    function maskCurrency1(id) {
        $('#' + id).inputmask("currency", {
            alias: 'currency',
            prefix: '$ ',
            digits: 2,
            autoUnmask: true,
            removeMaskOnSubmit: true,
            unmaskAsNumber: true,
            allowPlus: false,
            allowMinus: false,
            autoGroup: true,
            groupSeparator: ",",
        });
    }
    jQuery(document).ready(function () {

        $('.date-picker').datepicker({ autoclose: true ,dateFormat: 'mm/dd/yy'});
        //$('.date-picker').attr("placeholder","mm/dd/yyyy");

        //applyMaskCurrency('#ContractInfo_Amount');
        //applyMaskCurrency('#ContractInfo_DownPaymentAmount');
        //applyMaskCurrency('#ContractInfo_MonthlyPaymentAmount');
        //applyMaskCurrency('#ContractInfo_TriggerAmount');
        //applyMaskCurrency('#ContractInfo_IBAmount');
        //applyMaskCurrency('#ContractInfo_Interest');

        $(".trclsfrancon").each(function(){
            var _rid = $(this).attr("rel");  
            maskCurrency1('MinimumAmount_'+ _rid);             
        });

    });




    // Prevent the form to be submitted on ENTER
    $('#form_wizard_1').submit(function (e) {
        //   validateOnSubmit();
    });


    // Controll data
    $('#btnBack').click(function () {

        var btnCount = @Convert.ToInt32(JKApi.Business.Enumeration.ButtonType.Back)

        $("#ButtonType").val(btnCount);
        checkMandatoryFields(btnCount);
    });


    // Check mandatory fields before subitting:
    function checkMandatoryFields(count) {
        var form = $('#form_wizard_1');
        var error = $('.alert-danger', form);
        var success = $('.alert-success', form);

        form.validate({
            doNotHideMessage: true, //this option enables to show the error/success messages on tab switch.
            errorElement: 'span', //default input error message container
            errorClass: 'help-block help-block-error', // default input error message class
            focusInvalid: false, // do not focus the last invalid input
            rules: {},
            messages: { // custom messages for radio buttons and checkboxes
                'payment[]': {
                    required: "Please select at least one option",
                    minlength: jQuery.validator.format("Please select at least one option")
                }
            },

            errorPlacement: function (error, element) { // render error placement for each input type
            },

            invalidHandler: function (event, validator) { //display error alert on form submit
                success.hide();
                error.show();
                App.scrollTo(error, -200);
            },

            highlight: function (element) { // hightlight error inputs
                $(element)
                    .closest('.form-group').removeClass('has-success').addClass('has-error'); // set error class to the control group
            },

            unhighlight: function (element) { // revert the change done by hightlight
                $(element)
                    .closest('.form-group').removeClass('has-error'); // set error class to the control group
            },

            success: function (label) {
                if (label.attr("for") == "gender" || label.attr("for") == "payment[]") { // for checkboxes and radio buttons, no need to show OK icon
                    label
                        .closest('.form-group').removeClass('has-error').addClass('has-success');
                    label.remove(); // remove error label here
                } else { // display success icon for other inputs
                    label
                        .addClass('valid') // mark the current input as valid and display OK icon
                    .closest('.form-group').removeClass('has-error').addClass('has-success'); // set success class to the control group
                }
            },

            submitHandler: function (form) {
                success.show();
                error.hide();
                if (count > 0) {
                    $('#form_wizard_1')[0].submit();
                    //$('#form_wizard_1').submit();
                }
                //add here some ajax code to submit your form or just call form.submit() if you want to submit the form without ajax
            }

        });
        if ($('#ContractInfo_DateSign').val() == '') { $('#ContractInfo_DateSign').css('border-color', 'red'); } else { $('#ContractInfo_DateSign').css('border-color', ''); }
        if ($('#ContractInfo_Term').val() == '') { $('#ContractInfo_Term').css('border-color', 'red'); } else { $('#ContractInfo_Term').css('border-color', ''); }
        if ($('#ContractInfo_ExpireDate').val() == '') { $('#ContractInfo_ExpireDate').css('border-color', 'red'); } else { $('#ContractInfo_ExpireDate').css('border-color', ''); }
        if ($('#ContractInfo_FranchiseeContractTypeListId').val() == '') { $('#ContractInfo_FranchiseeContractTypeListId').css('border-color', 'red'); } else { $('#ContractInfo_FranchiseeContractTypeListId').css('border-color', ''); }
        //if ($('#ContractInfo_FranchiseeContractTypeListId').val() == '') { $('#ContractInfo_FranchiseeContractTypeListId').css('border-color', 'red'); } else { $('#ContractInfo_FranchiseeContractTypeListId').css('border-color', ''); }
        if ($('#ContractInfo_MonthlyPaymentAmount').val() == '') { $('#ContractInfo_MonthlyPaymentAmount').css('border-color', 'red'); } else { $('#ContractInfo_MonthlyPaymentAmount').css('border-color', ''); }
        if ($('#ContractInfo_TotalPayments').val() == '') { $('#ContractInfo_TotalPayments').css('border-color', 'red'); } else { $('#ContractInfo_TotalPayments').css('border-color', ''); }
        //if ($('#ContractInfo_StartDate').val() == '') { $('#ContractInfo_StartDate').css('border-color', 'red'); } else { $('#ContractInfo_StartDate').css('border-color', ''); }
        //if ($('#ContractInfo_TriggerAmount').val() == '') { $('#ContractInfo_TriggerAmount').css('border-color', 'red'); } else { $('#ContractInfo_TriggerAmount').css('border-color', ''); }
        //if ($('#ContractInfo_LegalObligationStartDate').val() == '') { $('#ContractInfo_LegalObligationStartDate').css('border-color', 'red'); } else { $('#ContractInfo_LegalObligationStartDate').css('border-color', ''); }
        //if ($('#ContractInfo_LegalObligationEndDate').val() == '') { $('#ContractInfo_LegalObligationEndDate').css('border-color', 'red'); } else { $('#ContractInfo_LegalObligationEndDate').css('border-color', ''); }
        //if ($('#ContractInfo_LegalObligaitonDueAmount').val() == '') { $('#ContractInfo_LegalObligaitonDueAmount').css('border-color', 'red'); } else { $('#ContractInfo_LegalObligaitonDueAmount').css('border-color', ''); }

    }



</script>
<script>
    $(function (){

        $(".edit-planinfo").attr("disabled", "disabled");
        $(".edit-planinfo").attr("readonly", "readonly");

        $(".edit-feeinfo").attr("disabled", "disabled");
        $(".edit-feeinfo").attr("readonly", "readonly");

        

        $(".edit-planinfo-tab2").attr("disabled", "disabled");


        $(".btneditinfo").hide();

        window.addEditFranchiseeFeeList = function(id){
            var url = '/Portal/Administration/AddEditFeeFourStep/'+id;
            $.get(url, function(data){                
                $('#modalEditMinFeedata').html(data);
                $('#modalEditMinFeedata').modal();
            });
        }
        window.removeFranchiseeFeeListWithId = function(Id){
            var url = '@Url.Action("DeleteFee", "Administration", new { area="Portal" })';
            url = url + "?Id=" + Id;
            $.ajax({
                type: "POST",
                url: url,
                //data: $("#form-add-franchiseefeelist").serialize(),
                success: function (result) {
                    LoadFranchiseeFeeList($("#BusinessInfo_FranchiseeId").val());
                },
                error: function (result) {
                    window.location.reload();
                }
            });
        }
    });



    $(document).ready(function () {

        var model = @Html.Raw(Json.Encode(ViewBag.GenralLedgers));
        console.log(model);
        $('#divfranchiseList').hide();

        //$('#generalFranchiseeList').DataTable({
        //    "paging":   false,
        //    "ordering": false,
        //    "info":     false,
        //    "bProcessing": true,
        //    "pageLength": 25,
        //    "dom": "<'table-responsive't><'bottom'ip><'clear'>"
        //});

        $('#divfranchiseList').show();

    });


</script>

<script type="text/javascript">
    $(function () {
        $(".edit-planinfo").attr("disabled", "disabled");
        $(".edit-planinfo").attr("readonly", "readonly");

        $(".edit-feeinfo").attr("disabled", "disabled");
        $(".edit-feeinfo").attr("readonly", "readonly");


        //$(".edit-minroyalty").attr("disabled", "disabled");
        //$(".edit-minroyalty").attr("readonly", "readonly");

        $(".edit-planinfo-tab2").attr("disabled", "disabled");

        $(".btneditinfo").hide();
        $(".trashdata").hide();
        $(".EditBtn").show();
        $(".SaveBtn").hide();
        $(".CancelBtn").hide();

        $('#btnEditPlanInfoCancel').click(function () {
            $(".edit-planinfo").attr("disabled", "disabled");
            $(".edit-planinfo").attr("readonly", "readonly");
            $(".edit-planinfo-tab2").attr("disabled", "disabled");
            $(".edit-feeinfo").attr("disabled", "disabled");


            $(".btneditinfo").hide();

            $("#btnEditPlanInfoSave").prop("disabled", "false");
            $("#btnEditPlanInfoSave").prop("readonly", "true");

            $("#btnEditPlanInfoCancel").prop("disabled", "false");
            $("#btnEditPlanInfoCancel").prop("readonly", "true");

            $(".EditBtn").show();
            $(".SaveBtn").hide();
            $(".CancelBtn").hide();

            if (@Model.ContractInfo != null) {
                $("#ContractInfo_DateSign").val(dateformat('@Model.ContractInfo.DateSign'));
                $("#ContractInfo_LastRenewedContractDate").val(dateformat('@Model.ContractInfo.LastRenewedContractDate'));
                $("#ContractInfo_Term").val('@Model.ContractInfo.Term');
                $("#ContractInfo_ExpireDate").val(dateformat('@Model.ContractInfo.ExpireDate'));
                $(".ddlFranchiseeContractTypeList").val('@Model.ContractInfo.FranchiseeContractTypeListId');
                $("#ContractInfo_Amount").val('@Model.ContractInfo.Amount');
                $("#ContractInfo_IBAmount").val('@Model.ContractInfo.IBAmount');
                $("#ContractInfo_DownPaymentAmount").val('@Model.ContractInfo.DownPaymentAmount');
                $("#ContractInfo_Interest").val('@Model.ContractInfo.Interest');
                $("#ContractInfo_MonthlyPaymentAmount").val('@Model.ContractInfo.MonthlyPaymentAmount');
                $("#ContractInfo_TotalPayments").val('@Model.ContractInfo.TotalPayments');
                $("#ContractInfo_DaysToFullfill").val('@Model.ContractInfo.DaysToFullfill');
            }
        });

        function dateformat(date) {
            var d = new Date(date);
            var curr_date = d.getDate();
            var curr_month = d.getMonth();
            curr_month++;
            var curr_year = d.getFullYear();
            var newdate = curr_month + "/" + curr_date + "/" + curr_year;
            return newdate;
        };

        $('#btnEditPlanInfoSave').click(function () {
            var isvalid = true;
            if ($('#ContractInfo_DateSign').val().trim() == '') { $('#ContractInfo_DateSign').css('border-color', 'red'); if (isvalid == true) { isvalid = false; }  } else { $('#ContractInfo_DateSign').css('border-color', ''); }
            if ($('#ContractInfo_LastRenewedContractDate').val().trim() == '') { $('#ContractInfo_LastRenewedContractDate').css('border-color', 'red'); if (isvalid == true) { isvalid = false; }  } else { $('#ContractInfo_LastRenewedContractDate').css('border-color', ''); }
            if ($('#ContractInfo_Term').val().trim() == '') { $('#ContractInfo_Term').css('border-color', 'red'); if (isvalid == true) { isvalid = false; }  } else { $('#ContractInfo_Term').css('border-color', ''); }
            if ($('#ContractInfo_ExpireDate').val().trim() == '') { $('#ContractInfo_ExpireDate').css('border-color', 'red'); if (isvalid == true) { isvalid = false; }  } else { $('#ContractInfo_ExpireDate').css('border-color', ''); }
            if ($('.ddlFranchiseeContractTypeList').val().trim() == '') { $('#ContractInfo_FranchiseeContractTypeListId').css('border-color', 'red');  if (isvalid == true) { isvalid = false; } } else { $('#ContractInfo_FranchiseeContractTypeListId').css('border-color', ''); }
            if ($('#ContractInfo_MonthlyPaymentAmount').val().trim() == '') { $('#ContractInfo_MonthlyPaymentAmount').css('border-color', 'red'); if (isvalid == true) { isvalid = false; }  } else { $('#ContractInfo_MonthlyPaymentAmount').css('border-color', ''); }
            if ($('#ContractInfo_TotalPayments').val().trim() == '') { $('#ContractInfo_TotalPayments').css('border-color', 'red'); if (isvalid == true) { isvalid = false; }  } else { $('#ContractInfo_TotalPayments').css('border-color', ''); }
            //if ($('#ContractInfo_StartDate').val().trim() == '') { $('#ContractInfo_StartDate').css('border-color', 'red'); if (isvalid == true) { isvalid = false; }  } else { $('#ContractInfo_StartDate').css('border-color', ''); }
            //if ($('#ContractInfo_TriggerAmount').val().trim() == '') { $('#ContractInfo_TriggerAmount').css('border-color', 'red'); if (isvalid == true) { isvalid = false; }  } else { $('#ContractInfo_TriggerAmount').css('border-color', ''); }
            //if ($('#ContractInfo_LegalObligationStartDate').val().trim() == '') { $('#ContractInfo_LegalObligationStartDate').css('border-color', 'red'); if (isvalid == true) { isvalid = false; }  } else { $('#ContractInfo_LegalObligationStartDate').css('border-color', ''); }
            //if ($('#ContractInfo_LegalObligationEndDate').val().trim() == '') { $('#ContractInfo_LegalObligationEndDate').css('border-color', 'red'); if (isvalid == true) { isvalid = false; }  } else { $('#ContractInfo_LegalObligationEndDate').css('border-color', ''); }
            //if ($('#ContractInfo_LegalObligaitonDueAmount').val().trim() == '') { $('#ContractInfo_LegalObligaitonDueAmount').css('border-color', 'red'); if (isvalid == true) { isvalid = false; }  } else { $('#ContractInfo_LegalObligaitonDueAmount').css('border-color', ''); }

            if (isvalid == true) {

                $.blockUI()
                $.ajax({
                    url: '@Url.Action("SaveFranchiseFourStepPopup", "Franchise", "Portal")',
                    type: "POST",
                    data: $('#form_wizard_fourstep').serialize(),
                    success: function (res) {
                        $.unblockUI();

                        $(".edit-planinfo").attr("disabled", "disabled");
                        $(".edit-planinfo").attr("readonly", "readonly");
                        $(".edit-planinfo-tab2").attr("disabled", "disabled");
                        $(".edit-feeinfo").attr("disabled", "disabled");

                       
                        $(".btneditinfo").hide();

                        $("#btnEditPlanInfoSave").prop("disabled", "false");
                        $("#btnEditPlanInfoSave").prop("readonly", "true");

                        $("#btnEditPlanInfoCancel").prop("disabled", "false");
                        $("#btnEditPlanInfoCancel").prop("readonly", "true");

                        $(".EditBtn").show();
                        $(".SaveBtn").hide();
                        $(".CancelBtn").hide();
                        loadFranchisee(@Model.BusinessInfo.FranchiseeId);
                    },
                    error: function () { $.unblockUI() }
                });

                //$('#btnSubmit').click();
            }
        });

        $('#btnEditFeeConfigurationCancel').click(function () {
            $(".edit-planinfo").attr("disabled", "disabled");
            $(".edit-planinfo").attr("readonly", "readonly");
            $(".edit-planinfo-tab2").attr("disabled", "disabled");
            $(".edit-feeinfo").attr("disabled", "disabled");

            $(".trashdata").hide();

            $(".btneditinfo").hide();

            $("#btnEditFeeConfigurationSave").prop("disabled", "false");
            $("#btnEditFeeConfigurationSave").prop("readonly", "true");

            $("#btnEditFeeConfigurationCancel").prop("disabled", "false");
            $("#btnEditFeeConfigurationCancel").prop("readonly", "true");

            $(".EditBtn").show();
            $(".SaveBtn").hide();
            $(".CancelBtn").hide();
            $("#_Add").hide();

            var ffci = @((int)ViewBag.lsFranchiseeFeeConfigurationInfoCount);
            for (var i = 1; i <= ffci; i++)
            {
                $("#MinimumAmount_" + i).val($("#MinimumAmountOld_" + i).val());
                $("#EffectiveDate_" + i).val($("#EffectiveDateOld_" + i).val());
            }
        });

        $('#btnEditFeeConfigurationSave').click(function () {
            var isvalid = true;
            var _itemList =  [];
            $(".trclsfrancon").each(function(){

                var _RId = $(this).attr("rel");
                var _FId = 0;
                var _MinimumAmount = 0;
                var _EffectiveDate = "";

                if($("#hdn_"+_RId).val() != null && $("#hdn_"+_RId).val() != "")
                {
                    _FId = $("#hdn_"+_RId).val();
                }
                if($("#MinimumAmount_"+_RId).val() != null && $("#MinimumAmount_"+_RId).val() != "")
                {
                    $('#MinimumAmount_'+_RId).css('border-color', '');
                    _MinimumAmount = $('#MinimumAmount_'+_RId).val();
                }
                else
                {
                    $('#MinimumAmount_'+_RId).css('border-color', 'red');
                    if (isvalid == true) { isvalid = false; }
                }
                if($("#EffectiveDate_"+_RId).val() != null && $("#EffectiveDate_"+_RId).val() != "")
                {
                    $('#EffectiveDate_'+_RId).css('border-color', '');
                    _EffectiveDate = $('#EffectiveDate_'+_RId).val();
                }
                else
                {
                    $('#EffectiveDate_'+_RId).css('border-color', 'red');
                    if (isvalid == true) { isvalid = false; }
                }
                var _temData = {FeeConfigurationId: _FId ,MinimumAmount:_MinimumAmount ,EffectiveDate:_EffectiveDate}
                _itemList.push(_temData);
            })

            //var _temData2 = {FeeConfigurationId: 1,MinimumAmount:300,EffectiveDate:'10/20/018'}
            //_itemList .push(_temData2);


            //var FeeConfigurationInfoId= 0;
            //if ($('#FranchiseeFeeConfigurationInfo_MinimumAmount').val().trim() == '') { $('#FranchiseeFeeConfigurationInfo_MinimumAmount').css('border-color', 'red'); if (isvalid == true) { isvalid = false; }  } else { $('#FranchiseeFeeConfigurationInfo_MinimumAmount').css('border-color', ''); }
            //if ($('#FranchiseeFeeConfigurationInfo_EffectiveDate').val().trim() == '') { $('#FranchiseeFeeConfigurationInfo_EffectiveDate').css('border-color', 'red'); if (isvalid == true) { isvalid = false; }  } else { $('#FranchiseeFeeConfigurationInfo_EffectiveDate').css('border-color', ''); }

            if (isvalid == true) {
                //if($('#FranchiseeFeeConfigurationInfo_FeeConfigurationId').val() != undefined && $('#FranchiseeFeeConfigurationInfo_FeeConfigurationId').val() != null)
                //{
                //    FeeConfigurationInfoId =$("#FranchiseeFeeConfigurationInfo_FeeConfigurationId").val();
                //}
                //var MinimumAmoun = $('#FranchiseeFeeConfigurationInfo_MinimumAmount').val();
                //var EffectiveDate = $('#FranchiseeFeeConfigurationInfo_EffectiveDate').val();
                //var ClassId = $("#BusinessInfo_FranchiseeId").val();
                //var odata ={FeeConfigurationInfoId:FeeConfigurationInfoId,ClassId:ClassId, MinimumAmoun:MinimumAmoun,EffectiveDate:EffectiveDate,strJsonList:JSON.stringify(_itemList)};

                var ClassId = $("#BusinessInfo_FranchiseeId").val();
                var odata ={FeeConfigurationInfoId:0, ClassId:ClassId, MinimumAmoun:"", EffectiveDate:"", strJsonList:JSON.stringify(_itemList)};
                var sURL = '@Url.Action("SaveFeeConfigurationData", "Franchise", new { area = "Portal" })';
                $.ajax({
                    type: "GET",
                    url: sURL,
                    data:odata,
                    contentType: "application/json; charset=utf-8",
                    datatype: "json",
                    success: function (data) {
                        OpenEditFranchisePlanInfoPopup(ClassId);
                        //if(data!= null)
                        //{
                        //    $("#FranchiseeFeeConfigurationInfo_FeeConfigurationId").val(data);
                        //}
                        $(".edit-planinfo-tab2").attr("disabled", "disabled");
                        $(".EditBtn").show();
                        $(".SaveBtn").hide();
                        $(".CancelBtn").hide();
                        $(".trashdata").hide();
                    },
                    error: function () {
                        alert("Content load failed.");
                    }
                });


            }
        });

        $('#btnEditFeeInfoCancel').click(function () {

            $(".edit-planinfo").attr("disabled", "disabled");
            $(".edit-planinfo").attr("readonly", "readonly");
            $(".edit-planinfo-tab2").attr("disabled", "disabled");
            $(".edit-feeinfo").attr("disabled", "disabled");
            $(".edit-feeinfo").attr("readonly", "readonly");

            $(".btneditinfo").hide();

            $(".EditBtn").show();
            $(".SaveBtn").hide();
            $(".CancelBtn").hide();

        });

    });

    function EditfunctionPlanInfo(){

        $(".edit-planinfo").removeAttr("disabled").removeAttr("readonly");
        $(".edit-planinfo-tab2").attr("disabled", "disabled");
        $(".edit-feeinfo").attr("disabled", "disabled");

        $("#btnEditPlanInfoSave").removeAttr("disabled");
        $("#btnEditPlanInfoCancel").removeAttr("disabled");
        //$(".btneditinfo").show();

        $(".EditBtn").show();
        $(".SaveBtn").hide();
        $(".CancelBtn").hide();

        $("#btnEditPlanInfo").hide();
        $("#btnEditPlanInfoSave").show();
        $("#btnEditPlanInfoCancel").show();
    }

    function EditfunctionFeeInfo(){

        $(".edit-feeinfo").removeAttr("disabled");
        $(".edit-feeinfo").removeAttr("readonly");
        $(".edit-planinfo-tab2").attr("disabled", "disabled");
        $(".edit-planinfo").attr("disabled", "disabled");

        $("#addnewfree").show();

        $(".EditBtn").show();
        $(".SaveBtn").hide();
        $(".CancelBtn").hide();

        $(".btneditinfo").show()
        $("#btnEditFeeInfo").hide();
        $("#btnEditFeeInfoCancel").show()
    }

    function loadFranchisee(Id) {
         $.blockUI();

        $.ajax({

            type: "GET",
            url: '@Url.Action("GetFranchiseeLoad", "Franchise", new { @area = "Portal" })?id=' + Id,
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (response) {
                $('#detailinfo').html(response);
                $.unblockUI();
            },
            error: function (xhr, textStatus, error) {
                if (typeof console == "object") {

                    $('#detailinfo').html(xhr.responseText);
                    console.log(xhr.status + "," + xhr.responseText + "," + textStatus + "," + error);
                }
                $.unblockUI();
            }
        });

        $.unblockUI();
    }


    function EditfunctionFeeConfiguration(){
        $(".edit-planinfo").attr("disabled", "disabled");
        $(".edit-planinfo-tab2").removeAttr("disabled").removeAttr("readonly");
        $(".edit-feeinfo").attr("disabled", "disabled");

        $("#btnEditFeeConfigurationSave").removeAttr("disabled");
        $("#btnEditFeeConfigurationCancel").removeAttr("disabled");
        $(".btneditinfo").hide();
        $(".trashdata").show();
        $(".EditBtn").show();
        $(".SaveBtn").hide();
        $(".CancelBtn").hide();
        $(".trashdata").show()
        $("#_Add").show();

        $("#btnEditFeeConfiguration").hide();
        $("#btnEditFeeConfigurationSave").show();
        $("#btnEditFeeConfigurationCancel").show();
    }

    //function EditMinimumRoyalty(){

    //    $(".edit-minroyalty").removeAttr("disabled").removeAttr("readonly");
    //    $("#btnMinimumRoyaltySave").removeAttr("disabled");
    //    $("#btnMinimumRoyaltyCancel").removeAttr("disabled");
    //   // $(".btneditinfo").show();

    //    //$(".EditBtn").show();
    //    //$(".SaveBtn").hide();
    //    //$(".CancelBtn").hide();

    //    $("#btnMinimumRoyaltyEdit").hide();
    //    $("#btnMinimumRoyaltySave").show();
    //    $("#btnMinimumRoyaltyCancel").show();
    //}

    function LoadFranchiseeFeeList(Id)
    {
        //tblFranchiseeFeeList

        $.ajax({
            type: "GET",
            url: "/Portal/Administration/GetFranchiseeFeeList",
            data: { Id: Id },
            success: function (result) {

                if (result.Data != ""  && result.Data.length > 0)
                {
                    var strHtml = "";
                    for (var i = 0; i < result.Data.length ; i++) {
                        strHtml += "<tr>";
                        strHtml += "<td style='width:275px;'>" + result.Data[i].FranchiseeFeeList.Name;
                        strHtml += "</td>";
                        strHtml += "<td style='width:90px;text-align:center;'>" + result.Data[i].FeeRateTypeList.Rate;
                        strHtml += "</td>";
                        strHtml += "<td style='width:70px;text-align:center;'>" + result.Data[i].FeesList.Amount;
                        strHtml += "</td>";
                        strHtml += "<td style='text-align:center;width:70px;'>";

                        if (result.Data[i].FeesList.IsActive == true) {
                            strHtml += "<span>Active</span>";
                        }
                        else {
                            strHtml += "<span>Inactive</span>";
                        }
                        strHtml += "</td>";
                        strHtml += "<td style='text-align:center;width:200px;'>"
                        strHtml += "<button type='button' class='btn-success edit-feeinfo btneditinfo' onclick='addEditFranchiseeFeeList(" + result.Data[i].FeesList.FranchiseeFeeId + ")'><span class='hidden-sm hidden-xs'>Edit&nbsp;</span></button>&nbsp;";
                        strHtml += "<button type='button' class='btn-success edit-feeinfo btneditinfo' onclick='removeFranchiseeFeeListWithId(" + result.Data[i].FeesList.FranchiseeFeeId + ")'><span class='hidden-sm hidden-xs'>Remove&nbsp;</span></button>";
                        strHtml += " </td>";
                        strHtml += "</tr>";
                    }
                    $("#tblFranchiseeFeeList").html(strHtml);
                }
                else{
                    $("#tblFranchiseeFeeList").html("");
                }
            },
            error: function (result) {
                //window.location.reload();
            }

        });
    }

    function OnChangeClickEvent()
    {
        var Id = $(".ddlFranchiseeContractTypeList").val();
        if(Id != "")
        {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetFranchiseeContractTypeList", "Franchise")',
                data: { Id: Id },
                success: function (result) {
                    if(result!= null)
                    {
                        $("#ContractInfo_Amount").val(result[0].Price);
                        $("#ContractInfo_IBAmount").val(result[0].BusinessAmount);
                        $("#ContractInfo_DownPaymentAmount").val(result[0].DownPayment);
                        $("#ContractInfo_Interest").val(result[0].Interest);
                        $("#ContractInfo_TotalPayments").val(result[0].NoOfPayments);
                        $("#ContractInfo_DaysToFullfill").val(result[0].DaysToFullfill);
                    }
                }
            });
        }
    }

    function TermOnchangeEvent()
    {
        var TermYear = $("#ContractInfo_Term").val();
        var startdate = $("#ContractInfo_LastRenewedContractDate").val();

        //var monthadd = $("#Contract_ContractTermMonth").val();
        if (TermYear != null && TermYear != "" && startdate != null && startdate != "") {

            var contractstartdate = new Date(startdate);

            if (TermYear == "")
                TermYear = 0;

            //contractstartdate.setMonth(contractstartdate.getYear() + parseInt(TermYear));
            contractstartdate.setYear(contractstartdate.getFullYear() + parseInt(TermYear));
            var c = (contractstartdate.getMonth() + 1) + '/' + contractstartdate.getDate() + '/' + contractstartdate.getFullYear()

            $("#ContractInfo_ExpireDate").val(c);
        }
    }
    function AddnewRowData()
    {
        RowNo =  parseInt($("#hdnrno").val()) + 1 ;
        $("#hdnrno").val(RowNo);

        var strHTML='<tr class="trclsfrancon" id="tr_' + RowNo + '" rel='+RowNo+' >';
        strHTML+='<td width="45%">';
        strHTML+='<div class="form-group">';
        strHTML+='<input type="text" id="MinimumAmount_'+ RowNo +'" value="" class="form-control input-sm edit-planinfo-tab2" placeholder="Minimum Royalty" >';
        strHTML+='</div>';
        strHTML+='<td width="45%">';
        strHTML+='<div class="form-group">';
        strHTML+='<input type="text" id="EffectiveDate_'+ RowNo +'" value="" class="form-control input-sm date-picker edit-planinfo-tab2" placeholder="Effective Date" >';
        strHTML+='</div>';
        strHTML+='</td>';
        strHTML+='<td>';
        strHTML+='<a style="font-size: 16px;padding: 8px;" href="#" onclick="RemoveRowData('+ RowNo +')"><i class="fa fa-trash" aria-hidden="true"></i></a>';
        strHTML+='</td>';

        $('#tblFranchiseeFeeConfiguration').append(strHTML);
        $("#EffectiveDate_"+RowNo).datepicker({ autoclose: true ,dateFormat: 'mm/dd/yy'});
        maskCurrency1('MinimumAmount_' + RowNo);
    }
    function RemoveRecordRowData(rno,Id)
    {
        $("#tr_"+rno).remove();
        $.ajax({
            type: "GET",
            url: '@Url.Action("RemoveFeeConfigurationRecord", "Franchise", new { area = "Portal" })',
            data: { Id: Id },
            success: function (result) {
            }
        });

    }
    function RemoveRowData(rno)
    {
        $("#tr_"+rno).remove();
    }

</script>