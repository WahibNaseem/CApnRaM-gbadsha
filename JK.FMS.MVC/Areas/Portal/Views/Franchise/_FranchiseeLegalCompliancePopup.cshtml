@model JKViewModels.Franchisee.FranchiseeFullfillmentViewModel

 @section styles{
    <style type="text/css">
        .smallform {
            width: 1000px !important;
            margin-left: 190px;
        }
    </style>
} 
<div class="custom-form portlet light smallform" id="" style="margin-top:0px !important;">
    <div class="headerbox">
        Legal Compliance Information
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true" style="margin-top: 5px !important;margin-right: 12px !important;"></button>
    </div>
    <div class="portlet-body">
        <div class="tab-pane" style="padding: 0px 15px 15px 15px;">
            @using (Html.BeginForm("SaveLegalCompliancetInfo", "Franchise", FormMethod.Post, new { @id = "form_wizard_1", @role = "form", @class = "form form-horizontal smallform " }))
            { 
                @*@Html.HiddenFor(one => one.FranchiseeId)*@
                <input type="hidden" id="FranchiseeId" name="FranchiseeId" value="@ViewBag.FranchiseeId" />
                @Html.HiddenFor(one => one.FranchiseeFullfillmentId)
                <div class="tab-pane" id="tb_fr_page3">
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3">
                                Background Check
                                
                            </label>
                            <div class="col-md-3">
                                <div class="input-group date cal-btn" data-date-format="mm/dd/yyyy">
                                    <input type="text" id="txtBackgroundCheckDate" name="BackgroundCheckDate" class="form-control input-sm date-picker" value="@(Model != null ? Model.BackgroundCheckDate.HasValue? Model.BackgroundCheckDate.Value.ToString("MM-dd-yyyy") : string.Empty : string.Empty)" />
                                    <span class="input-group-btn">
                                        <button class="btn default cal-btn" type="button">
                                            <i class="fa fa-calendar"></i>
                                        </button>
                                    </span>
                                </div>
                            </div>
                            <label class="control-label col-md-3">
                                Business Protection
                                
                            </label>
                            <div class="col-md-3">
                                <div class="input-group date" data-date-format="mm/dd/yyyy">
                                    <input id="txtBusinessProtectionDate" name="BusinessProtectionDate" class="form-control input-sm date-picker" value="@(Model != null ? Model.BusinessProtectionDate.HasValue? Model.BusinessProtectionDate.Value.ToString("MM-dd-yyyy") : string.Empty : string.Empty)"  />
                                    <span class="input-group-btn cal-btn">
                                        <button class="btn default" type="button">
                                            <i class="fa fa-calendar"></i>
                                        </button>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3">
                                Business License
                                
                            </label>
                            <div class="col-md-3">
                                <div class="input-group date" data-date-format="mm/dd/yyyy">
                                    <input id="txtBusinessLicenseDate" name="BusinessLicensedate"  class="form-control input-sm date-picker" value="@(Model != null ? Model.BusinessLicensedate.HasValue? Model.BusinessLicensedate.Value.ToString("MM-dd-yyyy") : string.Empty : string.Empty)" />
                                    <span class="input-group-btn cal-btn">
                                        <button class="btn default" type="button">
                                            <i class="fa fa-calendar"></i>
                                        </button>
                                    </span>
                                </div>
                            </div>
                            <label class="control-label col-md-3">
                                Equipment & Supply
                                
                            </label>
                            <div class="col-md-3">
                                <div class="input-group date" data-date-format="mm/dd/yyyy">
                                    <input id="txtEquipmentAndSupplyDate" name="EquipmentAndSupplyDate" class="form-control input-sm date-picker" value="@(Model != null ? Model.EquipmentAndSupplyDate.HasValue? Model.EquipmentAndSupplyDate.Value.ToString("MM-dd-yyyy") : string.Empty : string.Empty)"  />
                                    <span class="input-group-btn cal-btn">
                                        <button class="btn default" type="button">
                                            <i class="fa fa-calendar"></i>
                                        </button>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group">
                            <label class="control-label col-md-3">
                                Training
                                
                            </label>
                            <div class="col-md-3">
                                <div class="input-group date" data-date-format="mm/dd/yyyy">
                                    <input id="txtTrainingDate" name="TrainingDate" class="form-control input-sm date-picker"  value="@(Model != null ? Model.TrainingDate.HasValue? Model.TrainingDate.Value.ToString("MM-dd-yyyy") : string.Empty : string.Empty)"/>
                                    <span class="input-group-btn cal-btn">
                                        <button class="btn default" type="button" style="margin-top: 3px;">
                                            <i class="fa fa-calendar"></i>
                                        </button>
                                    </span>
                                </div>
                            </div>                             
                            <div class="col-md-6">
                                <div class="input-group date" data-date-format="mm/dd/yyyy">                                    
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <input type="hidden" id="hdnFranchiseeId" value="9115">
                            <div class="col-md-2 control-label">
                                Note :
                            </div>
                            <div class="col-md-10 control-label">
                                <input type="hidden" id="hdnLegalComplianceStatuId" name="LegalComplianceStatuId" value="@ViewBag.LegalComplianceStatuId" />
                                <textarea class="form-control input-sm"  rows="3" name="LegalComplianceNote" id="txtLegalComplianceNote">@ViewBag.LegalComplianceNote</textarea>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <hr style="margin-top: 2px;margin-bottom: 1px;" />
                    </div>
                </div>
                 
                <div class="form-actions">
                    <div class="col-md-12" style="padding-bottom:10px;">
                        <button type="button" data-dismiss="modal" class="btn btn-primary button-next  pull-right" id="btncancel" >
                            Close
                            <i class="fa fa-close"></i>
                        </button> 
                        <button type="button" class="btn btn-primary pull-right" id="btnSave" style="margin-left: 10px;margin-right:10px;"  onclick="SaveUpdateRequestTemp()">
                            Submit
                            <i class="fa fa-check"></i>
                        </button>                     
                    </div>
                </div>
         }
        </div>
        <div style="clear:both"></div>
    </div>
</div>
<script>

    $(document).ready(function () {
        $(".input-group-btn").click(function () {
            $(this).prev().trigger("focus");
            $(this).prev().trigger("focus");
        });
        $('.date-picker').datepicker({ autoclose: true, dateFormat: 'mm/dd/yy' });
        $('.date-picker').attr("placeholder", "mm/dd/yyyy");
    });

    function SaveUpdateRequest() {

        var isValid = true;       
        if ($('#txtBackgroundCheckDate').val() == '') { $('#txtBackgroundCheckDate').css('border-color', 'red'); isValid = false; } else { $('#txtBackgroundCheckDate').css('border-color', ''); }
        if ($('#txtBusinessProtectionDate').val() == '') { $('#txtBusinessProtectionDate').css('border-color', 'red'); isValid = false; } else { $('#txtBusinessProtectionDate').css('border-color', ''); }
        if ($('#txtBusinessLicenseDate').val() == '') { $('#txtBusinessLicenseDate').css('border-color', 'red'); isValid = false; } else { $('#txtBusinessLicenseDate').css('border-color', ''); }
        if ($('#txtEquipmentAndSupplyDate').val() == '') { $('#txtEquipmentAndSupplyDate').css('border-color', 'red'); isValid = false; } else { $('#txtEquipmentAndSupplyDate').css('border-color', ''); }
        if ($('#txtTrainingDate').val() == '') { $('#txtTrainingDate').css('border-color', 'red'); isValid = false; } else { $('#txtTrainingDate').css('border-color', ''); }
        if ($('#txtLegalComplianceNote').val() == '') { $('#txtLegalComplianceNote').css('border-color', 'red'); isValid = false; } else { $('#txtLegalComplianceNote').css('border-color', ''); }

        if (isValid) {
            var Id = $("#FranchiseeId").val();
            if (Id > 0) {

                $.ajax({
                    url: '@Url.Action("UpdateLegalComplianceDetail", "Franchise", new { area = "Portal" })',
                    type: "POST",
                    data: $('#form_wizard_1').serialize(),
                    success: function (res) {                       
                        if (res != "") {
                            $('#ModalFranchiseeLegalCompliancePopup').modal("hide");
                        }
                    },
                    error: function () { }
                });                  
            }
        }
    }

    function SaveUpdateRequestTemp() {

        var isValid = true;
        //if ($('#txtBackgroundCheckDate').val() == '') { $('#txtBackgroundCheckDate').css('border-color', 'red'); isValid = false; } else { $('#txtBackgroundCheckDate').css('border-color', ''); }
        //if ($('#txtBusinessProtectionDate').val() == '') { $('#txtBusinessProtectionDate').css('border-color', 'red'); isValid = false; } else { $('#txtBusinessProtectionDate').css('border-color', ''); }
        //if ($('#txtBusinessLicenseDate').val() == '') { $('#txtBusinessLicenseDate').css('border-color', 'red'); isValid = false; } else { $('#txtBusinessLicenseDate').css('border-color', ''); }
        //if ($('#txtEquipmentAndSupplyDate').val() == '') { $('#txtEquipmentAndSupplyDate').css('border-color', 'red'); isValid = false; } else { $('#txtEquipmentAndSupplyDate').css('border-color', ''); }
        //if ($('#txtTrainingDate').val() == '') { $('#txtTrainingDate').css('border-color', 'red'); isValid = false; } else { $('#txtTrainingDate').css('border-color', ''); }
        //if ($('#txtLegalComplianceNote').val() == '') { $('#txtLegalComplianceNote').css('border-color', 'red'); isValid = false; } else { $('#txtLegalComplianceNote').css('border-color', ''); }

        if (isValid) {
            var Id = $("#FranchiseeId").val();
            if (Id > 0) {

                $.ajax({
                    url: '@Url.Action("UpdateLegalComplianceDetailTemp", "Franchise", new { area = "Portal" })',
                    type: "POST",
                    data: $('#form_wizard_1').serialize(),
                    success: function (res) {
                        if (res != "") {
                            $('#ModalFranchiseeLegalCompliancePopup').modal("hide");
                        }
                    },
                    error: function () { }
                });
            }
        }
    }

</script>