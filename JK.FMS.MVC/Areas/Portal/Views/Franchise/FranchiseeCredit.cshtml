@model JKViewModels.Franchise.FranchiseeTransactionViewModel
@{
    ViewBag.Title = "Franchisee Credit Transaction";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .pad-right {
        padding-right: 0px;
    }

    #divNewTransaction .input-sm {
        padding: 3px 3px !important;
    }

    .error-franchise-select {
        color: red;
    }
</style>

<form action="@Url.Action("PartialFranchiseeCredit", "Franchise", new { area = "Portal" })" method="post" id="form_FranchiseeTrasaction">
    @Html.HiddenFor(o => o.FranchsieeTrxTypeListId);
    <div class="form form-horizontal" id="divNewTransaction">
        <div class="custom-form portlet light">
            <div class="headerbox">
                <div class="row">
                    <div class="col-md-12">
                        Franchisee Credit Transaction
                    </div>
                </div>
            </div>
            <div class="portlet-body form">
                <div class="form-body">
                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="col-md-offset-2 col-md-2 control-label">
                                    <label>Transaction For</label>
                                </div>
                                <div class="col-md-5">
                                    <div class="ui-widget">
                                        <div class="input-icon right input-sm">
                                            <i class="icon-magnifier" style="margin-top: 1px; margin-right: 28px;"></i>
                                            <input id="input_Search" type="text" required name="customernumber" autocomplete="off" placeholder="Search Franchisee Name or Number" value="" class="form-control input-sm typeahead" style="margin-top: -5px;margin-left: -22px;" />
                                            @Html.HiddenFor(o => o.FranchiseeId, new { @class = "form-control input-sm date-picker", required = "required", id = "hdfFranchiseeId" })
                                            <input type="hidden" name="hdfTaxRate" id="hdfTaxRate" value="" />
                                            <input type="hidden" name="hdfSaveClose" id="hdfSaveClose" value="" />
                                        </div>
                                        <div id="container">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <br />
                            <div class="error-franchise-select"></div>
                        </div>
                    </div>
                    <hr />
                    <div class="form-group" style="border:1px solid #999999;">
                        <div class="form-group">
                            <div class="col-md-2 control-label" style="padding-top: 0px;">
                                Franchisee No.:
                            </div>
                            <div class="col-md-3">
                                <span id="spnFranchiseeNumber"></span>
                            </div>
                            <div class="col-md-offset-2 col-md-2 control-label" style="padding-top: 0px;">
                                Address:
                            </div>
                            <div class="col-md-3">
                                <span id="spnFranchiseeAddress"></span>
                            </div>
                        </div>
                        <div class="form-group">

                            <div class="col-md-2 control-label" style="padding-top: 0px;">
                                Franchisee Name:
                            </div>
                            <div class="col-md-3">
                                <span id="spnFranchiseeName"></span>
                            </div>
                            <div class="col-md-offset-4 col-md-3">
                                <span id="spnFranchiseeCityStatePincode"></span>
                            </div>
                        </div>
                    </div>
                    <div class="form-group" style="border:1px solid #3598dc;padding-left: 0px;padding-right: 0px;">
                        <div class="form-group">
                            <div class="col-md-12">
                                <div class="col-md-2 control-label pad-right">

                                </div>
                                <div class="col-md-4">
                                    <div class="input-group">
                                        <div class="icheck-inline" style="margin-top: 0px;">
                                            <label class="check-inline" style="margin-top: 6px;margin-right: 35px;">
                                                @*@Html.RadioButtonFor(o => o.FranchsieeTrxTypeListId, new { @name = "membership1", @value = "1", @class = "i-checks rdoCredit", @checked = "checked" })*@
                                                <input type="radio" class="i-checks rdoCredit" name="membership1" id="rdoCredit" value="1" checked />
                                                <span>Credit</span>
                                            </label>
                                            <label class="check-inline" style="margin-top: 6px;">
                                                @*@Html.RadioButtonFor(o => o.FranchsieeTrxTypeListId, new { @name = "membership1", @value = "3", @class = "i-checks rdoPayment" })*@
                                                <input type="radio" class="i-checks rdoPayment" id="rdoPayment" name="membership1" value="3" />
                                                <span>Payment</span>
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12">
                                <div class="col-md-1 control-label pad-right">

                                </div>
                                <div class="col-md-2">
                                    <select class=" form-control input-sm" id="ddlSelect">
                                        <option value="0">Select</option>
                                        <option value="1">Single</option>
                                        <option value="2">Recurring</option>
                                    </select>
                                    @*<div class="input-group">
                                            <div class="icheck-inline" style="margin-top: 0px;">
                                                <label class="check-inline" style="margin-top: 6px;margin-right: 35px;">
                                                    <input type="radio" name="membership" value="1" class="i-checks" id="rdoSingle" />
                                                    <span>Single</span>
                                                </label>

                                                <label class="check-inline" style="margin-top: 6px;">
                                                    <input type="radio" name="membership" value="0" class="i-checks" id="rdoRecurring" />
                                                    <span>Recurring</span>
                                                </label>
                                            </div>
                                        </div>*@
                                </div>
                                <div class="col-md-1 control-label pad-right">
                                    Date:
                                </div>
                                <div class="col-md-2">
                                    <div class="col-md-12 input-group date" data-date-format="mm/dd/yyyy">
                                        @Html.TextBoxFor(o => o.TransactionDate, new { @class = "form-control input-sm date-picker", required = "required" })
                                        <span class="input-group-btn cal-btn">
                                            <button class="btn default" type="button" style="margin-top: 3px;">
                                                <i class="fa fa-calendar"></i>
                                            </button>
                                        </span>
                                    </div>
                                </div>
                                <div id="divPayment">
                                    <div class="col-md-1 control-label pad-right" style="padding-right:0px;">
                                        PaymentNo.
                                    </div>
                                    <div class="col-md-2">
                                        @Html.TextBoxFor(o => o.PaymentNo, new { @class = "form-control input-sm" })
                                    </div>
                                </div>
                            </div>


                        </div>
                        @*<div class="form-group">
                                <div class="col-md-12">
                                    <div class="col-md-1 control-label pad-right">
                                        Date:
                                    </div>
                                    <div class="col-md-2">
                                        <div class="col-md-12 input-group date" data-date-format="mm/dd/yyyy">
                                            @Html.TextBoxFor(o => o.TransactionDate, new { @class = "form-control input-sm date-picker", required = "required" })
                                            <span class="input-group-btn cal-btn">
                                                <button class="btn default" type="button" style="margin-top: 3px;">
                                                    <i class="fa fa-calendar"></i>
                                                </button>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>*@
                        <div id="divbelow">
                            <div class="form-group" id="divRecNP">
                                <div class="col-md-12">
                                    <div class="col-md-1 control-label" style="padding-left: 0px;padding-right: 0px;">
                                        No of Payment:
                                    </div>
                                    <div class="col-md-1">
                                        @Html.TextBoxFor(o => o.NumOfPayments, new { @class = "form-control input-sm", maxlength = 3, onchange = "CalculateAmount()" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    <div class="col-md-1 control-label pad-right">
                                        Type:
                                    </div>
                                    <div class="col-md-2">
                                        @Html.DropDownListFor(model => model.ServiceTypeListId, (SelectList)ViewBag.ServiceTypeList, "Select", new { @class = "form-control input-sm" })
                                    </div>
                                    @*<div class="col-md-1">
                                            @Html.CheckBoxFor(model => model.ReSell, new { @id = "chkResale" }) ReSell
                                        </div>*@
                                    <div class="col-md-1 control-label pad-right">
                                        Reason:
                                    </div>
                                    <div class="col-md-2">
                                        @Html.DropDownListFor(model => model.FranchiseeManualTrxCreditReasonListId, (SelectList)ViewBag.ReasonList, "Select", new { @class = "form-control input-sm", @id = "select_ReasonList", required = "required" })
                                        @*@Html.DropDownList("slReasonList", (SelectList)ViewBag.ReasonList, "-Select-", new { @class = "form-control input-sm", @id = "select_ReasonList", required = "required", oninvalid = "setCustomValidity('Please Select Reason.')", oninput = "setCustomValidity('')" })*@
                                    </div>
                                </div>
                            </div>
                            <div id="divAfterType">
                                @*<div class="form-group" id="divRecVL">
                                        <div class="col-md-12">
                                            <div class="col-md-1 control-label pad-right">
                                                Vendor:
                                            </div>
                                            <div class="col-md-3">
                                                @Html.DropDownListFor(model => model.VendorId, (SelectList)ViewBag.VendorList, "Select", new { @class = "form-control input-sm" })
                                            </div>
                                            <div class="col-md-2 control-label pad-right">
                                                Vendor Invoice No.<span style="color:red">*</span>:
                                            </div>
                                            <div class="col-md-2">
                                                @Html.TextBoxFor(o => o.VendorInvoiceNumber, new { @class = "form-control input-sm" })
                                            </div>
                                        </div>
                                    </div>*@
                                <div class="form-group" id="divRecVL">
                                    <div class="col-md-12">
                                        <div class="col-md-1 control-label pad-right">
                                            Vendor:
                                        </div>
                                        <div class="col-md-3">
                                            @Html.DropDownListFor(model => model.VendorCode, (SelectList)ViewBag.VendorList, "Select", new { @class = "form-control input-sm" })
                                        </div>
                                        <div class="col-md-2 control-label pad-right" style="width:135px">
                                            Vendor Invoice No.<span style="color:red">*</span>:
                                        </div>
                                        <div class="col-md-2" style="width:100px">
                                            @Html.TextBoxFor(o => o.VendorInvoiceNumber, new { @class = "form-control input-sm" })
                                        </div>
                                        <div class="col-md-2 control-label pad-right" style="width:140px">
                                            Vendor Invoice Date<span style="color:red">*</span>:
                                        </div>
                                        <div class="col-md-2">
                                            <div class="col-md-12 input-group date" data-date-format="mm/dd/yyyy">
                                                @Html.TextBoxFor(o => o.VendorInvoiceDate, new { @class = "form-control input-sm date-picker RemovePeriodvalidation", @readonly = "readonly", required = "required" })
                                                <span class="input-group-btn cal-btn">
                                                    <button class="btn default" type="button" style="margin-top: 3px;">
                                                        <i class="fa fa-calendar"></i>
                                                    </button>
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-12">
                                        <div class="col-md-1 control-label pad-right">
                                            Description<span style="color:red">*</span>:
                                        </div>
                                        <div class="col-md-9">
                                            @Html.TextBoxFor(o => o.Description, new { @class = "form-control input-sm", required = "required" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-12">
                                        <div class="col-md-1 control-label pad-right">
                                            Quantity<span style="color:red">*</span>:
                                        </div>
                                        <div class="col-md-1">
                                            @Html.TextBoxFor(o => o.Quantity, new { @class = "form-control input-sm", required = "required", onchange = "CalculateAmount()", maxlength = 3, @style = "width: 100px;" })
                                        </div>
                                        <div class="col-md-1 control-label pad-right">
                                            Item Amt<span style="color:red">*</span>:
                                        </div>
                                        <div class="col-md-1">
                                            @Html.TextBoxFor(o => o.ItemAmount, new { @class = "form-control input-sm", required = "required", onchange = "CalculateAmount()", maxlength = 12, @style = "width: 100px;" })
                                        </div>
                                        <div class="col-md-1 control-label pad-right">
                                            Sub-Total:
                                        </div>
                                        <div class="col-md-1">
                                            @Html.TextBoxFor(o => o.Subtotal, new { @class = "form-control input-sm", required = "required", @readonly = "readonly", @style = "width: 100px;" })
                                        </div>
                                        <div class="col-md-1 control-label pad-right" style="width:55px;">
                                            Tax:
                                        </div>
                                        <div class="col-md-1">
                                            @Html.TextBoxFor(o => o.Tax, new { @class = "form-control input-sm", required = "required", @readonly = "readonly", @style = "width: 100px;" })
                                        </div>
                                        <div class="col-md-1 control-label pad-right">
                                            Total:
                                        </div>
                                        <div class="col-md-1">
                                            @Html.TextBoxFor(o => o.Total, new { @class = "form-control input-sm", required = "required", @readonly = "readonly", @style = "width: 100px;" })
                                        </div>
                                    </div>
                                </div>

                                <hr style="margin-bottom: 0px;" />
                                <div class="form-group" id="divRec">
                                    <div class="col-md-12">
                                        <div class="col-md-1 control-label pad-right">
                                            @*Status:*@
                                        </div>
                                        <div class="col-md-2">
                                            @*@Html.DropDownListFor(model => model.StatusListId, (SelectList)ViewBag.StatusList, "Select", new { @class = "form-control input-sm" })*@
                                        </div>
                                        <div class="col-md-1 control-label pad-right">
                                            Start Date:
                                        </div>
                                        <div class="col-md-2">
                                            <div class="col-md-12 input-group date" data-date-format="mm/dd/yyyy">
                                                @Html.TextBoxFor(o => o.StartDate, new { @class = "form-control input-sm date-picker", required = "required" })
                                                <span class="input-group-btn cal-btn">
                                                    <button class="btn default" type="button" style="margin-top: 3px;">
                                                        <i class="fa fa-calendar"></i>
                                                    </button>
                                                </span>
                                            </div>
                                        </div>


                                        <div class="col-md-1 control-label pad-right" style="padding-left: 0px;padding-right: 0px;">
                                            Payments Billed:
                                        </div>
                                        <div class="col-md-1">
                                            @Html.TextBoxFor(o => o.PaymentsBilled, new { @class = "form-control input-sm", @readonly = "readonly" })
                                        </div>
                                        <div class="col-md-1 control-label pad-right">
                                            Gross Total:
                                        </div>
                                        <div class="col-md-1">
                                            @Html.TextBoxFor(o => o.GrossTotal, new { @class = "form-control input-sm", @readonly = "readonly" })
                                        </div>
                                        <br />
                                        <div class="row">
                                            <div class="row">
                                                <hr style="margin-bottom: 0px;" />
                                            </div>
                                        </div>

                                    </div>

                                </div>


                                <div class="form-group">
                                    <div class="col-md-12">
                                        <div class="col-md-2"> <input type="button" class="col-md-12 btn btn-primary button-next" value="Clear" id="btnClear" name="Clear" /></div>
                                        <div class="col-md-4"></div>
                                        <div class="col-md-2">
                                            <input type="button" class="col-md-12 btn btn-primary button-next" value="Save & New" id="btnSaveNew" name="SaveNew" />
                                        </div>
                                        <div class="col-md-2">
                                            <input type="button" class="col-md-12 btn btn-primary button-next" value="Save & Close" id="btnSaveClose" name="SaveClose" />
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div class="form-group">
                            <div class="col-md-12">
                                <div class="col-md-1"></div>
                                <div class="col-md-1"><input type="button" class="col-md-12 btn btn-primary button-next" value="Clear" id="btnClear1" name="Clear" /></div>
                                <div class="col-md-4"></div>
                                <div class="col-md-2"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

@section pageplugins{
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/select2/js/select2.full.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/jquery-validation/js/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/jquery-validation/js/additional-methods.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/bootstrap-wizard/jquery.bootstrap.wizard.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/jquery-inputmask/jquery.inputmask.bundle.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Content/admin/assets/global/plugins/bootstrap-typeahead/bootstrap3-typeahead.min.js")" type="text/javascript"></script>
}
@section scripts{

    <script>
        $(document).ready(function () {
            if ($('#rdoCredit').is(":checked")) {
                $("#divPayment").hide();
                $("#FranchsieeTrxTypeListId").val(1);
            }
            if ($('#rdoPayment').is(":checked")) {
                $("#divPayment").show();
                $("#FranchsieeTrxTypeListId").val(3);
            }


            $("#btnClear").click(function () {
                window.location.href = "/Portal/Franchise/AddNewTransaction";
            });
            $("#btnClear1").click(function () {
                window.location.href = "/Portal/Franchise/AddNewTransaction";
            });
            $(".input-group-btn").click(function () {
                $(this).prev().trigger("focus");
                $(this).prev().trigger("focus");
            });
            $("#divbelow").hide();
            $("#divAfterType").hide();
            $("#btnClear1").show();
            $("#ddlSelect").change(function () {
                $(".error-franchise-select").html('');
                var value = this.value;
                if (value == 0) {
                    cleanform()
                    $("#divbelow").hide();
                }
                if (value == 1) {
                    if ($("#spnFranchiseeNumber").text() == '') {
                        $(".error-franchise-select").html('Please select Franchise First.');
                        return;
                    }
                    cleanform()
                    $("#divbelow").show();
                    $("#divAfterType").hide();
                    $("#btnClear1").show();
                    $("#divRec").hide();
                    $("#divRecNP").hide();
                    $("#divRecVL").hide();
                }
                if (value == 2) {
                    if ($("#spnFranchiseeNumber").text() == '') {
                        $(".error-franchise-select").html('Please select Franchise First.');
                        return;
                    }
                    cleanform()
                    $("#divbelow").show();
                    $("#divRec").show();
                    $("#divRecNP").show();
                    $("#divRecVL").hide();
                    $("#divAfterType").hide();
                    $("#btnClear1").show();
                }

            });


            $("#ServiceTypeListId").change(function () {
                var value = this.value;
                if ($("#ddlSelect").val() != null && $("#ddlSelect").val() != 0 && value != "") {
                    $("#divAfterType").show();
                    $("#btnClear1").hide();
                }
                else {
                    $("#divAfterType").hide();
                    $("#btnClear1").show();
                }
                CalculateAmount();
            });

            $("#TransactionDate").datepicker("setDate", new Date());

            //$("#rdoSingle").prop("checked", true);
            $("#divRec").hide();
            $("#divRecNP").hide();
            $("#divRecVL").hide();
            applyMaskCurrency($("#ItemAmount"));
            applyMaskCurrency($("#Subtotal"));
            applyMaskCurrency($("#Total"));
            applyMaskCurrency($("#GrossTotal"));
            applyMaskCurrency($("#Tax"));
            applyMaskCurrency($("#PaymentsBilled"));
            //$("#rdoSingle").change(function () {
            //    if (this.value == 1) {
            //        $("#rdoSingle").prop("checked", true);
            //        $("#rdoRecurring").prop("checked", false);
            //        $("#divRec").hide();
            //        $("#divRecNP").hide();
            //        $("#divRecVL").hide();
            //    }
            //});

            //$("#rdoRecurring").change(function () {
            //    if (this.value == 0) {
            //        $("#rdoSingle").prop("checked", false);
            //        $("#rdoRecurring").prop("checked", true);
            //        $("#divRec").show();
            //        $("#divRecNP").show();
            //        $("#divRecVL").hide();
            //    }
            //});

            $('#ServiceTypeListId').change(function () {
                if (this.value == 18) {
                    $("#divRecVL").show();
                }
                else {
                    $("#divRecVL").hide();
                }
            });

            $('#chkResale').change(function () {
                if ($(this).is(":checked") || $('#ServiceTypeListId').val() != 18) {
                    CalculateAmount();
                }
                else {
                    CalculateAmount();
                }
            });


            @*$("#input_Search").keyup(function () {
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("FranchiseAutoComplete", "Franchise", new { area = "Portal" })',
                    data: 'keyword=' + $(this).val(),
                    success: function (data) {
                        var typeaheadSource = [];
                        $.each(data, function (key, value) {
                            typeaheadSource.push({ id: value.FranchiseeId, name: value.FranchiseeNo + ' ' + value.Name })
                        });

                        $('#input_Search').typeahead({
                            source: typeaheadSource,
                            updater: function (item) {
                                console.log(item);
                                $.ajax({
                                    type: "GET",
                                    url: '@Url.Action("FranchiseDetailAutoComplete", "Franchise", new { area = "Portal" })?franchiseid=' + item.id,
                                    success: function (res) {
                                        console.log(res);

                                        $('#hdfTaxRate').val(res.ContractTaxRate);
                                        $('#hdfFranchiseeId').val(res.FranchiseeId);
                                        $('#spnFranchiseeNumber').html(res.FranchiseeNo);
                                        $('#spnFranchiseeName').html(res.Name);
                                        $('#spnFranchiseeAddress').html(res.Address1);
                                        $('#spnFranchiseeCityStatePincode').html(res.City + ', ' + res.StateName + ' ' + res.PostalCode);
                                    }
                                });
                                return item;
                            }
                        });
                    }
                });
            });*@


            //applyMaskCurrency('#ItemAmount');
            OnlyNumber('#Quantity');
            OnlyNumber('#NumOfPayments');


        })

        $(".rdoCredit").change(function () {
            $("#divPayment").hide();
            $("#FranchsieeTrxTypeListId").val(1);
        });

        $(".rdoPayment").change(function () {
            $("#divPayment").show();
            $("#FranchsieeTrxTypeListId").val(3);
        });



        function cleanform() {
            $("#VendorId").val('')
            $("#NumOfPayments").val('');
            $("#ServiceTypeListId").val('');
            $("#Description").val('');
            $("#Quantity").val('');
            $("#VendorId").val('');
            $("#VendorInvoiceNumber").val('');
            $("#StartDate").val('');
            $("#ItemAmount").val('');
            $("#Subtotal").val('');
            $("#Total").val('');
            $("#Tax").val('');
            $("#PaymentsBilled").val('');
            $("#GrossTotal").val('');
        }

        function CalculateAmount() {
            var temptaxRate = $("#hdfTaxRate").val() == '' ? 0 : parseFloat($("#hdfTaxRate").val());
            var tempItemQuantity = $("#Quantity").val() == '' ? 0 : parseFloat($("#Quantity").val());
            var tempItemAmount = $("#ItemAmount").val() == '' ? 0 : parseFloat($("#ItemAmount").val());
            var tempSubtotal = $("#Subtotal");
            var tempTax = $("#Tax");
            var tempTotal = $("#Total");

            tempSubtotal.val(tempItemQuantity * tempItemAmount);
            tempTax.val(parseFloat(tempSubtotal.val()) * temptaxRate / 100)
            if ($('#chkResale').is(":checked") || $('#ServiceTypeListId').val() != 18) {
                tempTax.val(0);
            }

            tempTotal.val(parseFloat(tempSubtotal.val()) + parseFloat(tempTax.val()));

            if ($("#ddlSelect").val().trim() == 2) {
                $("#PaymentsBilled").val(tempTotal.val());
                $("#GrossTotal").val(parseFloat(tempTotal.val()) * parseInt($("#NumOfPayments").val()));
            }

            //applyMaskCurrency('#txtsubtotal');
            //applyMaskCurrency('#txttaxamount');
            //applyMaskCurrency('#txttotalamount');
        };
        //function onlyDecimal(id) {
        //    $(id).keydown(function (event) {
        //        if (event.shiftKey == true) { event.preventDefault(); }
        //        if ((event.keyCode >= 48 && event.keyCode <= 57) || (event.keyCode >= 96 && event.keyCode <= 105) || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 37 || event.keyCode == 39 || event.keyCode == 46 || event.keyCode == 190 || event.keyCode == 110) { }
        //        else { event.preventDefault(); }
        //        if ($(this).val().toString().indexOf('.') !== -1 && (event.keyCode == 190 || event.keyCode == 110)) event.preventDefault();
        //    });
        //}

        function applyAutoSeacrh() {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetAllFranchisees", "Franchise", new { area = "Portal" })',
                data: {},
                success: function (data) {
                    var typeaheadSource = [];
                    $.each(data, function (key, value) {
                        typeaheadSource.push({ id: value.FranchiseeId, name: value.FranchiseeNo + ' ' + value.Name })
                    });

                    $('#input_Search').typeahead({
                        source: typeaheadSource,
                        updater: function (item) {
                            $.ajax({
                                type: "GET",
                                url: '@Url.Action("FranchiseDetailAutoComplete", "Franchise", new { area = "Portal" })?franchiseid=' + item.id,
                                success: function (res) {
                                    console.log(res);

                                    $('#hdfTaxRate').val(res.ContractTaxRate);
                                    $('#hdfFranchiseeId').val(res.FranchiseeId);
                                    $('#spnFranchiseeNumber').html(res.FranchiseeNo);
                                    $('#spnFranchiseeName').html(res.Name);
                                    $('#spnFranchiseeAddress').html(res.Address1);
                                    $('#spnFranchiseeCityStatePincode').html(res.City + ', ' + res.StateName + ' ' + res.PostalCode);
                                }
                            });

                            return item;
                        }
                    }).focus();
                }
            });
        }
        applyAutoSeacrh();

        function OnlyNumber(id) {
            $(id).keydown(function (event) {
                if (event.shiftKey == true) { event.preventDefault(); }
                if ((event.keyCode >= 48 && event.keyCode <= 57) || (event.keyCode >= 96 && event.keyCode <= 105) || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 37 || event.keyCode == 39 || event.keyCode == 46) { }
                else { event.preventDefault(); }
            });
        }
        function applyMaskCurrency(id) {
            $(id).inputmask("currency", {
                alias: 'currency',
                prefix: '$ ',
                digits: 2,
                autoUnmask: true,
                removeMaskOnSubmit: true,
                unmaskAsNumber: true,
                allowPlus: false,
                allowMinus: false,
                autoGroup: true,
                groupSeparator: ",",
            });
        }

        $("#ServiceTypeListId").change(function () {
            FranchiseeSupplybyId($(this).val())
        });

        $("#btnSaveNew").click(function (e) {
            e.preventDefault();
            ValidateFranchiseTransaction($(this).attr('name'));

        });

        $("#btnSaveClose").click(function (e) {
            e.preventDefault();
            ValidateFranchiseTransaction($(this).attr('name'));

        });

        /* Validate Franchise Manual Transaction */

        function ValidateFranchiseTransaction(a) {

            var isValid = true;

            /*Transaction For*/
            if ($("#input_Search").val() != null && $("#input_Search").val().trim() == "") {

                $("#input_Search").css('border-color', 'red');
                $(window).scrollTop(10);
                if (isValid) {
                    isValid = false;
                }
            }
            else {
                $("#input_Search").css('border-color', '');
            }

            /* Type */
            if ($("#ServiceTypeListId").val() != null && $("#ServiceTypeListId").val().trim() == "") {
                $("#ServiceTypeListId").css('border-color', 'red');
                $(window).scrollTop(10);
                if (isValid) {
                    isValid = false;
                }
            }
            else {
                $("#ServiceTypeListId").css('border-color', '');
            }

            /* Description */
            if ($("#Description").val().trim() == "") {
                $("#Description").css('border-color', 'red');
                $(window).scrollTop(10);
                if (isValid) {
                    isValid = false;
                }
            }
            else {
                $("#Description").css('border-color', '');
            }

            /* if Type Franchise Supplies selected */
            if ($("#ServiceTypeListId").val() != null && $("#ServiceTypeListId").val().trim() == "18") {

                /* Vendor */
                if ($("#VendorId").val() == "") {
                    $("#VendorId").css('border-color', 'red');
                    $(window).scrollTop(10);
                    if (isValid) {
                        isValid = false;
                    }
                }
                else {
                    $("#VendorId").css('border-color', '');
                }

                /* Vendor Invoice No */
                if ($("#VendorInvoiceNumber").val() != null && $("#VendorInvoiceNumber").val().trim() == "") {
                    $("#VendorInvoiceNumber").css('border-color', 'red');
                    $(window).scrollTop(10);
                    if (isValid) {
                        isValid = false;
                    }
                }
                else {
                    $("#VendorInvoiceNumber").css('border-color', '');
                }


            }
            else {
                $("#VendorId").css('border-color', '');
                $("#VendorInvoiceNumber").css('border-color', '');
            }

            /* Quantity */
            if ($("#Quantity").val() != null && $("#Quantity").val().trim() == "") {
                $("#Quantity").css('border-color', 'red');
                $(window).scrollTop(10);
                if (isValid) {
                    isValid = false;
                }
            }
            else {
                $("#Quantity").css('border-color', '');
            }

            /* Item Amount */
            if ($("#ItemAmount").val() <= 0) {
                $("#ItemAmount").css('border-color', 'red');
                $(window).scrollTop(10);
                if (isValid) {
                    isValid = false;
                }
            }
            else {
                $("#ItemAmount").css('border-color', '');
            }

            /* Recurring */

            if ($("#ddlSelect").val() != null && $("#ddlSelect").val().trim() == 2) {

                if ($("#StartDate").val().trim() == "") {
                    $("#StartDate").css('border-color', 'red');
                    $(window).scrollTop(10);
                    if (isValid) {
                        isValid = false;
                    }
                }
                else {
                    $("#StartDate").css('border-color', '');
                }

            }
            /* Single */
            if ($("#ddlSelect").val() != null && $("#ddlSelect").val().trim() == 1) {
                $("#StartDate").css('border-color', '');
            }

            if (isValid) {
                $('#hdfSaveClose').val(a);
                $("#form_FranchiseeTrasaction").submit();
            }
        }




        function FranchiseeSupplybyId(id) {

            debugger;

            var sUrl = "";
            if (id == 18) {
                sUrl = '@Url.Action("FranchiseDetailByFransSupplyId", "Franchise", new { area = "Portal" })?Id=' + id;
            }
            else {
                sUrl = '@Url.Action("FranchiseDetailAutoComplete", "Franchise", new { area = "Portal" })?franchiseid=' + $('#hdfFranchiseeId').val();
            }
            $.ajax({
                type: "GET",
                url: sUrl,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (res) {
                    debugger;
                    if (id == 18) {
                        $('#hdfSupplyTaxRate').val(res.SupplyTaxRate);
                        $('#hdfTaxRate').val(res.ContractTaxRate);
                        $('#spnFranchiseeAddress').html(res.Address1);
                        $('#spnFranchiseeCityStatePincode').html(res.City + ', ' + res.StateName + ' ' + res.PostalCode);
                    }
                    else {
                        $('#hdfSupplyTaxRate').val(res.SupplyTaxRate);
                        $('#hdfTaxRate').val(res.ContractTaxRate);
                        $('#hdfFranchiseeId').val(res.FranchiseeId);
                        $('#spnFranchiseeNumber').html(res.FranchiseeNo);
                        $('#spnFranchiseeName').html(res.Name);
                        $('#spnFranchiseeAddress').html(res.Address1);
                        $('#spnFranchiseeCityStatePincode').html(res.City + ', ' + res.StateName + ' ' + res.PostalCode);

                    }
                },
                error: function () {
                    alert("Content load failed.");
                }
            });
        }



    </script>
}




@*@model JKViewModels.Franchise.FranchiseeTransactionViewModel
    @{
        ViewBag.Title = "FranchiseeCredit";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }

    <style>
        .pad-right {
            padding-right: 0px;
        }

        #divCreditTransaction .input-sm {
            padding: 3px 3px !important;
        }
    </style>

    <form action="@Url.Action("AddNewCreditTransaction", "Franchise", new { area = "Portal" })" method="post">
        <div class="form form-horizontal" id="divCreditTransaction">
            <div class="custom-form portlet light">
                <div class="headerbox">
                    <div class="row">
                        <div class="col-md-12">
                            Franchisee Credit Transaction
                        </div>
                    </div>
                </div>
                <div class="portlet-body form">
                    <div class="form-body">
                        <div class="form-group">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="col-md-offset-2 col-md-2 control-label">
                                        <label>Transaction For</label>
                                    </div>
                                    <div class="col-md-5">
                                        <div class="ui-widget">
                                            <div class="input-icon right input-sm">
                                                <i class="icon-magnifier" style="margin-top: 1px; margin-right: 28px;"></i>
                                                <input id="input_Search" type="text" required name="customernumber" autocomplete="off" placeholder="Search Franchisee Name or Number" value="" class="form-control input-sm typeahead" style="margin-top: -5px;margin-left: -22px;" />
                                                @Html.HiddenFor(o => o.FranchiseeId, new { @class = "form-control input-sm date-picker", required = "required", id = "hdfFranchiseeId" })
                                                <input type="hidden" name="hdfTaxRate" id="hdfTaxRate" value="" />
                                                <input type="hidden" name="hdfSubTotal" id="hdfSubTotal" value="" />
                                                <input type="hidden" name="hdfTotal" id="hdfTotal" value="" />

                                            </div>
                                            <div id="container">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <hr />
                        <div class="form-group" style="border:1px solid #999999;">
                            <div class="form-group">
                                <div class="col-md-2 control-label" style="padding-top: 0px;">
                                    Franchisee No.:
                                </div>
                                <div class="col-md-3">
                                    <span id="spnFranchiseeNumber"></span>
                                </div>
                                <div class="col-md-offset-2 col-md-2 control-label" style="padding-top: 0px;">
                                    Address:
                                </div>
                                <div class="col-md-3">
                                    <span id="spnFranchiseeAddress"></span>
                                </div>
                            </div>
                            <div class="form-group">

                                <div class="col-md-2 control-label" style="padding-top: 0px;">
                                    Franchisee Name:
                                </div>
                                <div class="col-md-3">
                                    <span id="spnFranchiseeName"></span>
                                </div>
                                <div class="col-md-offset-4 col-md-3">
                                    <span id="spnFranchiseeCityStatePincode"></span>
                                </div>
                            </div>
                        </div>
                        <div class="form-group" style="border:1px solid #3598dc;padding-left: 0px;padding-right: 0px;">
                            <div class="form-group">
                                <div class="col-md-12">
                                    <div class="col-md-1 control-label pad-right">

                                    </div>
                                    <div class="col-md-3">
                                        <div class="input-group">
                                            <div class="icheck-inline" style="margin-top: 0px;">
                                                <label class="check-inline" style="margin-top: 6px;margin-right: 35px;">
                                                    <input type="radio" name="membership" value="1" class="i-checks" id="rdoSingleCredit" />
                                                    <span>Single</span>
                                                </label>

                                                <label class="check-inline" style="margin-top: 6px;">
                                                    <input type="radio" name="membership" value="0" class="i-checks" id="rdoRecurringCredit" />
                                                    <span>Recurring</span>
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    <div class="col-md-1 control-label pad-right">
                                        Date:
                                    </div>
                                    <div class="col-md-2">
                                        <div class="col-md-12 input-group date" data-date-format="mm/dd/yyyy">
                                            @Html.TextBoxFor(o => o.TransactionDate, new { @class = "form-control input-sm date-picker", required = "required" })
                                            <span class="input-group-btn cal-btn">
                                                <button class="btn default" type="button" style="margin-top: 3px;">
                                                    <i class="fa fa-calendar"></i>
                                                </button>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group" id="divReccNumOfPayments">
                                <div class="col-md-12">
                                    <div class="col-md-1 control-label" style="padding-left: 0px;padding-right: 0px;">
                                        No of Payment:
                                    </div>
                                    <div class="col-md-1">
                                        @Html.TextBoxFor(o => o.NumOfPayments, new { @class = "form-control input-sm", maxlength = 3,onchange = "CalculateAmount()" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    <div class="col-md-1 control-label pad-right">
                                        Type:
                                    </div>
                                    <div class="col-md-2">
                                        @Html.DropDownListFor(model => model.ServiceTypeListId, (SelectList)ViewBag.ServiceTypeList, "Select", new { @class = "form-control input-sm" })
                                    </div>
                                    <div class="col-md-1 control-label pad-right">
                                        Reason:
                                    </div>
                                    <div class="col-md-2">
                                        @Html.DropDownList("slReasonList", (SelectList)ViewBag.ReasonList, "-Select-", new { @class = "form-control input-sm", @id = "select_ReasonList", required = "required", oninvalid = "setCustomValidity('Please Select Reason.')", oninput = "setCustomValidity('')" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    <div class="col-md-1 control-label pad-right">
                                        Description:
                                    </div>
                                    <div class="col-md-9">
                                        @Html.TextBoxFor(o => o.Description, new { @class = "form-control input-sm", required = "required" })
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    <div class="col-md-1 control-label pad-right">
                                        Quantity:
                                    </div>
                                    <div class="col-md-1">
                                        @Html.TextBoxFor(o => o.Quantity, new { @class = "form-control input-sm", required = "required", onchange = "CalculateAmount()", maxlength = 3 })
                                    </div>
                                    <div class="col-md-1 control-label pad-right">
                                        Item Amt:
                                    </div>
                                    <div class="col-md-1">
                                        @Html.TextBoxFor(o => o.ItemAmount, new { @class = "form-control input-sm", id="ItemAmount",  required = "required", onchange = "CalculateAmount()", maxlength = 12 })
                                    </div>
                                    <div class="col-md-1 control-label pad-right">
                                        Sub-Total:
                                    </div>
                                    <div class="col-md-1">
                                        @Html.TextBoxFor(o => o.Subtotal, new { @class = "form-control input-sm", required = "required", @readonly = "readonly" })
                                    </div>
                                    <div class="col-md-1 control-label pad-right">
                                        Tax:
                                    </div>
                                    <div class="col-md-1">
                                        @Html.TextBoxFor(o => o.Tax, new { @class = "form-control input-sm", required = "required", @readonly = "readonly" })
                                    </div>
                                    <div class="col-md-1 control-label pad-right">
                                        Total:
                                    </div>
                                    <div class="col-md-1">
                                        @Html.TextBoxFor(o => o.Total, new { @class = "form-control input-sm", required = "required", @readonly = "readonly" })
                                    </div>
                                </div>
                            </div>
                            <hr style="margin-bottom: 0px;" />
                            <div class="form-group" id="divRecc">
                                <div class="col-md-12">
                                    <div class="col-md-1 control-label pad-right">
                                        Status:
                                    </div>
                                    <div class="col-md-2">
                                        @Html.DropDownListFor(model => model.StatusListId, (SelectList)ViewBag.StatusList, "Select", new { @class = "form-control input-sm" })
                                    </div>
                                    <div class="col-md-1 control-label pad-right">
                                        Start Date:
                                    </div>
                                    <div class="col-md-2">
                                        <div class="col-md-12 input-group date" data-date-format="mm/dd/yyyy">
                                            @Html.TextBoxFor(o => o.StartDate, new { @class = "form-control input-sm date-picker", required = "required" })
                                            <span class="input-group-btn cal-btn">
                                                <button class="btn default" type="button" style="margin-top: 3px;">
                                                    <i class="fa fa-calendar"></i>
                                                </button>
                                            </span>
                                        </div>
                                    </div>
                                    <div class="col-md-1 control-label pad-right" style="padding: 5px;padding-right: 0px;">
                                        Payments Billed:
                                    </div>
                                    <div class="col-md-1">
                                        @Html.TextBoxFor(o => o.PaymentsBilled, new { @class = "form-control input-sm", @readonly = "readonly" })
                                    </div>
                                    <div class="col-md-1 control-label pad-right">
                                        Gross Total:
                                    </div>
                                    <div class="col-md-1">
                                        @Html.TextBoxFor(o => o.GrossTotal, new { @class = "form-control input-sm", @readonly = "readonly" })
                                    </div>
                                    <br />
                                    <div class="row">
                                        <div class="row">
                                            <hr style="margin-bottom: 0px;" />
                                        </div>
                                    </div>

                                </div>

                            </div>
                            <div class="form-group">
                                <div class="col-md-12">
                                    <div class="col-md-6"></div>
                                    <div class="col-md-2">
                                        <input type="submit" class="col-md-12 btn btn-primary button-next" value="Save & New" id="btnClear" name="SaveNew" />
                                    </div>
                                    <div class="col-md-2">
                                        <input type="submit" class="col-md-12 btn btn-primary button-next" value="Save & Close" id="btnProcess" name="SaveClose" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
    @section pageplugins{
        <script src="@Url.Content("~/Content/admin/assets/global/plugins/select2/js/select2.full.min.js")" type="text/javascript"></script>
        <script src="@Url.Content("~/Content/admin/assets/global/plugins/jquery-validation/js/jquery.validate.min.js")" type="text/javascript"></script>
        <script src="@Url.Content("~/Content/admin/assets/global/plugins/jquery-validation/js/additional-methods.min.js")" type="text/javascript"></script>
        <script src="@Url.Content("~/Content/admin/assets/global/plugins/bootstrap-wizard/jquery.bootstrap.wizard.min.js")" type="text/javascript"></script>
        <script src="@Url.Content("~/Content/admin/assets/global/plugins/jquery-inputmask/jquery.inputmask.bundle.min.js")" type="text/javascript"></script>
        <script src="@Url.Content("~/Content/admin/assets/global/plugins/bootstrap-typeahead/bootstrap3-typeahead.min.js")" type="text/javascript"></script>
    }
    @section scripts{
        <script src="@Url.Content("~/Content/admin/assets/pages/scripts/components-date-time-pickers.min.js")" type="text/javascript"></script>
        <script>
            $(document).ready(function () {
                $(".input-group-btn").click(function () {
                    $(this).prev().trigger("focus");
                    $(this).prev().trigger("focus");
                });
                $("#rdoSingleCredit").prop("checked", true);
                $("#StartDate").prop("required", false);
                $("#divRecc").hide();
                $("#divReccNumOfPayments").hide();
                $("#rdoSingleCredit").change(function () {
                    if (this.value == 1) {
                        $("#rdoSingleCredit").prop("checked", true);
                        $("#rdoRecurringCredit").prop("checked", false);
                        $("#divRecc").hide();
                        $("#StartDate").prop("required", false);
                        $("#divReccNumOfPayments").hide();
                    }
                });
                applyMaskCurrency($("#ItemAmount"));
                applyMaskCurrency($("#Subtotal"));
                applyMaskCurrency($("#Total"));
                applyMaskCurrency($("#GrossTotal"));
                applyMaskCurrency($("#Tax"));
                applyMaskCurrency($("#PaymentsBilled"));
                $("#rdoRecurringCredit").change(function () {
                    if (this.value == 0) {
                        $("#rdoSingleCredit").prop("checked", false);
                        $("#rdoRecurringCredit").prop("checked", true);
                        $("#divRecc").show();
                        $("#StartDate").prop("required", true);
                        $("#divReccNumOfPayments").show();
                    }
                });


                function applyAutoSeacrh() {
                     $.blockUI()
                    $.ajax({
                        type: "GET",
                        url: '@Url.Action("GetAllFranchisees", "Franchise", new { area = "Portal" })',
                        data: {},
                        success: function (data) {
                            var typeaheadSource = [];
                            $.each(data, function (key, value) {
                                typeaheadSource.push({ id: value.FranchiseeId, name: value.FranchiseeNo + ' ' + value.Name })
                            });

                            $('#input_Search').typeahead({
                                source: typeaheadSource,
                                updater: function (item) {
                                     $.ajax({
                                        type: "GET",
                                        url: '@Url.Action("FranchiseDetailAutoComplete", "Franchise", new { area = "Portal" })?franchiseid=' + item.id,
                                        success: function (res) {
                                            console.log(res);
                                            $('#hdfTaxRate').val(res.ContractTaxRate);
                                            $('#hdfFranchiseeId').val(res.FranchiseeId);
                                            $('#spnFranchiseeNumber').html(res.FranchiseeNo);
                                            $('#spnFranchiseeName').html(res.Name);
                                            $('#spnFranchiseeAddress').html(res.Address1);
                                            $('#spnFranchiseeCityStatePincode').html(res.City + ', ' + res.StateName + ' ' + res.PostalCode);
                                        }
                                    });
                                    return item;
                                }
                            }).focus();
                        }
                    });
                    $.unblockUI();
                }
                applyAutoSeacrh();





                onlyDecimal('#ItemAmount');
                OnlyNumber('#Quantity');
                OnlyNumber('#NumOfPayments');
            })

            function CalculateAmount() {
                var temptaxRate = parseFloat($("#hdfTaxRate").val());
                var tempItemQuantity = parseFloat($("#Quantity").val());
                //var itemData = $("#ItemAmount").val().replace('$', '').replace(' ', '').replace(',', '');
                var itemData = (isNaN($("#ItemAmount").val())) ? 0 : parseFloat($("#ItemAmount").val())
                var tempItemAmount = itemData;
                var tempSubtotal = parseFloat($("#Subtotal").val());
                var tempTax = $("#Tax").val() == "" ? 0 : parseFloat($("#Tax").val())
                var tempTotal = parseFloat($("#Total").val());
                var tempGrossTotal = parseFloat($("#GrossTotal").val());
                var tempNumOfPayments = (isNaN($("#NumOfPayments"))) ? 0 : $("#NumOfPayments").val();
                var tempGrossTotal = (tempNumOfPayments * tempItemAmount);

                $("#Subtotal").val(tempItemQuantity * tempItemAmount);
                $("#Tax").val(parseFloat(tempSubtotal * temptaxRate / 100));
                $("#Total").val((tempItemQuantity * tempItemAmount) + tempTax);




            };
            function onlyDecimal(id) {
                $(id).keydown(function (event) {
                    if (event.shiftKey == true) { event.preventDefault(); }
                    if ((event.keyCode >= 48 && event.keyCode <= 57) || (event.keyCode >= 96 && event.keyCode <= 105) || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 37 || event.keyCode == 39 || event.keyCode == 46 || event.keyCode == 190 || event.keyCode == 110) { }
                    else { event.preventDefault(); }
                    //if ($(this).val().indexOf(varfind) != -1 && (event.keyCode == 190 || event.keyCode == 110)) event.preventDefault();
                    if ($("this:contains('.')").length > 0 && (event.keyCode == 190 || event.keyCode == 110)) event.preventDefault();


                });
            }
            function OnlyNumber(id) {
                $(id).keydown(function (event) {
                    if (event.shiftKey == true) { event.preventDefault(); }
                    if ((event.keyCode >= 48 && event.keyCode <= 57) || (event.keyCode >= 96 && event.keyCode <= 105) || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 37 || event.keyCode == 39 || event.keyCode == 46) { }
                    else { event.preventDefault(); }
                });
            }
            function applyMaskCurrency(id) {
                $(id).inputmask("currency", {
                    alias: 'currency',
                    prefix: '$ ',
                    digits: 2,
                    autoUnmask: true,
                    removeMaskOnSubmit: true,
                    unmaskAsNumber: true,
                    allowPlus: false,
                    allowMinus: false,
                    autoGroup: true,
                    groupSeparator: ",",
                });
            }
        </script>
    }*@